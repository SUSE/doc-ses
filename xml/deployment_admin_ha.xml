<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha-admin-ha">
 <title>&adm; HA Setup</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:editurl>https://github.com/SUSE/doc-ses/edit/master/xml/</dm:editurl>
   <dm:translation>yes</dm:translation>
   <dm:release>SES 6</dm:release>
  </dm:docmanager>
 </info>
 <para>
  The <emphasis>&adm;</emphasis> is a &ceph; cluster node where the &smaster;
  service runs. It is a central point of the cluster because it manages the
  rest of the cluster nodes by querying and instructing their &sminion;
  services. It usually includes other services as well, for example the
  &dashboard; Web UI with the <emphasis>&grafana;</emphasis> dashboard backed
  by the <emphasis>&prometheus;</emphasis> monitoring toolkit.
  <remark>2020-03-18 tbazant: still true? should dashbboard and prometheus/grafana be on the admin node</remark>
 </para>
 <para>
  In case of &adm; failure, you usually need to provide new working hardware
  for the node and restore the complete cluster configuration stack from a
  recent backup. Such a method is time consuming and causes cluster outage.
 </para>
 <para>
  To prevent the &ceph; cluster performance downtime caused by the &adm;
  failure, we recommend making use of a &ha; (HA) cluster for the &ceph; &adm;.
 </para>
 <sect1 xml:id="admin-ha-architecture">
  <title>Outline of the HA Cluster for &adm;</title>

  <para>
   The idea of an HA cluster is that in case of one cluster node failing, the
   other node automatically takes over its role, including the virtualized
   &adm;. This way, other &ceph; cluster nodes do not notice that the &adm;
   failed.
  </para>

  <para>
   The minimal HA solution for the &adm; requires the following hardware:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     Two bare metal servers able to run &sle; with the &ha; extension and
     virtualize the &adm;.
    </para>
   </listitem>
   <listitem>
    <para>
     Two or more redundant network communication paths, for example via Network
     Device Bonding.
    </para>
   </listitem>
   <listitem>
    <para>
     Shared storage to host the disk image(s) of the &adm; virtual machine. The
     shared storage needs to be accessible from both servers. It can be, for
     example, an NFS export, a Samba share, or &iscsi; target.
    </para>
   </listitem>
  </itemizedlist>

  <para>
   Find more details on the cluster requirements at
   <link
    xlink:href="https://documentation.suse.com/sle-ha/15-SP2/single-html/SLE-HA-install-quick/#sec-ha-inst-quick-req"/>.
  </para>

  <figure>
   <title>2-Node HA Cluster for &adm;</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="ceph_admin_ha1.png" width="60%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="ceph_admin_ha1.png" width="60%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>
 </sect1>
 <sect1 xml:id="admin-ha-cluster">
  <title>Building a HA Cluster with the &adm;</title>

  <para>
   The following procedure summarizes the most important steps of building the
   HA cluster for virtualizing the &adm;. For details, refer to the indicated
   links.
  </para>

  <procedure>
   <step>
    <para>
     Set up a basic 2-node HA cluster with shared storage as described in
     <link
      xlink:href="https://documentation.suse.com/sle-ha/15-SP2/single-html/SLE-HA-install-quick/#art-sleha-install-quick"/>.
    </para>
   </step>
   <step>
    <para>
     On both cluster nodes, install all packages required for running the &kvm;
     hypervisor and the &libvirt; toolkit as described in
     <link
      xlink:href="https://documentation.suse.com/sles/15-SP2/single-html/SLES-virtualization/#sec-vt-installation-kvm"/>.
    </para>
   </step>
   <step>
    <para>
     On the first cluster node, create a new &kvm; virtual machine (VM) making
     use of &libvirt; as described in
     <link
      xlink:href="https://documentation.suse.com/sles/15-SP1/single-html/SLES-virtualization/#sec-libvirt-inst-virt-install"/>.
     Use the preconfigured shared storage to store the disk images of the VM.
    </para>
   </step>
   <step>
    <para>
     After the VM setup is complete, export its configuration to an XML file on
     the shared storage. Use the following syntax:
    </para>
<screen>
&prompt.root;virsh dumpxml <replaceable>VM_NAME</replaceable> > /path/to/shared/vm_name.xml
</screen>
   </step>
   <step>
    <para>
     Create a resource for the &adm; VM. Refer to
     <link
      xlink:href="https://documentation.suse.com/sle-ha/15-SP1/single-html/SLE-HA-guide/#cha-conf-hawk2"/>
     for general info on creating HA resources. Detailed info on creating
     resources for a &kvm; virtual machine is described in
     <link
      xlink:href="http://www.linux-ha.org/wiki/VirtualDomain_%28resource_agent%29"/>.
    </para>
   </step>
   <step>
    <para>
     On the newly-created VM guest, deploy the &adm; including the additional
     services you need there. Follow the relevant steps in
     DEAD LINK. At the same time, deploy the
     remaining &ceph; cluster nodes on the non-HA cluster servers.
    </para>
   </step>
  </procedure>
 </sect1>
</chapter>
