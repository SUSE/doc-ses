<?xml version="1.0"?>
<sect1 xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:lang="en" xml:id="man-ceph-volume-ceph-volume----ceph-osd-deployment-and-inspection-tool">
  <title>ceph-volume -- Ceph OSD deployment and inspection tool</title>
  <para>
    ceph-volume
  </para>
  <sect2 xml:id="man-ceph-volume-synopsis">
    <title>Synopsis</title>
<screen><emphasis role="strong">ceph-volume</emphasis> [-h] [--cluster CLUSTER] [--log-level LOG_LEVEL]
                [--log-path LOG_PATH]</screen>
    <para>
      <emphasis role="strong">ceph-volume</emphasis>
      <emphasis role="strong">inventory</emphasis>
    </para>
<screen><emphasis role="strong">ceph-volume</emphasis> <emphasis role="strong">lvm</emphasis> [ <emphasis>trigger</emphasis> | <emphasis>create</emphasis> | <emphasis>activate</emphasis> | <emphasis>prepare</emphasis>
<emphasis>zap</emphasis> | <emphasis>list</emphasis> | <emphasis>batch</emphasis>]</screen>
    <para>
      <emphasis role="strong">ceph-volume</emphasis>
      <emphasis role="strong">simple</emphasis> [
      <emphasis>trigger</emphasis> | <emphasis>scan</emphasis> |
      <emphasis>activate</emphasis> ]
    </para>
  </sect2>
  <sect2 xml:id="man-ceph-volume-description">
    <title>Description</title>
    <para>
      <literal>ceph-volume</literal> is a single purpose command line
      tool to deploy logical volumes as OSDs, trying to maintain a
      similar API to <literal>ceph-disk</literal> when preparing,
      activating, and creating OSDs.
    </para>
    <para>
      It deviates from <literal>ceph-disk</literal> by not interacting
      or relying on the udev rules that come installed for Ceph. These
      rules allow automatic detection of previously setup devices that
      are in turn fed into <literal>ceph-disk</literal> to activate
      them.
    </para>
  </sect2>
  <sect2 xml:id="man-ceph-volume-commands">
    <title>Commands</title>
    <sect3 xml:id="man-ceph-volume-inventory">
      <title>inventory</title>
      <para>
        This subcommand provides information about a host's physical
        disc inventory and reports metadata about these discs. Among
        this metadata one can find disc specific data items (like model,
        size, rotational or solid state) as well as data items specific
        to ceph using a device, such as if it is available for use with
        ceph or if logical volumes are present.
      </para>
      <para>
        Examples:
      </para>
      <programlisting>
ceph-volume inventory
ceph-volume inventory /dev/sda
ceph-volume inventory --format json-pretty
</programlisting>
      <para>
        Optional arguments:
      </para>
      <itemizedlist>
        <listitem>
          <para>
            [-h, --help] show the help message and exit
          </para>
        </listitem>
        <listitem>
          <variablelist>
            <varlistentry>
              <term>
                [--format] report format, valid values are
                <literal>plain</literal> (default),
              </term>
              <listitem>
                <para>
                  <literal>json</literal> and
                  <literal>json-pretty</literal>
                </para>
              </listitem>
            </varlistentry>
          </variablelist>
        </listitem>
      </itemizedlist>
    </sect3>
    <sect3 xml:id="man-ceph-volume-lvm">
      <title>lvm</title>
      <para>
        By making use of LVM tags, the <literal>lvm</literal>
        sub-command is able to store and later re-discover and query
        devices associated with OSDs so that they can later activated.
      </para>
      <para>
        Subcommands:
      </para>
      <para>
        <emphasis role="strong">batch</emphasis> Creates OSDs from a
        list of devices using a <literal>filestore</literal> or
        <literal>bluestore</literal> (default) setup. It will create all
        necessary volume groups and logical volumes required to have a
        working OSD.
      </para>
      <para>
        Example usage with three devices:
      </para>
      <programlisting>
ceph-volume lvm batch --bluestore /dev/sda /dev/sdb /dev/sdc
</programlisting>
      <para>
        Optional arguments:
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>
            [-h, --help] show the help message and exit
          </para>
        </listitem>
        <listitem>
          <para>
            [--bluestore] Use the bluestore objectstore (default)
          </para>
        </listitem>
        <listitem>
          <para>
            [--filestore] Use the filestore objectstore
          </para>
        </listitem>
        <listitem>
          <para>
            [--yes] Skip the report and prompt to continue provisioning
          </para>
        </listitem>
        <listitem>
          <para>
            [--prepare] Only prepare OSDs, do not activate
          </para>
        </listitem>
        <listitem>
          <para>
            [--dmcrypt] Enable encryption for the underlying OSD devices
          </para>
        </listitem>
        <listitem>
          <para>
            [--crush-device-class] Define a CRUSH device class to assign
            the OSD to
          </para>
        </listitem>
        <listitem>
          <para>
            [--no-systemd] Do not enable or create any systemd units
          </para>
        </listitem>
        <listitem>
          <para>
            [--osds-per-device] Provision more than 1 (the default) OSD
            per device
          </para>
        </listitem>
        <listitem>
          <para>
            [--report] Report what the potential outcome would be for
            the current input (requires devices to be passed in)
          </para>
        </listitem>
        <listitem>
          <para>
            [--format] Output format when reporting (used along with
            --report), can be one of 'pretty' (default) or 'json'
          </para>
        </listitem>
        <listitem>
          <para>
            [--block-db-size] Set (or override) the
            "bluestore_block_db_size" value, in bytes
          </para>
        </listitem>
        <listitem>
          <para>
            [--journal-size] Override the "osd_journal_size"
            value, in megabytes
          </para>
        </listitem>
      </itemizedlist>
      <para>
        Required positional arguments:
      </para>
      <itemizedlist>
        <listitem>
          <variablelist>
            <varlistentry>
              <term>
                &lt;DEVICE&gt; Full path to a raw device, like
                <literal>/dev/sda</literal>. Multiple
              </term>
              <listitem>
                <para>
                  <literal>&lt;DEVICE&gt;</literal> paths can be passed
                  in.
                </para>
              </listitem>
            </varlistentry>
          </variablelist>
        </listitem>
      </itemizedlist>
      <para>
        <emphasis role="strong">activate</emphasis> Enables a systemd
        unit that persists the OSD ID and its UUID (also called
        <literal>fsid</literal> in Ceph CLI tools), so that at boot time
        it can understand what OSD is enabled and needs to be mounted.
      </para>
      <para>
        Usage:
      </para>
      <programlisting>
ceph-volume lvm activate --bluestore &lt;osd id&gt; &lt;osd fsid&gt;
</programlisting>
      <para>
        Optional Arguments:
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>
            [-h, --help] show the help message and exit
          </para>
        </listitem>
        <listitem>
          <para>
            [--auto-detect-objectstore] Automatically detect the
            objectstore by inspecting the OSD
          </para>
        </listitem>
        <listitem>
          <para>
            [--bluestore] bluestore objectstore (default)
          </para>
        </listitem>
        <listitem>
          <para>
            [--filestore] filestore objectstore
          </para>
        </listitem>
        <listitem>
          <para>
            [--all] Activate all OSDs found in the system
          </para>
        </listitem>
        <listitem>
          <para>
            [--no-systemd] Skip creating and enabling systemd units and
            starting of OSD services
          </para>
        </listitem>
      </itemizedlist>
      <para>
        Multiple OSDs can be activated at once by using the (idempotent)
        <literal>--all</literal> flag:
      </para>
      <programlisting>
ceph-volume lvm activate --all
</programlisting>
      <para>
        <emphasis role="strong">prepare</emphasis> Prepares a logical
        volume to be used as an OSD and journal using a
        <literal>filestore</literal> or <literal>bluestore</literal>
        (default) setup. It will not create or modify the logical
        volumes except for adding extra metadata.
      </para>
      <para>
        Usage:
      </para>
      <programlisting>
ceph-volume lvm prepare --filestore --data &lt;data lv&gt; --journal &lt;journal device&gt;
</programlisting>
      <para>
        Optional arguments:
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>
            [-h, --help] show the help message and exit
          </para>
        </listitem>
        <listitem>
          <para>
            [--journal JOURNAL] A logical group name, path to a logical
            volume, or path to a device
          </para>
        </listitem>
        <listitem>
          <para>
            [--bluestore] Use the bluestore objectstore (default)
          </para>
        </listitem>
        <listitem>
          <para>
            [--block.wal] Path to a bluestore block.wal logical volume
            or partition
          </para>
        </listitem>
        <listitem>
          <para>
            [--block.db] Path to a bluestore block.db logical volume or
            partition
          </para>
        </listitem>
        <listitem>
          <para>
            [--filestore] Use the filestore objectstore
          </para>
        </listitem>
        <listitem>
          <para>
            [--dmcrypt] Enable encryption for the underlying OSD devices
          </para>
        </listitem>
        <listitem>
          <para>
            [--osd-id OSD_ID] Reuse an existing OSD id
          </para>
        </listitem>
        <listitem>
          <para>
            [--osd-fsid OSD_FSID] Reuse an existing OSD fsid
          </para>
        </listitem>
        <listitem>
          <para>
            [--crush-device-class] Define a CRUSH device class to assign
            the OSD to
          </para>
        </listitem>
      </itemizedlist>
      <para>
        Required arguments:
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>
            --data A logical group name or a path to a logical volume
          </para>
        </listitem>
      </itemizedlist>
      <para>
        For encrypting an OSD, the <literal>--dmcrypt</literal> flag
        must be added when preparing (also supported in the
        <literal>create</literal> sub-command).
      </para>
      <para>
        <emphasis role="strong">create</emphasis> Wraps the two-step
        process to provision a new osd (calling
        <literal>prepare</literal> first and then
        <literal>activate</literal>) into a single one. The reason to
        prefer <literal>prepare</literal> and then
        <literal>activate</literal> is to gradually introduce new OSDs
        into a cluster, and avoiding large amounts of data being
        rebalanced.
      </para>
      <para>
        The single-call process unifies exactly what
        <literal>prepare</literal> and <literal>activate</literal> do,
        with the convenience of doing it all at once. Flags and general
        usage are equivalent to those of the <literal>prepare</literal>
        and <literal>activate</literal> subcommand.
      </para>
      <para>
        <emphasis role="strong">trigger</emphasis> This subcommand is
        not meant to be used directly, and it is used by systemd so that
        it proxies input to <literal>ceph-volume lvm activate</literal>
        by parsing the input from systemd, detecting the UUID and ID
        associated with an OSD.
      </para>
      <para>
        Usage:
      </para>
      <programlisting>
ceph-volume lvm trigger &lt;SYSTEMD-DATA&gt;
</programlisting>
      <para>
        The systemd "data" is expected to be in the format of:
      </para>
      <programlisting>
&lt;OSD ID&gt;-&lt;OSD UUID&gt;
</programlisting>
      <para>
        The lvs associated with the OSD need to have been prepared
        previously, so that all needed tags and metadata exist.
      </para>
      <para>
        Positional arguments:
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>
            &lt;SYSTEMD_DATA&gt; Data from a systemd unit containing ID
            and UUID of the OSD.
          </para>
        </listitem>
      </itemizedlist>
      <para>
        <emphasis role="strong">list</emphasis> List devices or logical
        volumes associated with Ceph. An association is determined if a
        device has information relating to an OSD. This is verified by
        querying LVM's metadata and correlating it with devices.
      </para>
      <para>
        The lvs associated with the OSD need to have been prepared
        previously by ceph-volume so that all needed tags and metadata
        exist.
      </para>
      <para>
        Usage:
      </para>
      <programlisting>
ceph-volume lvm list
</programlisting>
      <para>
        List a particular device, reporting all metadata about it:
      </para>
      <programlisting>
ceph-volume lvm list /dev/sda1
</programlisting>
      <para>
        List a logical volume, along with all its metadata (vg is a
        volume group, and lv the logical volume name):
      </para>
      <programlisting>
ceph-volume lvm list {vg/lv}
</programlisting>
      <para>
        Positional arguments:
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>
            &lt;DEVICE&gt; Either in the form of
            <literal>vg/lv</literal> for logical volumes,
            <literal>/path/to/sda1</literal> or
            <literal>/path/to/sda</literal> for regular devices.
          </para>
        </listitem>
      </itemizedlist>
      <para>
        <emphasis role="strong">zap</emphasis> Zaps the given logical
        volume or partition. If given a path to a logical volume it must
        be in the format of vg/lv. Any file systems present on the given
        lv or partition will be removed and all data will be purged.
      </para>
      <para>
        However, the lv or partition will be kept intact.
      </para>
      <para>
        Usage, for logical volumes:
      </para>
      <programlisting>
ceph-volume lvm zap {vg/lv}
</programlisting>
      <para>
        Usage, for logical partitions:
      </para>
      <programlisting>
ceph-volume lvm zap /dev/sdc1
</programlisting>
      <para>
        For full removal of the device use the
        <literal>--destroy</literal> flag (allowed for all device
        types):
      </para>
      <programlisting>
ceph-volume lvm zap --destroy /dev/sdc1
</programlisting>
      <para>
        Multiple devices can be removed by specifying the OSD ID and/or
        the OSD FSID:
      </para>
      <programlisting>
ceph-volume lvm zap --destroy --osd-id 1
ceph-volume lvm zap --destroy --osd-id 1 --osd-fsid C9605912-8395-4D76-AFC0-7DFDAC315D59
</programlisting>
      <para>
        Positional arguments:
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>
            &lt;DEVICE&gt; Either in the form of
            <literal>vg/lv</literal> for logical volumes,
            <literal>/path/to/sda1</literal> or
            <literal>/path/to/sda</literal> for regular devices.
          </para>
        </listitem>
      </itemizedlist>
    </sect3>
    <sect3 xml:id="man-ceph-volume-simple">
      <title>simple</title>
      <para>
        Scan legacy OSD directories or data devices that may have been
        created by ceph-disk, or manually.
      </para>
      <para>
        Subcommands:
      </para>
      <para>
        <emphasis role="strong">activate</emphasis> Enables a systemd
        unit that persists the OSD ID and its UUID (also called
        <literal>fsid</literal> in Ceph CLI tools), so that at boot time
        it can understand what OSD is enabled and needs to be mounted,
        while reading information that was previously created and
        persisted at <literal>/etc/ceph/osd/</literal> in JSON format.
      </para>
      <para>
        Usage:
      </para>
      <programlisting>
ceph-volume simple activate --bluestore &lt;osd id&gt; &lt;osd fsid&gt;
</programlisting>
      <para>
        Optional Arguments:
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>
            [-h, --help] show the help message and exit
          </para>
        </listitem>
        <listitem>
          <para>
            [--bluestore] bluestore objectstore (default)
          </para>
        </listitem>
        <listitem>
          <para>
            [--filestore] filestore objectstore
          </para>
        </listitem>
      </itemizedlist>
      <para>
        Note: It requires a matching JSON file with the following
        format:
      </para>
      <programlisting>
/etc/ceph/osd/&lt;osd id&gt;-&lt;osd fsid&gt;.json
</programlisting>
      <para>
        <emphasis role="strong">scan</emphasis> Scan a running OSD or
        data device for an OSD for metadata that can later be used to
        activate and manage the OSD with ceph-volume. The scan method
        will create a JSON file with the required information plus
        anything found in the OSD directory as well.
      </para>
      <para>
        Optionally, the JSON blob can be sent to stdout for further
        inspection.
      </para>
      <para>
        Usage on all running OSDs:
      </para>
      <programlisting>
ceph-volume simple scan
</programlisting>
      <para>
        Usage on data devices:
      </para>
      <programlisting>
ceph-volume simple scan &lt;data device&gt;
</programlisting>
      <para>
        Running OSD directories:
      </para>
      <programlisting>
ceph-volume simple scan &lt;path to osd dir&gt;
</programlisting>
      <para>
        Optional arguments:
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>
            [-h, --help] show the help message and exit
          </para>
        </listitem>
        <listitem>
          <para>
            [--stdout] Send the JSON blob to stdout
          </para>
        </listitem>
        <listitem>
          <para>
            [--force] If the JSON file exists at destination, overwrite
            it
          </para>
        </listitem>
      </itemizedlist>
      <para>
        Optional Positional arguments:
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>
            &lt;DATA DEVICE or OSD DIR&gt; Actual data partition or a
            path to the running OSD
          </para>
        </listitem>
      </itemizedlist>
      <para>
        <emphasis role="strong">trigger</emphasis> This subcommand is
        not meant to be used directly, and it is used by systemd so that
        it proxies input to
        <literal>ceph-volume simple activate</literal> by parsing the
        input from systemd, detecting the UUID and ID associated with an
        OSD.
      </para>
      <para>
        Usage:
      </para>
      <programlisting>
ceph-volume simple trigger &lt;SYSTEMD-DATA&gt;
</programlisting>
      <para>
        The systemd "data" is expected to be in the format of:
      </para>
      <programlisting>
&lt;OSD ID&gt;-&lt;OSD UUID&gt;
</programlisting>
      <para>
        The JSON file associated with the OSD need to have been
        persisted previously by a scan (or manually), so that all needed
        metadata can be used.
      </para>
      <para>
        Positional arguments:
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>
            &lt;SYSTEMD_DATA&gt; Data from a systemd unit containing ID
            and UUID of the OSD.
          </para>
        </listitem>
      </itemizedlist>
    </sect3>
  </sect2>
  <sect2 xml:id="man-ceph-volume-availability">
    <title>Availability</title>
    <para>
      <literal>ceph-volume</literal> is part of Ceph, a massively
      scalable, open-source, distributed storage system. Please refer to
      the documentation at
      <link xlink:href="http://docs.ceph.com/">http://docs.ceph.com/</link>
      for more information.
    </para>
  </sect2>
  <sect2 xml:id="man-ceph-volume-see-also">
    <title>See also</title>
    <para>
      <literal>ceph-osd &lt;ceph-osd&gt;</literal>(8),
    </para>
  </sect2>
</sect1>
