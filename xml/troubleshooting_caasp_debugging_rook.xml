<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0"
 xml:id="atroubleshooting-caasp-debugging-rook">
<!-- ============================================================== -->
<title>Troubleshooting</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:editurl>https://github.com/SUSE/doc-ses/edit/master/xml/</dm:editurl>
   <dm:translation>yes</dm:translation>
   <dm:release>SES 7</dm:release>
  </dm:docmanager>
 </info>
 <sect1 xml:id="debugging-caasp-rook-methods">
   <title>How To Debug Rook</title>
   <para>
     There are a number of basic actions a user might need to take during
     debugging. These actions are defined here for reference when they are
     mentioned in more documentation below.
   </para>
   <important>
     <para>
       This document is not devoted to an in-depth explanation of what &kube;
       is, what its features are, how it is used, how to navigate it, or how
       to debug applications that run on it. This document will use &kube;
       terms, and users are expected to know how to look up &kube; information
       they do not already have. This document will give an outline of how
       to use &kube; tools to get any information needed in the &rookceph; context
       and, when relevant, will briefly explain how &rook; uses &kube; features.
     </para>
   </important>
   <sect2 xml:id="set-ops-log-debug">
     <title>Set Operator Log Level to Debug</title>
     <para>
       In general, the first place to look when encountering a failure is to
       get logs for the <systemitem class="systemname">rook-ceph-operator</systemitem> pod.
       To get the most informative logs possible, set the operator log level to
       <literal>DEBUG</literal>.
     </para>
     <para>
       To do this, modify Helm's <filename>values.yaml</filename> or modify
       the <filename>operator.yaml</filename> manifest. Regardless of the method
       chosen, the log level can always be set by editing the deployment
       directly with <command>kubectl</command>. For example:
     </para>
<screen>&prompt.kubeuser;kubectl --namespace rook-ceph edit deployment rook-ceph-operator</screen>
     <para>
       After editing the deployment, the operator pod will restart automatically
       and will start outputting logs with the new log level.
     </para>
     <note>
       <para>
         If you are experiencing a particular failure, it may take some time
         for the &rook; operator to reach the failure location again to report
         debug logs.
       </para>
     </note>
   </sect2>
   <sect2 xml:id="use-toolbox-pod">
     <title>Use The Toolbox Pod</title>
     <para>
       Use the &rook; toolbox pod to interface directly with the &ceph; cluster
       via the CLI. For example:
     </para>
<screen>&prompt.kubeuser;kubectl --namespace rook-ceph exec -it deploy/rook-ceph-tools -- bash</screen>
     <para>
       If the <systemitem class="systemname">rook-ceph-tools</systemitem> deployment
       does not exist, it should be created using the <filename>toolbox.yaml</filename> manifest.
     </para>
     <note>
       <para>
         To set log levels for &ceph; daemons, it is advised to use the &ceph;
         CLI from the <systemitem class="systemname">toolbox</systemitem> pod.
       </para>
     </note>
   </sect2>
   <sect2 xml:id="ses-supportutils-plugin-rook">
     <title>SES Supportutils Plugin</title>
     <para>
       The <literal>supportutils</literal> plugin for &productname; works with &rook; clusters.
       It is installed by the <filename>supportutils-plugin-ses</filename> package.
       The plugin collects container logs and more information about a
       &rookceph; cluster, making collection of logs easy. Once the logs are
       collected, you can browse the collected information and logs without
       needing to progressively collect more detailed information at each step.
     </para>
     <para>
       The <literal>supportutils</literal>plugin does not alter the &rook; log level to <literal>DEBUG</literal>,
       and it is advised to set this to <literal>DEBUG</literal> before running
       the plugin. The plugin also does not change any &ceph; log levels; also
       consider changing those if the failure merits it before running the plugin.
     </para>
<!-- 2020-09-29: asettle - need info on how to run plugin -->
   </sect2>
 </sect1>
 <sect1 xml:id="debugging-rook-methods">
   <title>Debugging Rook</title>
   <para><remark>TBD</remark></para>
 </sect1>
</chapter>
