<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="dashboard-initial-configuration">
 <title>Manual configuration</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:editurl>https://github.com/SUSE/doc-ses/edit/master/xml/</dm:editurl>
   <dm:translation>yes</dm:translation>
   <dm:release>SES 7</dm:release>
  </dm:docmanager>
 </info>
 <para>
  This section introduces advanced information for users that prefer
  configuring dashboard settings manually on the command line.
 </para>
 <sect1 xml:id="dashboard-ssl">
  <title>Configuring TLS/SSL support</title>

  <para>
   All HTTP connections to the dashboard are secured with SSL/TLS by default. A
   secure connection requires an SSL certificate. You can either use a
   self-signed certificate, or generate a certificate and have a well known
   certificate authority (CA) sign it.
  </para>

  <tip>
   <title>Disabling SSL</title>
   <para>
    You may want to disable the SSL support for a specific reason. For example,
    if the dashboard is running behind a proxy that does not support SSL.
   </para>
   <para>
    Use caution when disabling SSL as <emphasis role="bold">user names and
    passwords</emphasis> will be sent to the dashboard
    <emphasis role="bold">unencrypted</emphasis>.
   </para>
   <para>
    To disable SSL, run:
   </para>
<screen>
&prompt.cephuser;ceph config set mgr mgr/dashboard/ssl false
</screen>
  </tip>

  <tip>
   <title>Restarting the &mgr; processes</title>
   <para>
    You need to restart the &mgr; processes manually after changing the SSL
    certificate and key. You can do so by either running
   </para>
<screen>&prompt.cephuser;ceph mgr fail <replaceable>ACTIVE-MANAGER-NAME</replaceable></screen>
   <para>
    or by disabling and re-enabling the dashboard module, which also triggers
    the manager to respawn itself:
   </para>
<screen>
&prompt.cephuser;ceph mgr module disable dashboard
&prompt.cephuser;ceph mgr module enable dashboard
</screen>
  </tip>

  <sect2 xml:id="self-sign-certificates">
   <title>Creating self-signed certificates</title>
   <para>
    Creating a self-signed certificate for secure communication is simple. This
    way you can get the dashboard running quickly.
   </para>
   <note>
    <title>Web browsers complaint</title>
    <para>
     Most Web browsers will complain about a self-signed certificate and
     require explicit confirmation before establishing a secure connection to
     the dashboard.
    </para>
   </note>
   <para>
    To generate and install a self-signed certificate, use the following
    built-in command:
   </para>
<screen>
&prompt.cephuser;ceph dashboard create-self-signed-cert
</screen>
  </sect2>

  <sect2 xml:id="cert-sign-CA">
   <title>Using certificates signed by CA</title>
   <para>
    To properly secure the connection to the dashboard and to eliminate Web
    browser complaints about a self-signed certificate, we recommend using a
    certificate that is signed by a CA.
   </para>
   <para>
    You can generate a certificate key pair with a command similar to the
    following:
   </para>
<screen>
&prompt.root;openssl req -new -nodes -x509 \
  -subj "/O=IT/CN=ceph-mgr-dashboard" -days 3650 \
  -keyout dashboard.key -out dashboard.crt -extensions v3_ca
</screen>
   <para>
    The above command outputs <filename>dashboard.key</filename> and
    <filename>dashboard.crt</filename> files. After you get the
    <filename>dashboard.crt</filename> file signed by a CA, enable it for all
    &mgr; instances by running the following commands:
   </para>
<screen>
&prompt.cephuser;ceph config-key set mgr/dashboard/crt -i dashboard.crt
&prompt.cephuser;ceph config-key set mgr/dashboard/key -i dashboard.key
</screen>
   <tip>
    <title>Different certificates for each manager instance</title>
    <para>
     If you require different certificates for each &mgr; instance, modify the
     commands and include the name of the instance as follows. Replace
     <replaceable>NAME</replaceable> with the name of the &mgr; instance
     (usually the related host name):
    </para>
<screen>
&prompt.cephuser;ceph config-key set mgr/dashboard/<replaceable>NAME</replaceable>/crt -i dashboard.crt
&prompt.cephuser;ceph config-key set mgr/dashboard/<replaceable>NAME</replaceable>/key -i dashboard.key
</screen>
   </tip>
  </sect2>
 </sect1>
 <sect1 xml:id="dashboard-hostname-port">
  <title>Changing host name and port number</title>

  <para>
   The &dashboard; binds to a specific TCP/IP address and TCP port. By default,
   the currently active &mgr; that hosts the dashboard binds to TCP port 8443
   (or 8080 when SSL is disabled).
  </para>

  <note>
   <para>
    If a firewall is enabled on the hosts running &mgr; (and thus the
    &dashboard;), you may have to change the configuration to enable access to
    these ports. For more information on firewall settings for &ceph;, see
    <xref linkend="storage-bp-net-firewall"/>.
   </para>
  </note>

  <para>
   The &dashboard; binds to "::" by default, which corresponds to all available
   IPv4 and IPv6 addresses. You can change the IP address and port number of
   the Web application so that they apply to all &mgr; instances by using the
   following commands:
  </para>

<screen>
&prompt.cephuser;ceph config set mgr mgr/dashboard/server_addr <replaceable>IP_ADDRESS</replaceable>
&prompt.cephuser;ceph config set mgr mgr/dashboard/server_port <replaceable>PORT_NUMBER</replaceable>
</screen>

  <tip>
   <title>Configuring &mgr; instances separately</title>
   <para>
    Since each <systemitem class="daemon">ceph-mgr</systemitem> daemon hosts
    its own instance of the dashboard, you may need to configure them
    separately. Change the IP address and port number for a specific manager
    instance by using the following commands (replace
    <replaceable>NAME</replaceable> with the ID of the
    <systemitem class="daemon">ceph-mgr</systemitem> instance):
   </para>
<screen>
&prompt.cephuser;ceph config set mgr mgr/dashboard/<replaceable>NAME</replaceable>/server_addr <replaceable>IP_ADDRESS</replaceable>
&prompt.cephuser;ceph config set mgr mgr/dashboard/<replaceable>NAME</replaceable>/server_port <replaceable>PORT_NUMBER</replaceable>
</screen>
  </tip>

  <tip>
   <title>Listing configured endpoints</title>
   <para>
    The <command>ceph mgr services</command> command displays all endpoints
    that are currently configured. Look for the <literal>dashboard</literal>
    key to obtain the URL for accessing the dashboard.
   </para>
  </tip>
 </sect1>
 <sect1 xml:id="dashboard-username-password">
  <title>Adjusting user names and passwords</title>

  <para>
   If you do not want to use the default administrator account, create a
   different user account and associate it with at least one role. We provide a
   set of predefined system roles that you can use. For more details refer to
   <xref linkend="dashboard-user-roles" />.
  </para>

  <para>
   To create a user with administrator privileges, use the following command:
  </para>

<screen>
&prompt.cephuser;ceph dashboard ac-user-create <replaceable>USER_NAME</replaceable> <replaceable>PASSWORD</replaceable> administrator
</screen>
 </sect1>
 <sect1 xml:id="dashboard-ogw-enabling">
  <title>Enabling the &ogw; management front-end</title>

  <para>
   To use the &ogw; management functionality of the dashboard, you need to
   provide the login credentials of a user with the <option>system</option>
   flag enabled:
  </para>

  <procedure>
   <step>
    <para>
     If you do not have a user with the <option>system</option> flag, create
     one:
    </para>
<screen>
&prompt.cephuser;radosgw-admin user create --uid=<replaceable>USER_ID</replaceable> --display-name=<replaceable>DISPLAY_NAME</replaceable> --system
</screen>
    <para>
     Take note of the <replaceable>access_key</replaceable> and
     <replaceable>secret_key</replaceable> keys in the output of the command.
    </para>
   </step>
   <step>
    <para>
     You can also obtain the credentials of an existing user by using the
     <command>radosgw-admin</command> command:
    </para>
<screen>
&prompt.cephuser;radosgw-admin user info --uid=<replaceable>USER_ID</replaceable>
</screen>
   </step>
   <step>
    <para>
     Provide the received credentials to the dashboard:
    </para>
<screen>
&prompt.cephuser;ceph dashboard set-rgw-api-access-key <replaceable>ACCESS_KEY</replaceable>
&prompt.cephuser;ceph dashboard set-rgw-api-secret-key <replaceable>SECRET_KEY</replaceable>
</screen>
   </step>
  </procedure>

  <note>
   <para>
    By default the firewall is enabled in &sls; 15 SP2. For more information on
    firewall configuration, see <xref linkend="storage-bp-net-firewall"/>.
   </para>
  </note>

  <para>
   There are several points to consider:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     The host name and port number of the &ogw; are determined automatically.
    </para>
   </listitem>
   <listitem>
    <para>
     If multiple zones are used, it will automatically determine the host
     within the master zonegroup and master zone. This is sufficient for most
     setups, but in some circumstances you may want to set the host name and
     port manually:
    </para>
<screen>
&prompt.cephuser;ceph dashboard set-rgw-api-host <replaceable>HOST</replaceable>
&prompt.cephuser;ceph dashboard set-rgw-api-port <replaceable>PORT</replaceable>
</screen>
   </listitem>
   <listitem>
    <para>
     These are additional settings that you may need:
    </para>
<screen>
&prompt.cephuser;ceph dashboard set-rgw-api-scheme <replaceable>SCHEME</replaceable>  # http or https
&prompt.cephuser;ceph dashboard set-rgw-api-admin-resource <replaceable>ADMIN_RESOURCE</replaceable>
&prompt.cephuser;ceph dashboard set-rgw-api-user-id <replaceable>USER_ID</replaceable>
</screen>
   </listitem>
   <listitem>
    <para>
     If you are using a self-signed certificate
     (<xref linkend="dashboard-ssl" />) in your &ogw; setup, disable
     certificate verification in the dashboard to avoid refused connections
     caused by certificates signed by an unknown CA or not matching the host
     name:
    </para>
<screen>
&prompt.cephuser;ceph dashboard set-rgw-api-ssl-verify False
</screen>
   </listitem>
   <listitem>
    <para>
     If the &ogw; takes too long to process requests and the dashboard runs
     into timeouts, the timeout value can be adjusted (default is 45 seconds):
    </para>
<screen>
&prompt.cephuser;ceph dashboard set-rest-requests-timeout <replaceable>SECONDS</replaceable>
</screen>
   </listitem>
  </itemizedlist>
 </sect1>
 <sect1 xml:id="dashboard-iscsi-management">
  <title>Enabling &iscsi; management</title>

  <para>
   The &dashboard; manages &iscsi; targets using the REST API provided by the
   <systemitem class="service">rbd-target-api</systemitem> service of the
   &ceph; &iscsi; gateway. Ensure it is installed and enabled on &iscsi;
   gateways.
  </para>

  <note>
   <para>
    The &iscsi; management functionality of the &dashboard; depends on the
    latest version 3 of the <literal>ceph-iscsi</literal> project. Ensure that
    your operating system provides the correct version, otherwise the
    &dashboard; will not enable the management features.
   </para>
  </note>

  <para>
   If the <literal>ceph-iscsi</literal> REST API is configured in HTTPS mode
   and it is using a self-signed certificate, configure the dashboard to avoid
   SSL certificate verification when accessing ceph-iscsi API.
  </para>

  <para>
   Disable API SSL verification:
  </para>

<screen>&prompt.cephuser;ceph dashboard set-iscsi-api-ssl-verification false</screen>

  <para>
   Define the availabile &iscsi; gateways:
  </para>

<screen>&prompt.cephuser;ceph dashboard iscsi-gateway-list
&prompt.cephuser;ceph dashboard iscsi-gateway-add <replaceable>scheme</replaceable>://<replaceable>username</replaceable>:<replaceable>password</replaceable>@<replaceable>host</replaceable>[:port]
&prompt.cephuser;ceph dashboard iscsi-gateway-rm <replaceable>gateway_name</replaceable>
</screen>
 </sect1>
 <sect1 xml:id="dashboard-sso">
  <title>Enabling &sso;</title>

  <para>
   <emphasis>&sso;</emphasis> (SSO) is an access control method that enables
   users to log in with a single ID and password to multiple applications
   simultaneously.
  </para>

  <para>
   The &dashboard; supports external authentication of users via the SAML 2.0
   protocol. Because <emphasis>authorization</emphasis> is still performed by
   the dashboard, you first need to create user accounts and associate them
   with the desired roles. However, the <emphasis>authentication</emphasis>
   process can be performed by an existing <emphasis>Identity
   Provider</emphasis> (IdP).
  </para>

  <para>
   To configure &sso;, use the following command:
  </para>

<screen>
&prompt.cephuser;ceph dashboard sso setup saml2 <replaceable>CEPH_DASHBOARD_BASE_URL</replaceable> \
 <replaceable>IDP_METADATA</replaceable> <replaceable>IDP_USERNAME_ATTRIBUTE</replaceable> \
 <replaceable>IDP_ENTITY_ID</replaceable> <replaceable>SP_X_509_CERT</replaceable> \
 <replaceable>SP_PRIVATE_KEY</replaceable>
</screen>

  <para>
   Parameters:
  </para>

  <variablelist>
   <varlistentry>
    <term><replaceable>CEPH_DASHBOARD_BASE_URL</replaceable></term>
    <listitem>
     <para>
      Base URL where &dashboard; is accessible (for example,
      'https://cephdashboard.local').
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><replaceable>IDP_METADATA</replaceable></term>
    <listitem>
     <para>
      URL, file path, or content of the IdP metadata XML (for example,
      'https://myidp/metadata').
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><replaceable>IDP_USERNAME_ATTRIBUTE</replaceable></term>
    <listitem>
     <para>
      Optional. Attribute that will be used to get the user name from the
      authentication response. Defaults to 'uid'.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><replaceable>IDP_ENTITY_ID</replaceable></term>
    <listitem>
     <para>
      Optional. Use when more than one entity ID exists on the IdP metadata.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><replaceable>SP_X_509_CERT</replaceable> / <replaceable>SP_PRIVATE_KEY</replaceable></term>
    <listitem>
     <para>
      Optional. File path or content of the certificate that will be used by
      &dashboard; (Service Provider) for signing and encryption.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <note>
   <title>SAML requests</title>
   <para>
    The issuer value of SAML requests will follow this pattern:
   </para>
<screen>
<replaceable>CEPH_DASHBOARD_BASE_URL</replaceable>/auth/saml2/metadata
</screen>
  </note>

  <para>
   To display the current SAML 2.0 configuration, run:
  </para>

<screen>
&prompt.cephuser;ceph dashboard sso show saml2
</screen>

  <para>
   To disable &sso;, run:
  </para>

<screen>
&prompt.cephuser;ceph dashboard sso disable
</screen>

  <para>
   To check if SSO is enabled, run:
  </para>

<screen>
&prompt.cephuser;ceph dashboard sso status
</screen>

  <para>
   To enable SSO, run:
  </para>

<screen>
&prompt.cephuser;ceph dashboard sso enable saml2
</screen>
 </sect1>
</chapter>
