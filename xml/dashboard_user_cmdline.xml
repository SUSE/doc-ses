<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="dashboard-user-roles">
 <title>Managing Users and Roles on the Command Line</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:editurl>https://github.com/SUSE/doc-ses/edit/maintenance/ses6/xml/</dm:editurl>
   <dm:translation>yes</dm:translation>
   <dm:release>SES 6</dm:release>
  </dm:docmanager>
 </info>
 <para>
  This section describes how to manage user accounts used by the &dashboard;.
  It helps you create or modify user accounts, as well as set proper user roles
  and permissions.
 </para>
 <sect1 xml:id="dashboard-user-accounts">
  <title>User Accounts</title>

  <para>
   The &dashboard; supports managing multiple user accounts. Each user account
   consists of a user name, a password (stored in encrypted form using
   <literal>bcrypt</literal>), an optional name, and an optional e-mail
   address.
  </para>

  <para>
   User accounts are stored in &mon;â€™s configuration database and are
   globally shared across all &mgr; instances.
  </para>

  <para>
   Use the following commands to manage user accounts:
  </para>

  <variablelist>
   <varlistentry>
    <term>Show existing users:</term>
    <listitem>
<screen>
&prompt.cephuser;ceph dashboard ac-user-show [<replaceable>USERNAME</replaceable>]
</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Create a new user:</term>
    <listitem>
<screen>
&prompt.cephuser;ceph dashboard ac-user-create <replaceable>USERNAME</replaceable> [<replaceable>PASSWORD</replaceable>] [<replaceable>ROLENAME</replaceable>] [<replaceable>NAME</replaceable>] [<replaceable>EMAIL</replaceable>]
</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Delete a user:</term>
    <listitem>
<screen>
&prompt.cephuser;ceph dashboard ac-user-delete <replaceable>USERNAME</replaceable>
</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Change a user's password:</term>
    <listitem>
<screen>
&prompt.cephuser;ceph dashboard ac-user-set-password <replaceable>USERNAME</replaceable> <replaceable>PASSWORD</replaceable>
</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Modify a user's name and email:</term>
    <listitem>
<screen>
&prompt.cephuser;ceph dashboard ac-user-set-info <replaceable>USERNAME</replaceable> <replaceable>NAME</replaceable> <replaceable>EMAIL</replaceable>
</screen>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 xml:id="dashboard-permissions">
  <title>User Roles and Permissions</title>

  <para>
   This section describes what security scopes you can assign to a user role,
   how to manage user roles and assign them to user accounts.
  </para>

  <sect2>
   <title>Security Scopes</title>
   <para>
    User accounts are associated with a set of roles that define which parts of
    the dashboard can be accessed by the user. The dashboard parts are grouped
    within a <emphasis>security</emphasis> scope. Security scopes are
    predefined and static. The following security scopes are currently
    available:
   </para>
   <variablelist>
    <varlistentry>
     <term>hosts</term>
     <listitem>
      <para>
       Includes all features related to the <guimenu>Hosts</guimenu> menu
       entry.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>config-opt</term>
     <listitem>
      <para>
       Includes all features related to the management of &ceph; configuration
       options.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>pool</term>
     <listitem>
      <para>
       Includes all features related to pool management.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>osd</term>
     <listitem>
      <para>
       Includes all features related to the &osd; management.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>monitor</term>
     <listitem>
      <para>
       Includes all features related to the &mon; management.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rbd-image</term>
     <listitem>
      <para>
       Includes all features related to the &rbd; image management.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rbd-mirroring</term>
     <listitem>
      <para>
       Includes all features related to the &rbd; mirroring management.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>iscsi</term>
     <listitem>
      <para>
       Includes all features related to &iscsi; management.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw</term>
     <listitem>
      <para>
       Includes all features related to the &ogw; management.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>cephfs</term>
     <listitem>
      <para>
       Includes all features related to &cephfs; management.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>manager</term>
     <listitem>
      <para>
       Includes all features related to the &mgr; management.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>log</term>
     <listitem>
      <para>
       Includes all features related to &ceph; logs management.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>grafana</term>
     <listitem>
      <para>
       Includes all features related to the &grafana; proxy.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>dashboard-settings</term>
     <listitem>
      <para>
       Allows changing dashboard settings.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2>
   <title>User Roles</title>
   <para>
    A <emphasis>role</emphasis> specifies a set of mappings between a
    <emphasis>security scope</emphasis> and a set of
    <emphasis>permissions</emphasis>. There are four types of permissions:
    'read', 'create', 'update', and 'delete'.
   </para>
   <para>
    The following example specifies a role where a user has 'read' and 'create'
    permissions for features related to pool management, and has full
    permissions for features related to RBD image management:
   </para>
<screen>
{
  'role': 'my_new_role',
  'description': 'My new role',
  'scopes_permissions': {
    'pool': ['read', 'create'],
    'rbd-image': ['read', 'create', 'update', 'delete']
  }
}
</screen>
   <para>
    The dashboard already provides a set of predefined roles that we call
    <emphasis>system roles</emphasis>. You can instantly use them after a fresh
    &dashboard; installation:
   </para>
   <variablelist>
    <varlistentry>
     <term>administrator</term>
     <listitem>
      <para>
       Provides full permissions for all security scopes.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>read-only</term>
     <listitem>
      <para>
       Provides read permission for all security scopes except the dashboard
       settings.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>block-manager</term>
     <listitem>
      <para>
       Provides full permissions for 'rbd-image', 'rbd-mirroring', and 'iscsi'
       scopes.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw-manager</term>
     <listitem>
      <para>
       Provides full permissions for the 'rgw' scope.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>cluster-manager</term>
     <listitem>
      <para>
       Provides full permissions for the 'hosts', 'osd', 'monitor', 'manager',
       and 'config-opt' scopes.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>pool-manager</term>
     <listitem>
      <para>
       Provides full permissions for the 'pool' scope.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>cephfs-manager</term>
     <listitem>
      <para>
       Provides full permissions for the 'cephfs' scope.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <sect3>
    <title>Managing Custom Roles</title>
    <para>
     You can create new user roles by using the following commands:
    </para>
    <variablelist>
     <varlistentry>
      <term>Create a new role:</term>
      <listitem>
<screen>
&prompt.cephuser;ceph dashboard ac-role-create <replaceable>ROLENAME</replaceable> [<replaceable>DESCRIPTION</replaceable>]
</screen>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Delete a role:</term>
      <listitem>
<screen>
&prompt.cephuser;ceph dashboard ac-role-delete <replaceable>ROLENAME</replaceable>
</screen>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Add scope permissions to a role:</term>
      <listitem>
<screen>
&prompt.cephuser;ceph dashboard ac-role-add-scope-perms <replaceable>ROLENAME</replaceable> <replaceable>SCOPENAME</replaceable> <replaceable>PERMISSION</replaceable> [<replaceable>PERMISSION</replaceable>...]
</screen>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Delete scope permissions from a role:</term>
      <listitem>
<screen>
&prompt.cephuser;ceph dashboard ac-role-del-perms <replaceable>ROLENAME</replaceable> <replaceable>SCOPENAME</replaceable>
</screen>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect3>
   <sect3>
    <title>Assigning Roles to User Accounts</title>
    <para>
     Use the following commands to assign roles to users:
    </para>
    <variablelist>
     <varlistentry>
      <term>Set user roles:</term>
      <listitem>
<screen>
&prompt.cephuser;ceph dashboard ac-user-set-roles <replaceable>USERNAME</replaceable> <replaceable>ROLENAME</replaceable> [<replaceable>ROLENAME</replaceable> ...]
</screen>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Add additional roles to a user:</term>
      <listitem>
<screen>
&prompt.cephuser;ceph dashboard ac-user-add-roles <replaceable>USERNAME</replaceable> <replaceable>ROLENAME</replaceable> [<replaceable>ROLENAME</replaceable> ...]
</screen>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Delete roles from a user:</term>
      <listitem>
<screen>
&prompt.cephuser;ceph dashboard ac-user-del-roles <replaceable>USERNAME</replaceable> <replaceable>ROLENAME</replaceable> [<replaceable>ROLENAME</replaceable> ...]
</screen>
      </listitem>
     </varlistentry>
    </variablelist>
    <tip>
     <title>Purging Custom Roles</title>
     <para>
      If you create custom user roles and intend to remove the &ceph; cluster
      with the <command>ceph.purge</command> runner later on, you need to purge
      the custom roles first. Find more details in
      <xref linkend="deepsea-ceph-purge"/>.
     </para>
    </tip>
   </sect3>
   <sect3>
    <title>Example: Creating a User and a Custom Role</title>
    <para>
     This section illustrates a procedure for creating a user account capable
     of managing RBD images, viewing and creating &ceph; pools, and having
     read-only access to any other scopes.
    </para>
    <procedure>
     <step>
      <para>
       Create a new user named 'tux':
      </para>
<screen>
 &prompt.cephuser;ceph dashboard ac-user-create tux <replaceable>PASSWORD</replaceable>
</screen>
     </step>
     <step>
      <para>
       Create a role and specify scope permissions:
      </para>
<screen>
&prompt.cephuser;ceph dashboard ac-role-create rbd/pool-manager
&prompt.cephuser;ceph dashboard ac-role-add-scope-perms rbd/pool-manager \
 rbd-image read create update delete
&prompt.cephuser;ceph dashboard ac-role-add-scope-perms rbd/pool-manager pool read create
</screen>
     </step>
     <step>
      <para>
       Associate the roles with the 'tux' user:
      </para>
<screen>
&prompt.cephuser;ceph dashboard ac-user-set-roles tux rbd/pool-manager read-only
</screen>
     </step>
    </procedure>
   </sect3>
  </sect2>
 </sect1>
 <sect1 xml:id="dashboard-proxy">
  <title>Reverse Proxies</title>

  <para>
   If you are accessing the dashboard via a reverse proxy configuration, you
   may need to service it under a URL prefix. To get the dashboard to use
   hyperlinks that include your prefix, you can set the
   <option>url_prefix</option> setting:
  </para>

<screen>
&prompt.cephuser;ceph config set mgr mgr/dashboard/url_prefix <replaceable>URL_PREFIX</replaceable>
</screen>

  <para>
   Then you can access the dashboard at
   <literal>http://<replaceable>HOST_NAME</replaceable>:<replaceable>PORT_NUMBER</replaceable>/<replaceable>URL_PREFIX</replaceable>/</literal>.
  </para>
 </sect1>
 <sect1 xml:id="dashboard-auditing">
  <title>Auditing</title>

  <para>
   The &dashboard;'s REST API can log PUT, POST, and DELETE requests to the
   &ceph; audit log. Logging is disabled by default, but you can enable it with
   the following command:
  </para>

<screen>
&prompt.cephuser;ceph dashboard set-audit-api-enabled true
</screen>

  <para>
   If enabled, the following parameters are logged per each request:
  </para>

  <variablelist>
   <varlistentry>
    <term>from</term>
    <listitem>
     <para>
      The origin of the request, for example 'https://[::1]:44410'.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>path</term>
    <listitem>
     <para>
      The REST API path, for example '/api/auth'.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>method</term>
    <listitem>
     <para>
      'PUT', 'POST', or 'DELETE'.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>user</term>
    <listitem>
     <para>
      The name of the user (or â€˜Noneâ€™).
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   An example log entry looks like this:
  </para>

<screen>
2019-02-06 10:33:01.302514 mgr.x [INF] [DASHBOARD] \
 from='https://[::ffff:127.0.0.1]:37022' path='/api/rgw/user/exu' method='PUT' \
 user='admin' params='{"max_buckets": "1000", "display_name": "Example User", "uid": "exu", "suspended": "0", "email": "user@example.com"}'
</screen>

  <tip>
   <title>Disable Logging of Request Payload</title>
   <para>
    The logging of the request payload (the list of arguments and their values)
    is enabled by default. You can disable it as follows:
   </para>
<screen>
&prompt.cephuser;ceph dashboard set-audit-api-log-payload false
</screen>
  </tip>
 </sect1>
</chapter>
