<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="cha-ceph-configuration">
 <title>&ceph; Cluster Configuration</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:editurl>https://github.com/SUSE/doc-ses/edit/master/xml/</dm:editurl>
   <dm:translation>yes</dm:translation>
   <dm:release>SES 6</dm:release>
  </dm:docmanager>
 </info>
 <para>
  This chapter provides a list of important &ceph; cluster settings and their
  description. The settings are sorted by topic.
 </para>
 <sect1 xml:id="ceph-config-runtime">
  <title>Runtime Configuration</title>

  <para>
   <xref linkend="ds-custom-cephconf"/> describes how to make changes to the
   &ceph; configuration file <filename>ceph.conf</filename>. However, the
   actual cluster behavior is determined not by the current state of the
   <filename>ceph.conf</filename> file but by the configuration of the running
   &ceph; daemons, which is stored in memory.
  </para>

  <para>
   You can query an individual &ceph; daemon for a particular configuration
   setting using the <emphasis>admin socket</emphasis> on the node where the
   daemon is running. For example, the following command gets the value of the
   <option>osd_max_write_size</option> configuration parameter from the daemon
   named <literal>osd.0</literal>:
  </para>

<screen>&prompt.cephuser;ceph --admin-daemon /var/run/ceph/ceph-osd.0.asok \
config get osd_max_write_size
{
  "osd_max_write_size": "90"
}</screen>

  <para>
   You can also <emphasis>change</emphasis> the daemons' settings at runtime.
   Remember that this change is temporary and will be lost after the next
   daemon restart. For example, the following command changes the
   <option>osd_max_write_size</option> parameter to '50' for all OSDs in the
   cluster:
  </para>

<screen>&prompt.cephuser;ceph tell osd.* injectargs --osd_max_write_size 50</screen>

  <warning>
   <title><command>injectargs</command> Is Not Reliable</title>
   <para>
    Unfortunately, changing the cluster settings with the
    <command>injectargs</command> command is not 100% reliable. If you need to
    be sure that the changed parameter is active, change it in the
    configuration files on all cluster nodes and restart all daemons in the
    cluster.
   </para>
  </warning>
 </sect1>
 <sect1 xml:id="config-osd-and-bluestore">
<!-- based on http://docs.ceph.com/docs/nautilus/rados/configuration/bluestore-config-ref/#automatic-cache-sizing -->

  <title>&osd; and &bluestore;</title>

  <sect2 xml:id="config-auto-cache-sizing">
   <title>Automatic Cache Sizing</title>
   <para>
    &bluestore; can be configured to automatically resize its caches when
    <option>tc_malloc</option> is configured as the memory allocator and the
    <option>bluestore_cache_autotune</option> setting is enabled. This option
    is currently enabled by default. &bluestore; will attempt to keep OSD heap
    memory usage under a designated target size via the
    <option>osd_memory_target</option> configuration option. This is a best
    effort algorithm and caches will not shrink smaller than the amount
    specified by <option>osd_memory_cache_min</option>. Cache ratios will be
    chosen based on a hierarchy of priorities. If priority information is not
    available, the <option>bluestore_cache_meta_ratio</option> and
    <option>bluestore_cache_kv_ratio</option> options are used as fallbacks.
   </para>
   <variablelist>
    <varlistentry>
     <term>bluestore_cache_autotune</term>
     <listitem>
      <para>
       Automatically tunes the ratios assigned to different &bluestore; caches
       while respecting minimum values. Default is <option>True</option>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>osd_memory_target</term>
     <listitem>
      <para>
       When <option>tc_malloc</option> and
       <option>bluestore_cache_autotune</option> are enabled, try to keep this
       many bytes mapped in memory.
      </para>
      <note>
       <para>
        This may not exactly match the RSS memory usage of the process. While
        the total amount of heap memory mapped by the process should generally
        stay close to this target, there is no guarantee that the kernel will
        actually reclaim memory that has been unmapped.
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>osd_memory_cache_min</term>
     <listitem>
      <para>
       When <option>tc_malloc</option> and
       <option>bluestore_cache_autotune</option> are enabled, set the minimum
       amount of memory used for caches.
      </para>
      <note>
       <para>
        Setting this value too low can result in significant cache thrashing.
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>
 </sect1>
 <sect1 xml:id="config-ogw">
  <title>&cogw;</title>

  <para>
   You can influence the &ogw; behavior by a number of options in the
   <filename>/etc/ceph/ceph.conf</filename> file under sections named
  </para>

<screen>
[client.radosgw.<replaceable>INSTANCE_NAME</replaceable>]
</screen>

  <para>
   If an option is not specified, its default value is used. A complete list of
   the &ogw; options follows:
  </para>

<!-- 2018-08-13 tbazant: copy'n'pasted from http://docs.ceph.com/docs/master/radosgw/config-ref/ -->

  <sect2>
   <title>General Settings</title>
   <variablelist>
    <varlistentry>
     <term>rgw_frontends</term>
     <listitem>
      <para>
       Configures the HTTP front-end(s). Specify multiple front-ends in a
       comma-delimited list. Each front-end configuration may include a list of
       options separated by spaces, where each option is in the form
       “key=value” or “key”. Default is
      </para>
<screen>
rgw_frontends = beast port=7480
</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_data</term>
     <listitem>
      <para>
       Sets the location of the data files for the &ogw;. Default is
       <filename>/var/lib/ceph/radosgw/<replaceable>CLUSTER_ID</replaceable></filename>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_enable_apis</term>
     <listitem>
      <para>
       Enables the specified APIs. Default is 's3, swift, swift_auth, admin All
       APIs'.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_cache_enabled</term>
     <listitem>
      <para>
       Enables or disables the &ogw; cache. Default is 'true'.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_cache_lru_size</term>
     <listitem>
      <para>
       The number of entries in the &ogw; cache. Default is 10000.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_socket_path</term>
     <listitem>
      <para>
       The socket path for the domain socket.
       <option>FastCgiExternalServer</option> uses this socket. If you do not
       specify a socket path, the &ogw; will not run as an external server. The
       path you specify here needs to be the same as the path specified in the
       <filename>rgw.conf</filename> file.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_fcgi_socket_backlog</term>
     <listitem>
      <para>
       The socket backlog for fcgi. Default is 1024.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_host</term>
     <listitem>
      <para>
       The host for the &ogw; instance. It can be an IP address or a host name.
       Default is 0.0.0.0
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_port</term>
     <listitem>
      <para>
       The port number where the instance listens for requests. If not
       specified, the &ogw; runs external FastCGI.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_dns_name</term>
     <listitem>
      <para>
       The DNS name of the served domain.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_script_uri</term>
     <listitem>
      <para>
       The alternative value for the SCRIPT_URI if not set in the request.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_request_uri</term>
     <listitem>
      <para>
       The alternative value for the REQUEST_URI if not set in the request.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_print_continue</term>
     <listitem>
      <para>
       Enable 100-continue if it is operational. Default is 'true'.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_remote_addr_param</term>
     <listitem>
      <para>
       The remote address parameter. For example, the HTTP field containing the
       remote address, or the X-Forwarded-For address if a reverse proxy is
       operational. Default is REMOTE_ADDR.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_op_thread_timeout</term>
     <listitem>
      <para>
       The timeout in seconds for open threads. Default is 600.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_op_thread_suicide_timeout</term>
     <listitem>
      <para>
       The time timeout in seconds before the &ogw; process dies. Disabled if
       set to 0 (default).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_thread_pool_size</term>
     <listitem>
      <para>
       Number of threads for the Beast server. Increase to a higher value if
       you need to serve more requests. Defaults to 100 threads.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_num_rados_handles</term>
     <listitem>
      <para>
       The number of RADOS cluster handles for &ogw;. Each &ogw; worker thread
       now gets to pick a RADOS handle for its lifetime. This option may be
       deprecated and removed in future releases. Default is 1.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_num_control_oids</term>
     <listitem>
      <para>
       The number of notification objects used for cache synchronization
       between different rgw instances. Default is 8.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_init_timeout</term>
     <listitem>
      <para>
       The number of seconds before the &ogw; gives up on initialization.
       Default is 30.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_mime_types_file</term>
     <listitem>
      <para>
       The path and location of the MIME types. Used for Swift auto-detection
       of object types. Default is <filename>/etc/mime.types</filename>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_gc_max_objs</term>
     <listitem>
      <para>
       The maximum number of objects that may be handled by garbage collection
       in one garbage collection processing cycle. Default is 32.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_gc_obj_min_wait</term>
     <listitem>
      <para>
       The minimum wait time before the object may be removed and handled by
       garbage collection processing. Default is 2 * 3600.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_gc_processor_max_time</term>
     <listitem>
      <para>
       The maximum time between the beginning of two consecutive garbage
       collection processing cycles. Default is 3600.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_gc_processor_period</term>
     <listitem>
      <para>
       The cycle time for garbage collection processing. Default is 3600.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_s3_success_create_obj_status</term>
     <listitem>
      <para>
       The alternate success status response for <literal>create-obj</literal>.
       Default is 0.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_resolve_cname</term>
     <listitem>
      <para>
       Whether the &ogw; should use DNS CNAME record of the request host name
       field (if host name is not equal to the &ogw; DNS name). Default is
       'false'.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_obj_stripe_size</term>
     <listitem>
      <para>
       The size of an object stripe for &ogw; objects. Default is 4 &lt;&lt;
       20.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_extended_http_attrs</term>
     <listitem>
      <para>
       Add a new set of attributes that can be set on an entity (for example, a
       user, a bucket, or an object). These extra attributes can be set through
       HTTP header fields when putting the entity or modifying it using the
       POST method. If set, these attributes will return as HTTP fields when
       requesting GET/HEAD on the entity. Default is 'content_foo, content_bar,
       x-foo-bar'.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_exit_timeout_secs</term>
     <listitem>
      <para>
       Number of seconds to wait for a process before exiting unconditionally.
       Default is 120.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_get_obj_window_size</term>
     <listitem>
      <para>
       The window size in bytes for a single object request. Default is '16
       &lt;&lt; 20'.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_get_obj_max_req_size</term>
     <listitem>
      <para>
       The maximum request size of a single GET operation sent to the Ceph
       Storage Cluster. Default is 4 &lt;&lt; 20.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_relaxed_s3_bucket_names</term>
     <listitem>
      <para>
       Enables relaxed S3 bucket name rules for US region buckets. Default is
       'false'.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_list_buckets_max_chunk</term>
     <listitem>
      <para>
       The maximum number of buckets to retrieve in a single operation when
       listing user buckets. Default is 1000.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_override_bucket_index_max_shards</term>
     <listitem>
      <para>
       Represents the number of shards for the bucket index object. Setting 0
       (default) indicates there is no sharding. It is not recommended to set a
       value too large (for example 1000) as it increases the cost for bucket
       listing. This variable should be set in the client or global sections so
       that it is automatically applied to <command>radosgw-admin</command>
       commands.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_curl_wait_timeout_ms</term>
     <listitem>
      <para>
       The timeout in milliseconds for certain <command>curl</command> calls.
       Default is 1000.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_copy_obj_progress</term>
     <listitem>
      <para>
       Enables output of object progress during long copy operations. Default
       is 'true'.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_copy_obj_progress_every_bytes</term>
     <listitem>
      <para>
       The minimum bytes between copy progress output. Default is 1024 * 1024.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_admin_entry</term>
     <listitem>
      <para>
       The entry point for an admin request URL. Default is 'admin'.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_content_length_compat</term>
     <listitem>
      <para>
       Enable compatibility handling of FCGI requests with both CONTENT_LENGTH
       AND HTTP_CONTENT_LENGTH set. Default is 'false'.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_bucket_quota_ttl</term>
     <listitem>
      <para>
       The amount of time in seconds for which cached quota information is
       trusted. After this timeout, the quota information will be re-fetched
       from the cluster. Default is 600.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_user_quota_bucket_sync_interval</term>
     <listitem>
      <para>
       The amount of time in seconds for which the bucket quota information is
       accumulated before synchronizing to the cluster. During this time, other
       &ogw; instances will not see the changes in the bucket quota stats
       related to operations on this instance. Default is 180.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_user_quota_sync_interval</term>
     <listitem>
      <para>
       The amount of time in seconds for which user quota information is
       accumulated before synchronizing to the cluster. During this time, other
       &ogw; instances will not see the changes in the user quota stats related
       to operations on this instance. Default is 180.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_bucket_default_quota_max_objects</term>
     <listitem>
      <para>
       Default maximum number of objects per bucket. It is set on new users if
       no other quota is specified, and has no effect on existing users. This
       variable should be set in the client or global sections so that it is
       automatically applied to <command>radosgw-admin</command> commands.
       Default is -1.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_bucket_default_quota_max_size</term>
     <listitem>
      <para>
       Default maximum capacity per bucket in bytes. It is set on new users if
       no other quota is specified, and has no effect on existing users.
       Default is -1.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_user_default_quota_max_objects</term>
     <listitem>
      <para>
       Default maximum number of objects for a user. This includes all objects
       in all buckets owned by the user. It is set on new users if no other
       quota is specified, and has no effect on existing users. Default is -1.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_user_default_quota_max_size</term>
     <listitem>
      <para>
       The value for user maximum size quota in bytes set on new users if no
       other quota is specified. It has no effect on existing users. Default is
       -1.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_verify_ssl</term>
     <listitem>
      <para>
       Verify SSL certificates while making requests. Default is 'true'.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_max_chunk_size</term>
     <listitem>
      <para>
       Maximum size of a chunk of data that will be read in a single operation.
       Increasing the value to 4 MB (4194304) will provide better performance
       when processing large objects. Default is 128 kB (131072).
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <variablelist>
    <title>Multisite Settings</title>
    <varlistentry>
     <term>rgw_zone</term>
     <listitem>
      <para>
       The name of the zone for the gateway instance. If no zone is set, a
       cluster-wide default can be configured with the <command>radosgw-admin
       zone default</command> command.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_zonegroup</term>
     <listitem>
      <para>
       The name of the zonegroup for the gateway instance. If no zonegroup is
       set, a cluster-wide default can be configured with the
       <command>radosgw-admin zonegroup default</command> command.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_realm</term>
     <listitem>
      <para>
       The name of the realm for the gateway instance. If no realm is set, a
       cluster-wide default can be configured with the<command>radosgw-admin
       realm default</command> command.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_run_sync_thread</term>
     <listitem>
      <para>
       If there are other zones in the realm to synchronize from, spawn threads
       to handle the synchronization of data and metadata. Default is 'true'.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_data_log_window</term>
     <listitem>
      <para>
       The data log entries window in seconds. Default is 30.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_data_log_changes_size</term>
     <listitem>
      <para>
       The number of in-memory entries to hold for the data changes log.
       Default is 1000.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_data_log_obj_prefix</term>
     <listitem>
      <para>
       The object name prefix for the data log. Default is 'data_log'.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_data_log_num_shards</term>
     <listitem>
      <para>
       The number of shards (objects) on which to keep the data changes log.
       Default is 128.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_md_log_max_shards</term>
     <listitem>
      <para>
       The maximum number of shards for the metadata log. Default is 64.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <variablelist>
    <title>&swift; Settings</title>
    <varlistentry>
     <term>rgw_enforce_swift_acls</term>
     <listitem>
      <para>
       Enforces the Swift Access Control List (ACL) settings. Default is
       'true'.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_swift_token_expiration</term>
     <listitem>
      <para>
       The time in seconds for expiring a Swift token. Default is 24 * 3600.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_swift_url</term>
     <listitem>
      <para>
       The URL for the Ceph Object Gateway Swift API.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_swift_url_prefix</term>
     <listitem>
      <para>
       The URL prefix for the Swift StorageURL that goes in front of the
       “/v1” part. This allows to run several Gateway instances on the same
       host. For compatibility, setting this configuration variable to empty
       causes the default “/swift” to be used. Use explicit prefix “/”
       to start StorageURL at the root.
      </para>
      <warning>
       <para>
        Setting this option to “/” will not work if S3 API is enabled. Keep
        in mind that disabling S3 will make it impossible to deploy the &ogw;
        in the multisite configuration!
       </para>
      </warning>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_swift_auth_url</term>
     <listitem>
      <para>
       Default URL for verifying v1 authentication tokens when the internal
       Swift authentication is not used.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_swift_auth_entry</term>
     <listitem>
      <para>
       The entry point for a Swift authentication URL. Default is 'auth'.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_swift_versioning_enabled</term>
     <listitem>
      <para>
       Enables the Object Versioning of OpenStack Object Storage API. This
       allows clients to put the <literal>X-Versions-Location</literal>
       attribute on containers that should be versioned. The attribute
       specifies the name of container storing archived versions. It must be
       owned by the same user as the versioned container for reasons of access
       control verification&mdash;ACLs are <emphasis>not</emphasis> taken into
       consideration. Those containers cannot be versioned by the S3 object
       versioning mechanism. Default is 'false'.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <variablelist>
    <title>Logging Settings</title>
    <varlistentry>
     <term>rgw_log_nonexistent_bucket</term>
     <listitem>
      <para>
       Enables the &ogw; to log a request for a non-existent bucket. Default is
       'false'.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_log_object_name</term>
     <listitem>
      <para>
       The logging format for an object name. See the manual page <command>man
       1 date</command> for details about format specifiers. Default is
       '%Y-%m-%d-%H-%i-%n'.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_log_object_name_utc</term>
     <listitem>
      <para>
       Whether a logged object name includes a UTC time. If set to 'false'
       (default), it uses the local time.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_usage_max_shards</term>
     <listitem>
      <para>
       The maximum number of shards for usage logging. Default is 32.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_usage_max_user_shards</term>
     <listitem>
      <para>
       The maximum number of shards used for a single user’s usage logging.
       Default is 1.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_enable_ops_log</term>
     <listitem>
      <para>
       Enable logging for each successful &ogw; operation. Default is 'false'.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_enable_usage_log</term>
     <listitem>
      <para>
       Enable the usage log. Default is 'false'.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_ops_log_rados</term>
     <listitem>
      <para>
       Whether the operations log should be written to the Ceph Storage Cluster
       back-end. Default is 'true'.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_ops_log_socket_path</term>
     <listitem>
      <para>
       The Unix domain socket for writing operations logs.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_ops_log_data_backlog</term>
     <listitem>
      <para>
       The maximum data backlog data size for operations logs written to a Unix
       domain socket. Default is 5 &lt;&lt; 20.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_usage_log_flush_threshold</term>
     <listitem>
      <para>
       The number of dirty merged entries in the usage log before flushing
       synchronously. Default is 1024.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_usage_log_tick_interval</term>
     <listitem>
      <para>
       Flush pending usage log data every 'n' seconds. Default is 30.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_log_http_headers</term>
     <listitem>
      <para>
       Comma-delimited list of HTTP headers to include in log entries. Header
       names are case-insensitive, and use the full header name with words
       separated by underscores. For example, 'http_x_forwarded_for',
       'http_x_special_k'.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_intent_log_object_name</term>
     <listitem>
      <para>
       The logging format for the intent log object name. See the manual page
       <command>man 1 date</command> for details about format specifiers.
       Default is '%Y-%m-%d-%i-%n'.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_intent_log_object_name_utc</term>
     <listitem>
      <para>
       Whether the intent log object name includes a UTC time. If set to
       'false' (default), it uses the local time.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <variablelist>
    <title>Keystone Settings</title>
    <varlistentry>
     <term>rgw_keystone_url</term>
     <listitem>
      <para>
       The URL for the Keystone server.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_keystone_api_version</term>
     <listitem>
      <para>
       The version (2 or 3) of OpenStack Identity API that should be used for
       communication with the Keystone server. Default is 2.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_keystone_admin_domain</term>
     <listitem>
      <para>
       The name of the OpenStack domain with the administrator privilege when
       using OpenStack Identity API v3.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_keystone_admin_project</term>
     <listitem>
      <para>
       The name of the OpenStack project with the administrator privilege when
       using OpenStack Identity API v3. If not set, the value of the
       <command>rgw keystone admin tenant</command> will be used instead.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_keystone_admin_token</term>
     <listitem>
      <para>
       The Keystone administrator token (shared secret). In the &ogw;,
       authentication with the administrator token has priority over
       authentication with the administrator credentials (options <option>rgw
       keystone admin user</option>, <option>rgw keystone admin
       password</option>, <option>rgw keystone admin tenant</option>,
       <option>rgw keystone admin project</option>, and <option>rgw keystone
       admin domain</option>). The administrator token feature is considered as
       deprecated.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_keystone_admin_tenant</term>
     <listitem>
      <para>
       The name of the OpenStack tenant with the administrator privilege
       (Service Tenant) when using OpenStack Identity API v2.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_keystone_admin_user</term>
     <listitem>
      <para>
       The name of the OpenStack user with the administrator privilege for
       Keystone authentication (Service User) when using OpenStack Identity API
       v2.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_keystone_admin_password</term>
     <listitem>
      <para>
       The password for the OpenStack administrator user when using OpenStack
       Identity API v2.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_keystone_accepted_roles</term>
     <listitem>
      <para>
       The roles required to serve requests. Default is 'Member, admin'.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_keystone_token_cache_size</term>
     <listitem>
      <para>
       The maximum number of entries in each Keystone token cache. Default is
       10000.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_keystone_revocation_interval</term>
     <listitem>
      <para>
       The number of seconds between token revocation checks. Default is 15 *
       60.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_keystone_verify_ssl</term>
     <listitem>
      <para>
       Verify SSL certificates while making token requests to Keystone. Default
       is 'true'.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <sect3 xml:id="sec-ceph-rgw-configuration-notes">
    <title>Additional Notes</title>
    <variablelist>
     <varlistentry>
      <term>rgw_dns_name</term>
      <listitem>
       <para>
        If the parameter <literal>rgw dns name</literal> is added to the
        <filename>ceph.conf</filename>, make sure that the S3 client is
        configured to direct requests at the endpoint specified by <literal>rgw
        dns name</literal>.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect3>
  </sect2>

  <sect2 xml:id="config-ogw-http-frontends">
   <title>HTTP Front-ends</title>
   <sect3>
    <title>Beast</title>
    <variablelist>
     <varlistentry>
      <term>port, ssl_port</term>
      <listitem>
       <para>
        IPv4 &amp; IPv6 listening port numbers. You can specify multiple port
        numbers:
       </para>
<screen>
port=80 port=8000 ssl_port=8080
</screen>
       <para>
        Default is 80.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>endpoint, ssl_endpoint</term>
      <listitem>
       <para>
        The listening addresses in the form 'address[:port]', where the address
        is an IPv4 address string in dotted decimal form, or an IPv6 address in
        hexadecimal notation surrounded by square brackets. Specifying an IPv6
        endpoint would listen to IPv6 only. The optional port number defaults
        to 80 for <option>endpoint</option> and 443 for
        <option>ssl_endpoint</option>. You can specify multiple addresses:
       </para>
<screen>
endpoint=[::1] endpoint=192.168.0.100:8000 ssl_endpoint=192.168.0.100:8080
</screen>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>ssl_private_key</term>
      <listitem>
       <para>
        Optional path to the private key file used for SSL-enabled endpoints.
        If not specified, the <option>ssl_certificate</option> file is used as
        a private key.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>tcp_nodelay</term>
      <listitem>
       <para>
        If specified, the socket option will disable Nagle's algorithm on the
        connection. It means that packets will be sent as soon as possible
        instead of waiting for a full buffer or timeout to occur.
       </para>
       <para>
        '1' disables Nagle's algorithm for all sockets.
       </para>
       <para>
        '0' keeps Nagle's algorithm enabled (default).
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
    <example>
     <title>Example Beast Configuration in <filename>/etc/ceph/ceph.conf</filename></title>
<screen>
rgw_frontends = beast port=8000 ssl_port=443 ssl_certificate=/etc/ssl/ssl.crt error_log_file=/var/log/radosgw/civetweb.error.log
</screen>
    </example>
   </sect3>
   <sect3>
    <title>CivetWeb</title>
    <variablelist>
     <varlistentry>
      <term>port</term>
      <listitem>
       <para>
        The listening port number. For SSL-enabled ports, add an 's' suffix
        (for example, '443s'). To bind a specific IPv4 or IPv6 address, use the
        form 'address:port'. You can specify multiple endpoints either by
        joining them with '+' or by providing multiple options:
       </para>
<screen>
port=127.0.0.1:8000+443s
port=8000 port=443s
</screen>
       <para>
        Default is 7480.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>num_threads</term>
      <listitem>
       <para>
        The number of threads spawned by Civetweb to handle incoming HTTP
        connections. This effectively limits the number of concurrent
        connections that the front-end can service.
       </para>
       <para>
        Default is the value specified by the
        <option>rgw_thread_pool_size</option> option.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>request_timeout_ms</term>
      <listitem>
       <para>
        The amount of time in milliseconds that Civetweb will wait for more
        incoming data before giving up.
       </para>
       <para>
        Default is 30000 milliseconds.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>access_log_file</term>
      <listitem>
       <para>
        Path to the access log file. You can specify either a full path, or a
        path relative to the current working directory. If not specified
        (default), then accesses are not logged.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>error_log_file</term>
      <listitem>
       <para>
        Path to the error log file. You can specify either a full path, or a
        path relative to the current working directory. If not specified
        (default), then errors are not logged.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
    <example>
     <title>Example Civetweb Configuration in <filename>/etc/ceph/ceph.conf</filename></title>
<screen>
rgw_frontends = civetweb port=8000+443s request_timeout_ms=30000 error_log_file=/var/log/radosgw/civetweb.error.log
</screen>
    </example>
   </sect3>
   <sect3>
    <title>Common Options</title>
    <variablelist>
     <varlistentry>
      <term>ssl_certificate</term>
      <listitem>
       <para>
        Path to the SSL certificate file used for SSL-enabled endpoints.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>prefix</term>
      <listitem>
       <para>
        A prefix string that is inserted into the URI of all requests. For
        example, a &swift;-only front-end could supply a URI prefix of
        '/swift'.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect3>
  </sect2>
 </sect1>
</chapter>
