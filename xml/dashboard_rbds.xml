<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="dashboard-rbds">
 <title>Manage &rbd;</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:editurl>https://github.com/SUSE/doc-ses/edit/master/xml/</dm:editurl>
   <dm:translation>yes</dm:translation>
   <dm:release>SES 7</dm:release>
  </dm:docmanager>
 </info>
 <para>
  To list all available &rbd;s (RBDs), click
  <menuchoice><guimenu>Block</guimenu><guimenu>Images</guimenu></menuchoice>
  from the main menu.
 </para>
 <para>
  The list shows brief information about the device, such as the device's name,
  the related pool name, namespace, size of the device, number and size of
  objects on the device, details on the provisioning of the details, and the
  parent.
 </para>
 <figure>
  <title>List of RBD images</title>
  <mediaobject>
   <imageobject role="fo">
    <imagedata fileref="dash_rbd_images.png" width="100%" format="PNG"/>
   </imageobject>
   <imageobject role="html">
    <imagedata fileref="dash_rbd_images.png" width="100%" format="PNG"/>
   </imageobject>
  </mediaobject>
 </figure>
 <sect1 xml:id="dashboard-rbds-details">
  <title>Viewing details about RBDs</title>

  <para>
   To view more detailed information about a device, click its row in the
   table:
  </para>

  <figure>
   <title>RBD details</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="dash_rbd_images_details.png" width="100%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="dash_rbd_images_details.png" width="100%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>
 </sect1>
 <sect1 xml:id="dashboard-rbds-configuration">
  <title>Viewing RBD's configuration</title>

  <para>
   To view detailed configuration of a device, click its row in the table and
   then the <guimenu>Configuration</guimenu> tab in the lower table:
  </para>

  <figure>
   <title>RBD configuration</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="dash_rbd_images_config.png" width="100%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="dash_rbd_images_config.png" width="100%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>
 </sect1>
 <sect1 xml:id="dashboard-rbds-create">
  <title>Creating RBDs</title>

  <para>
   To add a new device, click <guimenu>Create</guimenu> in the top left of the
   table heading and do the following on the <guimenu>Create RBD</guimenu>
   screen:
  </para>

  <figure>
   <title>Adding a new RBD</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="oa_rbd_add.png" width="100%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="oa_rbd_add.png" width="100%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>

  <procedure>
   <step>
    <para>
     Enter the name of the new device. Refer to <xref linkend="sysreq-naming"/>
     for naming limitations.
    </para>
   </step>
   <step>
    <para>
     Select the pool with the <option>rbd</option> application assigned from
     which the new RBD device will be created.
    </para>
   </step>
   <step>
    <para>
     Specify the size of the new device.
    </para>
   </step>
   <step>
    <para>
     Specify additional options for the device. To fine-tune the device
     parameters, click <guimenu>Advanced</guimenu> and enter values for object
     size, stripe unit, or stripe count. To enter Quality of Service (QoS)
     limits, click <guimenu>Quality of Service</guimenu> and enter them.
    </para>
   </step>
   <step>
    <para>
     Confirm with <guimenu>Create RBD</guimenu>.
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="dashboard-rbd-delete">
  <title>Deleting RBDs</title>

  <para>
   To delete a device, select the device in the table row. Click the drop-down
   arrow next to the <guimenu>Create</guimenu> button and click
   <guimenu>Delete</guimenu>. Confirm the deletion with <guimenu>Delete
   RBD</guimenu>.
  </para>

  <tip>
   <title>Moving RBDs to trash</title>
   <para>
    Deleting an RBD is an irreversible action. If you <guimenu>Move to
    Trash</guimenu> instead, you can restore the device later on by selecting
    it on the <guimenu>Trash</guimenu> tab of the main table and clicking
    <guimenu>Restore</guimenu> in the top left of the table heading.
   </para>
  </tip>
 </sect1>
 <sect1 xml:id="dashboard-rbds-snapshots">
  <title>Creating &rbd; snapshots</title>

  <para>
   To create a &rbd; snapshot, select the device in the table row and the
   detailed configuration content pane appears. Select the
   <guimenu>Snapshots</guimenu> tab and click <guimenu>Create</guimenu> in the
   top left of the table heading. Enter the snapshot's name and confirm with
   <guimenu>Create RBD Snapshot</guimenu>.
  </para>

  <para>
   After selecting a snapshot, you can perform additional actions on the
   device, such as rename, protect, clone, copy, or delete.
   <guimenu>Rollback</guimenu> restores the device's state from the current
   snapshot.
  </para>

  <figure>
   <title>RBD snapshots</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="dash_rbd_images_snapshots.png" width="100%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="dash_rbd_images_snapshots.png" width="100%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>
 </sect1>
 <sect1 xml:id="dash-rbd-mirror">
  <title>RBD mirroring</title>

  <para>
   &rbd; images can be asynchronously mirrored between two &ceph; clusters. You
   can use the &dashboard; to configure replication of RBD images between two
   or more clusters. This capability is available in two modes:
  </para>

  <variablelist>
   <varlistentry>
    <term>Journal-based</term>
    <listitem>
     <para>
      This mode uses the RBD journaling image feature to ensure point-in-time,
      crash-consistent replication between clusters.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Snapshot-based</term>
    <listitem>
     <para>
      This mode uses periodically scheduled or manually created RBD image
      mirror-snapshots to replicate crash-consistent RBD images between
      clusters.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   Mirroring is configured on a per-pool basis within peer clusters and can be
   configured on a specific subset of images within the pool or configured to
   automatically mirror all images within a pool when using journal-based
   mirroring only.
  </para>

  <para>
   Mirroring is configured using the <command>rbd</command> command, which is
   installed by default in &productname; &productnumber;. The
   <systemitem class="daemon">rbd-mirror</systemitem> daemon is responsible for
   pulling image updates from the remote, peer cluster and applying them to the
   image within the local cluster. See
   <xref linkend="rbd-mirror-daemon-enable"/> for more information on enabling
   the <systemitem class="daemon">rbd-mirror</systemitem> daemon.
  </para>

  <para>
   Depending on the need for replication, &rbd; mirroring can be configured for
   either one- or two-way replication:
  </para>

  <variablelist>
   <varlistentry>
    <term>One-way Replication</term>
    <listitem>
     <para>
      When data is only mirrored from a primary cluster to a secondary cluster,
      the <systemitem class="daemon">rbd-mirror</systemitem> daemon runs only
      on the secondary cluster.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Two-way Replication</term>
    <listitem>
     <para>
      When data is mirrored from primary images on one cluster to non-primary
      images on another cluster (and vice-versa), the
      <systemitem class="daemon">rbd-mirror</systemitem> daemon runs on both
      clusters.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <important>
   <para>
    Each instance of the <systemitem class="daemon">rbd-mirror</systemitem>
    daemon must be able to connect to both the local and remote &ceph; clusters
    simultaneously, for example all monitor and OSD hosts. Additionally, the
    network must have sufficient bandwidth between the two data centers to
    handle mirroring workload.
   </para>
  </important>

  <tip>
   <title>General information</title>
   <para>
    For general information and the command line approach to &rbd; mirroring,
    refer to <xref linkend="ceph-rbd-mirror" />.
   </para>
  </tip>

  <sect2 xml:id="rbd-mirror-primary-secondary">
   <title>Configuring primary and secondary clusters</title>
   <para>
    A <emphasis>primary</emphasis> cluster is where the original pool with
    images is created. A <emphasis>secondary</emphasis> cluster is where the
    pool or images are replicated from the <emphasis>primary</emphasis>
    cluster.
   </para>
   <note>
    <title>Relative naming</title>
    <para>
     The <emphasis>primary</emphasis> and <emphasis>secondary</emphasis> terms
     can be relative in the context of replication because they relate more to
     individual pools than to clusters. For example, in two-way replication,
     one pool can be mirrored from the <emphasis>primary</emphasis> cluster to
     the <emphasis>secondary</emphasis> one, while another pool can be mirrored
     from the <emphasis>secondary</emphasis> cluster to the
     <emphasis>primary</emphasis> one.
    </para>
   </note>
  </sect2>

  <sect2 xml:id="rbd-mirror-daemon-enable">
   <title>Enabling the <systemitem class="daemon">rbd-mirror</systemitem> daemon</title>
   <para>
    The following procedures demonstrate how to perform the basic
    administrative tasks to configure mirroring using the
    <command>rbd</command> command. Mirroring is configured on a per-pool basis
    within the &ceph; clusters.
   </para>
   <para>
    The pool configuration steps should be performed on both peer clusters.
    These procedures assume two clusters, named “primary” and
    “secondary”, are accessible from a single host for clarity.
   </para>
   <para>
    The <systemitem class="daemon">rbd-mirror</systemitem> daemon performs the
    actual cluster data replication.
   </para>
   <procedure>
    <step>
     <para>
      Rename <filename>ceph.conf</filename> and keyring files and copy them
      from the primary host to the secondary host:
     </para>
<screen>
&prompt.cephuser.secondary;cp /etc/ceph/ceph.conf /etc/ceph/primary.conf
&prompt.cephuser.secondary;cp /etc/ceph/ceph.admin.client.keyring \
 /etc/ceph/primary.client.admin.keyring
&prompt.cephuser.secondary;scp <replaceable>PRIMARY_HOST</replaceable>:/etc/ceph/ceph.conf \
 /etc/ceph/secondary.conf
&prompt.cephuser.secondary;scp  <replaceable>PRIMARY_HOST</replaceable>:/etc/ceph/ceph.client.admin.keyring \
 /etc/ceph/secondary.client.admin.keyring
</screen>
    </step>
    <step>
     <para>
      To enable mirroring on a pool with <command>rbd</command>, specify the
      <command>mirror pool enable</command>, the pool name, and the mirroring
      mode:
     </para>
<screen>&prompt.cephuser;rbd mirror pool enable <replaceable>POOL_NAME</replaceable> <replaceable>MODE</replaceable></screen>
     <note>
      <para>
       The mirroring mode can either be <literal>image</literal> or
       <literal>pool</literal>. For example:
      </para>
<screen>
&prompt.cephuser.secondary;rbd --cluster primary mirror pool enable image-pool image
&prompt.cephuser.secondary;rbd --cluster secondary mirror pool enable image-pool image
</screen>
     </note>
    </step>
    <step>
     <para>
      On the &dashboard;, navigate to
      <menuchoice><guimenu>Block</guimenu><guimenu>Mirroring</guimenu></menuchoice>.
      The <guimenu>Daemons</guimenu> table to the left shows actively running
      <systemitem class="daemon">rbd-mirror</systemitem> daemons and their
      health.
     </para>
     <figure>
      <title>Running <systemitem class="daemon">rbd-mirror</systemitem> daemons</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="rbd-mirror-daemon.png" width="100%"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="rbd-mirror-daemon.png" width="100%"/>
       </imageobject>
      </mediaobject>
     </figure>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="rbd-mirror-disable">
   <title>Disabling mirroring</title>
   <para>
    To disable mirroring on a pool with <command>rbd</command>, specify the
    <command>mirror pool disable</command> command and the pool name:
   </para>
<screen>&prompt.cephuser;rbd mirror pool disable <replaceable>POOL_NAME</replaceable></screen>
   <para>
    When mirroring is disabled on a pool in this way, mirroring will also be
    disabled on any images (within the pool) for which mirroring was enabled
    explicitly.
   </para>
  </sect2>

  <sect2 xml:id="rbd-mirror-peer-bootstrap">
   <title>Bootstrapping peers</title>
   <para>
    In order for the <systemitem class="daemon">rbd-mirror</systemitem> to
    discover its peer cluster, the peer needs to be registered to the pool and
    a user account needs to be created. This process can be automated with
    <command>rbd</command> by using the <command>mirror pool peer bootstrap
    create</command> and <command>mirror pool peer bootstrap import</command>
    commands.
   </para>
   <para>
    To manually create a new bootstrap token with <command>rbd</command>,
    specify the <command>mirror pool peer bootstrap create</command> command, a
    pool name, along with an optional site name to describe the local cluster:
   </para>
<screen>&prompt.cephuser;rbd mirror pool peer bootstrap create [--site-name <replaceable>local-site-name</replaceable>] <replaceable>pool-name</replaceable></screen>
   <para>
    The output of <command>mirror pool peer bootstrap create</command> will be
    a token that should be provided to the <command>mirror pool peer bootstrap
    import</command> command. For example, on the primary cluster:
   </para>
<screen>&prompt.cephuser;rbd --cluster primary mirror pool peer bootstrap create --site-name primary
  image-pool eyJmc2lkIjoiOWY1MjgyZGItYjg5OS00NTk2LTgwOTgtMzIwYzFmYzM5NmYzIiwiY2xpZW50X2lkIjoicmJkL \
  W1pcnJvci1wZWVyIiwia2V5IjoiQVFBUnczOWQwdkhvQmhBQVlMM1I4RmR5dHNJQU50bkFTZ0lOTVE9PSIsIm1vbl9ob3N0I \
  joiW3YyOjE5Mi4xNjguMS4zOjY4MjAsdjE6MTkyLjE2OC4xLjM6NjgyMV0ifQ==</screen>
   <para>
    To manually import the bootstrap token created by another cluster with the
    <command>rbd</command> command, specify the <command>mirror pool peer
    bootstrap import</command> command, the pool name, a file path to the
    created token (or ‘-‘ to read from standard input), along with an
    optional site name to describe the local cluster and a mirroring direction
    (defaults to <literal>rx-tx</literal> for bidirectional mirroring, but can
    also be set to <literal>rx-only</literal> for unidirectional mirroring):
   </para>
<screen>&prompt.cephuser;rbd mirror pool peer bootstrap import [--site-name <replaceable>local-site-name</replaceable>] \
[--direction <replaceable>rx-only or rx-tx</replaceable>] <replaceable>pool-name</replaceable> <replaceable>token-path</replaceable></screen>
   <para>
    For example, on the secondary cluster:
   </para>
<screen>&prompt.cephuser;cat &gt;&gt;EOF &lt; token
eyJmc2lkIjoiOWY1MjgyZGItYjg5OS00NTk2LTgwOTgtMzIwYzFmYzM5NmYzIiwiY2xpZW50X2lkIjoicmJkLW1pcn \
Jvci1wZWVyIiwia2V5IjoiQVFBUnczOWQwdkhvQmhBQVlMM1I4RmR5dHNJQU50bkFTZ0lOTVE9PSIsIm1vbl9ob3N0I \
joiW3YyOjE5Mi4xNjguMS4zOjY4MjAsdjE6MTkyLjE2OC4xLjM6NjgyMV0ifQ==
EOF
&prompt.cephuser;rbd --cluster secondary mirror pool peer bootstrap import --site-name secondary image-pool token</screen>
  </sect2>

  <sect2 xml:id="rbd-mirror-remove-peers">
   <title>Removing cluster peer</title>
   <para>
    To remove a mirroring peer &ceph; cluster with the <command>rbd</command>
    command, specify the <command>mirror pool peer remove</command> command,
    the pool name, and the peer UUID (available from the <command>rbd mirror
    pool info</command> command):
   </para>
<screen>&prompt.cephuser;rbd mirror pool peer remove <replaceable>pool-name</replaceable> <replaceable>peer-uuid</replaceable></screen>
  </sect2>

  <sect2 xml:id="rbd-mirror-gui-config">
   <title>Configuring pool replication in the &dashboard;</title>
   <para>
    The <systemitem class="daemon">rbd-mirror</systemitem> daemon needs to have
    access to the primary cluster to be able to mirror RBD images. Ensure you
    have followed the steps in <xref linkend="rbd-mirror-peer-bootstrap"/>
    before continuing.
   </para>
   <procedure>
    <step>
     <para>
      On both the <emphasis>primary</emphasis> and
      <emphasis>secondary</emphasis> cluster, create pools with an identical
      name and assign the <literal>rbd</literal> application to them. Refer to
      <xref linkend="dashboard-pools-create"/> for more details on creating a
      new pool.
     </para>
     <figure>
      <title>Creating a pool with RBD application</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="rbd-mirror-pool.png" width="100%"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="rbd-mirror-pool.png" width="100%"/>
       </imageobject>
      </mediaobject>
     </figure>
    </step>
    <step>
     <para>
      On both the <emphasis>primary</emphasis> and
      <emphasis>secondary</emphasis> cluster's dashboards, navigate to
      <menuchoice><guimenu>Block</guimenu><guimenu>Mirroring</guimenu></menuchoice>.
      In the <guimenu>Pools</guimenu> table on the right, click the name of the
      pool to replicate, and after clicking <guimenu>Edit Mode</guimenu>,
      select the replication mode. In this example, we will work with a
      <emphasis>pool</emphasis> replication mode, which means that all images
      within a given pool will be replicated. Confirm with
      <guimenu>Update</guimenu>.
     </para>
     <figure>
      <title>Configuring the replication mode</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="rbd-mirror-pool-mode.png" width="100%"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="rbd-mirror-pool-mode.png" width="100%"/>
       </imageobject>
      </mediaobject>
     </figure>
     <important>
      <title>Error or warning on the primary cluster</title>
      <para>
       After updating the replication mode, an error or warning flag will
       appear in the corresponding right column. That is because the pool has
       no peer user for replication assigned yet. Ignore this flag for the
       <emphasis>primary</emphasis> cluster as we assign a peer user to the
       <emphasis>secondary</emphasis> cluster only.
      </para>
     </important>
    </step>
    <step>
     <para>
      On the <emphasis>secondary</emphasis> cluster's Dashboard, navigate to
      <menuchoice><guimenu>Block</guimenu><guimenu>Mirroring</guimenu></menuchoice>.
      Add the pool mirror peer by selecting <guimenu>Add Peer</guimenu>.
      Provide the <emphasis>primary</emphasis> cluster's details:
     </para>
     <figure>
      <title>Adding peer credentials</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="rbd-mirror-pool-peer.png" width="100%"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="rbd-mirror-pool-peer.png" width="100%"/>
       </imageobject>
      </mediaobject>
     </figure>
     <variablelist>
      <varlistentry>
       <term><guimenu>Cluster Name</guimenu></term>
       <listitem>
        <para>
         An arbitrary unique string that identifies the primary cluster, such
         as 'primary'. The cluster name needs to be different from the real
         secondary cluster's name.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><guimenu>CephX ID</guimenu></term>
       <listitem>
        <para>
         The &ceph; user ID that you created as a mirroring peer. In this
         example it is 'rbd-mirror-peer'.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><guimenu>Monitor Addresses</guimenu></term>
       <listitem>
        <para>
         Comma-separated list of IP addresses of the primary cluster's &mon;
         nodes.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><guimenu>CephX Key</guimenu></term>
       <listitem>
        <para>
         The key related to the peer user ID. You can retrieve it by running
         the following example command on the primary cluster:
        </para>
<screen>&prompt.cephuser;ceph auth print_key <replaceable>pool-mirror-peer-name</replaceable></screen>
       </listitem>
      </varlistentry>
     </variablelist>
     <para>
      Confirm with <guimenu>Submit</guimenu>.
     </para>
     <figure>
      <title>List of replicated pools</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="rbd-mirror-pool-list.png" width="100%"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="rbd-mirror-pool-list.png" width="100%"/>
       </imageobject>
      </mediaobject>
     </figure>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="rbd-mirror-test">
   <title>Verifying that RBD image replication works</title>
   <para>
    When the <systemitem class="daemon">rbd-mirror</systemitem> daemon is
    running and RBD image replication is configured on the &dashboard;, it is
    time to verify whether the replication actually works:
   </para>
   <procedure>
    <step>
     <para>
      On the <emphasis>primary</emphasis> cluster's &dashboard;, create an RBD
      image so that its parent pool is the pool that you already created for
      replication purposes. Enable the <option>Exclusive lock</option> and
      <option>Journaling</option> features for the image. Refer to
      <xref linkend="dashboard-rbds-create"/> for details on how to create RBD
      images.
     </para>
     <figure>
      <title>New RBD image</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="rbd-mirror-image.png" width="100%"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="rbd-mirror-image.png" width="100%"/>
       </imageobject>
      </mediaobject>
     </figure>
    </step>
    <step>
     <para>
      After you create the image that you want to replicate, open the
      <emphasis>secondary</emphasis> cluster's &dashboard; and navigate to
      <menuchoice><guimenu>Block</guimenu><guimenu>Mirroring</guimenu></menuchoice>.
      The <guimenu>Pools</guimenu> table on the right will reflect the change
      in the number of <guimenu># Remote</guimenu> images and synchronize the
      number of <guimenu># Local</guimenu> images.
     </para>
     <figure>
      <title>New RBD image synchronized</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="rbd-mirror-pool-list-1.png" width="100%"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="rbd-mirror-pool-list-1.png" width="100%"/>
       </imageobject>
      </mediaobject>
     </figure>
     <tip>
      <title>Replication progress</title>
      <para>
       The <guimenu>Images</guimenu> table at the bottom of the page shows the
       status of replication of RBD images. The <guimenu>Issues</guimenu> tab
       includes possible problems, the <guimenu>Syncing</guimenu> tab displays
       the progress of image replication, and the <guimenu>Ready</guimenu> tab
       lists all images with successful replication.
      </para>
      <figure>
       <title>RBD images' replication status</title>
       <mediaobject>
        <imageobject role="fo">
         <imagedata fileref="rbd-mirror-images-status.png" width="100%"/>
        </imageobject>
        <imageobject role="html">
         <imagedata fileref="rbd-mirror-images-status.png" width="100%"/>
        </imageobject>
       </mediaobject>
      </figure>
     </tip>
    </step>
    <step>
     <para>
      On the <emphasis>primary</emphasis> cluster, write data to the RBD image.
      On the <emphasis>secondary</emphasis> cluster's &dashboard;, navigate to
      <menuchoice><guimenu>Block</guimenu><guimenu>Images</guimenu></menuchoice>
      and monitor whether the corresponding image's size is growing as the data
      on the primary cluster is written.
     </para>
    </step>
   </procedure>
  </sect2>
 </sect1>
 <sect1 xml:id="dashboard-iscsi">
  <title>Managing &igw;s</title>

  <tip>
   <title>More information on &igw;s</title>
   <para>
    For more general information about &igw;s, refer to
    <xref linkend="cha-ceph-iscsi"/>.
   </para>
  </tip>

  <para>
   To list all available gateways and mapped images, click
   <menuchoice><guimenu>Block</guimenu><guimenu>iSCSI</guimenu></menuchoice>
   from the main menu. An <guimenu>Overview</guimenu> tab opens, listing
   currently configured &igw;s and mapped RBD images.
  </para>

  <para>
   The <guimenu>Gateways</guimenu> table lists each gateway's state, number of
   &iscsi; targets, and number of sessions. The <guimenu>Images</guimenu> table
   lists each mapped image's name, related pool name backstore type, and other
   statistical details.
  </para>

  <para>
   The <guimenu>Targets</guimenu> tab lists currently configured &iscsi;
   targets.
  </para>

  <figure>
   <title>List of &iscsi; targets</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="dash_igws.png" width="100%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="dash_igws.png" width="100%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>

  <para>
   To view more detailed information about a target, click the drop-down arrow
   on the target table row. A tree-structured schema opens, listing disks,
   portals, initiators, and groups. Click an item to expand it and view its
   detailed contents, optionally with a related configuration in the table on
   the right.
  </para>

  <figure>
   <title>&iscsi; target details</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="dash_igws_status.png" width="100%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="dash_igws_status.png" width="100%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>

  <sect2 xml:id="dashboard-iscsi-create">
   <title>Adding &iscsi; targets</title>
   <para>
    To add a new &iscsi; target, click <guimenu>Create</guimenu> in the top
    left of the <guimenu>Targets</guimenu> table and enter the required
    information.
   </para>
   <figure>
    <title>Adding a new target</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="dash_igws_add.png" width="100%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="dash_igws_add.png" width="100%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
   <procedure>
    <step>
     <para>
      Enter the target address of the new gateway.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Add portal</guimenu> and select one or multiple iSCSI
      portals from the list.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Add image</guimenu> and select one or multiple RBD images
      for the gateway.
     </para>
    </step>
    <step>
     <para>
      If you need to use authentication to access the gateway, activate the
      <guimenu>ACL Authentication</guimenu> check box and enter the
      credentials. You can find more advanced authentication options after
      activating <guimenu>Mutual authentication</guimenu> and
      <guimenu>Discovery authentication</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Confirm with <guimenu>Create Target</guimenu>.
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="dashboard-iscsi-edit">
   <title>Editing &iscsi; targets</title>
   <para>
    To edit an existing &iscsi; target, click its row in the
    <guimenu>Targets</guimenu> table and click <guimenu>Edit</guimenu> in the
    top left of the table.
   </para>
   <para>
    You can then modify the &iscsi; target, add or delete portals, and add or
    delete related RBD images. You can also adjust authentication information
    for the gateway.
   </para>
  </sect2>

  <sect2 xml:id="dashboard-iscsi-delete">
   <title>Deleting &iscsi; targets</title>
   <para>
    To delete an &iscsi; target, select the table row and click the drop-down
    arrow next to the <guimenu>Edit</guimenu> button and select
    <guimenu>Delete</guimenu>. Activate <guimenu>Yes, I am sure</guimenu> and
    confirm with <guimenu>Delete iSCSI target</guimenu>.
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="dash-rbd-qos">
  <title>RBD Quality of Service (QoS)</title>

  <tip>
   <title>For more information</title>
   <para>
    For more general information and a description of RBD QoS configuration
    options, refer to <xref linkend="rbd-qos" />.
   </para>
  </tip>

  <para>
   The QoS options can be configured at different levels.
  </para>

  <itemizedlist>
   <listitem>
    <para>
     Globally
    </para>
   </listitem>
   <listitem>
    <para>
     On a per-pool basis
    </para>
   </listitem>
   <listitem>
    <para>
     On a per-image basis
    </para>
   </listitem>
  </itemizedlist>

  <para>
   The <emphasis>global</emphasis> configuration is at the top of the list and
   will be used for all newly created RBD images and for those images that do
   not override these values on the pool or RBD image layer. An option value
   specified globally can be overridden on a per-pool or per-image basis.
   Options specified on a pool will be applied to all RBD images of that pool
   unless overridden by a configuration option set on an image. Options
   specified on an image will override options specified on a pool and will
   override options specified globally.
  </para>

  <para>
   This way it is possible to define defaults globally, adapt them for all RBD
   images of a specific pool, and override the pool configuration for
   individual RBD images.
  </para>

  <sect2 xml:id="dash-rbd-qos-global">
   <title>Configuring options globally</title>
   <para>
    To configure the &rbd; options globally, select
    <menuchoice><guimenu>Cluster</guimenu>
    <guimenu>Configuration</guimenu></menuchoice> from the main menu.
   </para>
   <procedure>
    <step>
     <para>
      To list all available global configuration options, next to
      <menuchoice><guimenu>Level</guimenu></menuchoice>, choose
      <menuchoice><guimenu>Advanced</guimenu></menuchoice> from the drop-down
      menu.
     </para>
    </step>
    <step>
     <para>
      Filter the results of the table by filtering for
      <literal>rbd_qos</literal> in the search field. This lists all available
      configuration options for QoS.
     </para>
    </step>
    <step>
     <para>
      To change a value, click the row in the table, then select
      <guimenu>Edit</guimenu> at the top left of the table. The
      <guimenu>Edit</guimenu> dialog contains six different fields for
      specifying values. The RBD configuration option values are required in
      the <guimenu>mgr</guimenu> text box.
     </para>
     <note>
      <para>
       Unlike the other dialogs, this one does not allow you to specify the
       value in convenient units. You need to set these values in either bytes
       or IOPS, depending on the option you are editing.
      </para>
     </note>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="dash-rbd-qos-pool-create">
   <title>Configuring options on a new pool</title>
   <para>
    To create a new pool and configure RBD configuration options on it, click
    <menuchoice><guimenu>Pools</guimenu>
    <guimenu>Create</guimenu></menuchoice>. Select
    <guimenu>replicated</guimenu> as pool type. You will then need to add the
    <literal>rbd</literal> application tag to the pool to be able to configure
    the RBD QoS options.
   </para>
   <note>
    <para>
     It is not possible to configure RBD QoS configuration options on an
     erasure coded pool. To configure the RBD QoS options for erasure coded
     pools, you need to edit the replicated metadata pool of an RBD image. The
     configuration will then be applied to the erasure coded data pool of that
     image.
    </para>
   </note>
  </sect2>

  <sect2 xml:id="dash-rbd-qos-pool-edit">
   <title>Configuring options on an existing pool</title>
   <para>
    To configure RBD QoS options on an existing pool, click
    <guimenu>Pools</guimenu>, then click the pool's table row and select
    <guimenu>Edit</guimenu> at the top left of the table.
   </para>
   <para>
    You should see the <guimenu>RBD Configuration</guimenu> section in the
    dialog, followed by a <guimenu>Quality of Service</guimenu> section.
   </para>
   <note>
    <para>
     If you see neither the <guimenu>RBD Configuration</guimenu> nor the
     <guimenu>Quality of Service</guimenu> section, you are likely either
     editing an <emphasis>erasure coded</emphasis> pool, which cannot be used
     to set RBD configuration options, or the pool is not configured to be used
     by RBD images. In the latter case, assign the <guimenu>rbd</guimenu>
     application tag to the pool and the corresponding configuration sections
     will show up.
    </para>
   </note>
  </sect2>

  <sect2 xml:id="dash-rbd-qos-qos">
   <title>Configuration options</title>
   <para>
    Click <guimenu>Quality of Service +</guimenu> to expand the configuration
    options. A list of all available options will show up. The units of the
    configuration options are already shown in the text boxes. In case of any
    bytes per second (BPS) option, you are free to use shortcuts such as '1M'
    or '5G'. They will be automatically converted to '1&nbsp;MB/s' and
    '5&nbsp;GB/s' respectively.
   </para>
   <para>
    By clicking the reset button to the right of each text box, any value set
    on the pool will be removed. This does not remove configuration values of
    options configured globally or on an RBD image.
   </para>
  </sect2>

  <sect2 xml:id="dash-rbd-qos-image-create">
   <title>Creating RBD QoS options with a new RBD image</title>
   <para>
    To create an RBD image with RBD QoS options set on that image, select
    <menuchoice><guimenu>Block</guimenu> <guimenu>Images</guimenu></menuchoice>
    and then click <guimenu>Create</guimenu>. Click
    <guimenu>Advanced...</guimenu> to expand the advanced configuration
    section. Click <guimenu>Quality of Service +</guimenu> to open all
    available configuration options.
   </para>
  </sect2>

  <sect2 xml:id="dash-rbd-qos-image-edit">
   <title>Editing RBD QoS options on existing images</title>
   <para>
    To edit RBD QoS options on an existing image, select
    <menuchoice><guimenu>Block</guimenu>
    <guimenu>Images</guimenu></menuchoice>, then click the pool's table row,
    and lastly click <guimenu>Edit</guimenu>. The edit dialog will show up.
    Click <guimenu>Advanced...</guimenu> to expand the advanced configuration
    section. Click <guimenu>Quality of Service +</guimenu> to open all
    available configuration options.
   </para>
  </sect2>

  <sect2 xml:id="dash-rbd-qos-image-copy">
   <title>Changing configuration options when copying or cloning images</title>
   <para>
    If an RBD image is cloned or copied, the values set on that particular
    image will be copied too, by default. If you want to change them while
    copying or cloning, you can do so by specifying the updated configuration
    values in the copy/clone dialog, the same way as when creating or editing
    an RBD image. Doing so will only set (or reset) the values for the RBD
    image that is copied or cloned. This operation changes neither the source
    RBD image configuration, nor the global configuration.
   </para>
   <para>
    If you choose to reset the option value on copying/cloning, no value for
    that option will be set on that image. This means that any value of that
    option specified for the parent pool will be used if the parent pool has
    the value configured. Otherwise, the global default will be used.
   </para>
  </sect2>
 </sect1>
</chapter>
