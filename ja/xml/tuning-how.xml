<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="tuning-how.xml" version="5.0" xml:id="tuning-how">
 <title>システムチューニングに関する一般的な注意事項</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:translation>yes</dm:translation>
   <dm:release>SES 7</dm:release>
  </dm:docmanager>
 </info>
 <para>
    このマニュアルでは、パフォーマンスの問題の理由を見つける方法について説明し、これらの問題を解決する手段を提供します。システムのチューニングを開始する前に、一般的な問題を除外し、問題の原因を特定しておく必要があります。また、多くの場合、ランダムなチューニングのヒントを適用しても役立たず、事態を悪化させる可能性があるため、システムのチューニング方法に関して詳細な計画を立てる必要もあります。
   </para>
 <procedure>
  <title>システムをチューニングする際の一般的なアプローチ</title>
  <step>
   <para>
    解決する必要がある問題を指定します。
   </para>
  </step>
  <step>
   <para>
    劣化が新しい場合は、システムに対する最近の変更を特定します。
   </para>
  </step>
  <step xml:id="tuning-basics-whyproblem">
   <para>
    問題がパフォーマンスの問題であるとみなされる理由を特定します。
   </para>
  </step>
  <step>
   <para>
    パフォーマンスを分析するために使用可能なメトリックを指定します。このメトリックには、たとえば、レイテンシ、スループット、同時にログインしているユーザの最大数、アクティブなユーザの最大数などがあります。
   </para>
  </step>
  <step>
   <para>
    以前の手順のメトリックを使用して現在のパフォーマンスを測定します。
   </para>
  </step>
  <step>
   <para>
    アプリケーションが最も多くの時間を費やしているサブシステムを特定します。
   </para>
  </step>
  <step>
   <para/>
   <substeps performance="required">
    <step>
     <para>
      システムおよび/またはアプリケーションを監視します。
     </para>
    </step>
    <step>
     <para>
      データを分析し、時間が費やされている場所を分類します。
     </para>
    </step>
   </substeps>
  </step>
  <step>
   <para>
    前のステップで特定されたサブシステムをチューニングします。
   </para>
  </step>
  <step>
   <para>
    以前と同じメトリックを使用して監視せずに現在のパフォーマンスを再測定します。
   </para>
  </step>
  <step>
   <para>
    パフォーマンスが依然として許容できない場合は、<xref linkend="tuning-basics-whyproblem"/>からやり直してください。
   </para>
  </step>
 </procedure>
 <sect1 xml:id="sec-tuning-basics-what">
  <title>解決している問題を理解する</title>

  <para>
   システムのチューニングを開始する前に、できるだけ正確に問題を説明してください。<quote>システムが低速です! </quote>のような文は問題の説明として役立ちません。たとえば、システム速度を一般的に改善する必要があるか、ピーク時にのみ改善する必要があるかなどの違いがある場合があります。
  </para>

  <para>
   さらに、問題に測定を適用できることを確認します。適用できない場合、チューニングが成功したかどうかを検証できません。常に<quote>前</quote>と<quote>後</quote>を比較できる必要があります。使用するメトリックは、対象のシナリオまたはアプリケーションによって異なります。たとえば、関連するWebサーバのメトリックは、次の用語で表すことができます。
  </para>

  <variablelist>
   <varlistentry>
    <term>遅延</term>
    <listitem>
     <para>
      ページを配信する時間。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>スループット</term>
    <listitem>
     <para>
      1秒あたりに処理されるページ数または1秒あたりに転送されるメガバイト数。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>アクティブユーザ</term>
    <listitem>
     <para>
      許容可能なレイテンシ内でページを受信しながら、ページをダウンロードできるユーザの最大数。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 xml:id="tuning-basics-common">
  <title>一般的な問題を除外する</title>

  <para>
   パフォーマンスの問題は、多くの場合、ネットワークまたはハードウェアの問題、バグ、または設定の問題が原因で発生します。システムのチューニングを試みる前に、以下に一覧表示しているような問題は除外してください。
  </para>

  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     <systemitem class="daemon">systemd</systemitem>ジャーナルの出力で異常なエントリがないか確認します。
    </para>
   </listitem>
   <listitem>
    <para>
     特定のプロセスが異常な量のCPU時間またはメモリを消費することで誤動作していないかどうかを(<command>top</command>または<command>ps</command>を使用して)確認します。
    </para>
   </listitem>
   <listitem>
    <para>
     <filename>/proc/net/dev</filename>を調べてネットワークの問題を確認します。
    </para>
   </listitem>
   <listitem>
    <para>
     物理ディスクでI/Oの問題が発生した場合は、ハードウェアの問題(<systemitem>smartmontools</systemitem>でディスクを確認)またはディスク全体が原因ではないことを確認します。
    </para>
   </listitem>
   <listitem>
    <para>
     サーバの負荷が低いときにバックグラウンドジョブが実行されるようにスケジュールされていることを確認します。これらのジョブは、低い優先度で実行する必要もあります(<command>nice</command>で設定)。
    </para>
   </listitem>
   <listitem>
    <para>
     マシンが同一リソースを使用していくつかのサービスを実行する場合は、サービスを別のサーバに移動することを検討します。
    </para>
   </listitem>
   <listitem>
    <para>
     最後に、ソフトウェアが最新であることを確認します。
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
 <sect1 xml:id="sec-tuning-basics-bottleneck">
  <title>ボトルネックの検出</title>

  <para>
   ボトルネックを頻繁に検出することは、システムをチューニングする際の最も難しい部分です。SUSE Enterprise Storageには、このタスクを支援するためのさまざまなツールが用意されています。問題が長時間の詳細分析を必要とする場合、Linuxカーネルはこのような分析を実行する手段を提供します。
  </para>

  <para>
   データを収集したら、分析する必要があります。まず、サーバのハードウェア(メモリ、CPU、バス)およびそのI/O容量(ディスク、ネットワーク)が十分であるかどうかを調べます。これらの基本条件が満たされている場合は、システムがチューニングのメリットを得る可能性があります。
  </para>
 </sect1>
 <sect1 xml:id="sec-tuning-basics-tuning">
  <title>段階的なチューニング</title>

  <para>
   チューニング自体を慎重に計画してください。一度に1つのステップのみを実行することが非常に重要です。そうすることでのみ、変更によって改善があったか、または悪影響があったかどうかを測定できます。各チューニングアクティビティは、重要なデータに基づいて分析を実行できるように、十分な期間にわたって測定する必要があります。プラスの効果を測定できない場合は、変更を永続的に行わないでください。将来的にマイナスの効果が生じる可能性があります。
  </para>
 </sect1>
</chapter>
