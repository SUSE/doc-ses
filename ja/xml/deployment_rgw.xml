<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="deployment_rgw.xml" version="5.0" xml:id="cha-ceph-additional-software-installation">

 <title>Ceph Object Gateway</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:maintainer>tbazant@suse.com</dm:maintainer>
   <dm:status>編集</dm:status>
   <dm:deadline/>
   <dm:priority/>
   <dm:translation>yes</dm:translation>
   <dm:languages/>
   <dm:release>SES 6</dm:release>
  </dm:docmanager>
 </info>
 <para>
  Ceph Object Gatewayは<literal>librgw</literal>上に構築されるオブジェクトストレージインタフェースで、アプリケーションにCephクラスタに対するRESTfulゲートウェイを提供します。サポートされるインタフェースは次の2つです。
 </para>
 <itemizedlist>
  <listitem>
   <para>
    「S3互換」<emphasis/>: Amazon S3 RESTful APIの大規模なサブセットと互換性のあるインタフェースを持つオブジェクトストレージ機能を提供します。
   </para>
  </listitem>
  <listitem>
   <para>
    「Swift互換」<emphasis/>: OpenStack Swift APIの大規模なサブセットと互換性のあるインタフェースを持つオブジェクトストレージ機能を提供します。
   </para>
  </listitem>
 </itemizedlist>
 <para>
  Object Gatewayデーモンは、デフォルトで「Beast」HTTPフロントエンドを使用します。これは、HTTPの解析のためにBoost.Beastライブラリを使用し、非同期ネットワークI/OのためにBoost.Asioライブラリを使用します。
 </para>
 <para>
  Object GatewayはOpenStack SwiftおよびAmazon S3と互換性があるインタフェースを提供するため、Object Gatewayは独自のユーザ管理機能を持ちます。Object Gatewayは、CephFSクライアントまたはRADOS Block Deviceクライアントからデータを保存するのに使用するものと同じクラスタにデータを保存できます。S3とSwiftのAPIは共通の名前空間を共有しているため、一方のAPIでデータを書き込んでもう一方で取得できます。
 </para>
 <important>
  <title>DeepSeaによって展開されたObject Gateway</title>
  <para>
   Object GatewayはDeepSeaの役割としてインストールされるようになったため、手動でインストールする必要はありません。
  </para>
  <para>
   クラスタ展開中にObject Gatewayをインストールするには、<xref linkend="ceph-install-stack"/>を参照してください。
  </para>
  <para>
   Object Gatewayが含まれる新しいノードをクラスタに追加するには、<xref linkend="salt-adding-services"/>を参照してください。
  </para>
 </important>
 <sect1 xml:id="rgw-installation">
  <title>Object Gatewayの手動インストール</title>

  <procedure>
   <step>
    <para>
     ポート80を使用していないノードにObject Gatewayをインストールします。次のコマンドで、必要なコンポーネントをすべてインストールします。
    </para>
<screen><prompt>cephadm@ogw &gt; </prompt>sudo zypper ref &amp;&amp; zypper in ceph-radosgw</screen>
   </step>
   <step>
    <para>
     古いObject GatewayインスタンスからApacheサーバが実行されている場合は、サーバを停止して関連サービスを無効にします。
    </para>
<screen><prompt>cephadm@ogw &gt; </prompt> sudo systemctl stop disable apache2.service</screen>
   </step>
   <step>
    <para>
     <filename>/etc/ceph/ceph.conf</filename>を編集して次の行を追加します。
    </para>
<screen>[client.rgw.gateway_host]
 rgw frontends = "beast port=80"</screen>
    <tip>
     <para>
      SSL暗号化を使用するようObject Gateway/Beastを設定する場合、適切に行を変更します。
     </para>
<screen>rgw frontends = beast ssl_port=7480 ssl_certificate=<replaceable>PATH_TO_CERTIFICATE.PEM</replaceable></screen>
    </tip>
   </step>
   <step>
    <para>
     Object Gatewayサービスを再起動します。
    </para>
<screen><prompt>cephadm@ogw &gt; </prompt>sudo systemctl restart ceph-radosgw@rgw.gateway_host</screen>
   </step>
  </procedure>

  <sect2 xml:id="ses-rgw-config">
   <title>Object Gatewayの設定</title>
   <para>
    Object Gatewayを設定するには、いくつかの手順が必要です。
   </para>
   <sect3>
    <title>基本的な設定</title>
    <para>
     Ceph Object Gatewayを設定するには、稼働中のCeph Storage Clusterが必要です。Ceph Object Gatewayは、そのCeph Storage Clusterのクライアントになります。Ceph Storage Clusterクライアントには以下が必要です。
    </para>
    <itemizedlist mark="bullet" spacing="normal">
     <listitem>
      <para>
       ゲートウェイインスタンスのホスト名(たとえば、<systemitem>gateway</systemitem>)。
      </para>
     </listitem>
     <listitem>
      <para>
       適切なパーミッションを持つStorage Clusterユーザ名とキーリング。
      </para>
     </listitem>
     <listitem>
      <para>
       データを保存するためのプール。
      </para>
     </listitem>
     <listitem>
      <para>
       ゲートウェイインスタンスのデータディレクトリ。
      </para>
     </listitem>
     <listitem>
      <para>
       Ceph設定ファイル内のインスタンスのエントリ。
      </para>
     </listitem>
    </itemizedlist>
    <para>
     Ceph Storage Clusterと通信するため、各インスタンスにユーザ名とキーが必要です。次の手順では、モニタノードを使用してブートストラップキーリングを作成してから、そのブートストラップキーリングに基づいてObject Gatewayインスタンスのユーザキーリングを作成します。続いて、クライアントユーザ名とキーを作成します。その次に、そのキーをCeph Storage Clusterに追加します。最後に、ゲートウェイインスタンスが含まれるノードにキーリングを配布します。
    </para>
    <procedure>
     <step>
      <para>
       ゲートウェイのキーリングを作成します。
      </para>
<screen><prompt>cephadm@adm &gt; </prompt>ceph-authtool --create-keyring /etc/ceph/ceph.client.rgw.keyring
<prompt>cephadm@adm &gt; </prompt>sudo chmod +r /etc/ceph/ceph.client.rgw.keyring</screen>
     </step>
     <step>
      <para>
       各インスタンスに対してCeph Object Gatewayのユーザ名とキーを生成します。例として、ここでは<systemitem>client.radosgw</systemitem>の後に<systemitem>gateway</systemitem>という名前を使用します。
      </para>
<screen><prompt>cephadm@adm &gt; </prompt>ceph-authtool /etc/ceph/ceph.client.rgw.keyring \
  -n client.rgw.gateway --gen-key</screen>
     </step>
     <step>
      <para>
       キーにケーパビリティを追加します。
      </para>
<screen><prompt>cephadm@adm &gt; </prompt>ceph-authtool -n client.rgw.gateway --cap osd 'allow rwx' \
  --cap mon 'allow rwx' /etc/ceph/ceph.client.rgw.keyring</screen>
     </step>
     <step>
      <para>
       キーリングとキーを作成して、Ceph Storage Clusterへのアクセスを持つCeph Object Gatewayを有効にしたら、そのキーをCephStorage Clusterに追加します。次に例を示します。
      </para>
<screen><prompt>cephadm@adm &gt; </prompt>ceph -k /etc/ceph/ceph.client.admin.keyring auth add client.rgw.gateway \
  -i /etc/ceph/ceph.client.rgw.keyring</screen>
     </step>
     <step>
      <para>
       ゲートウェイインスタンスが含まれるノードにキーリングを配布します。
      </para>
<screen><prompt>cephadm@adm &gt; </prompt>scp /etc/ceph/ceph.client.rgw.keyring  ceph@<replaceable>HOST_NAME</replaceable>:/home/ceph
<prompt>cephadm@adm &gt; </prompt>ssh ceph@<replaceable>HOST_NAME</replaceable>
<prompt>cephadm@ogw &gt; </prompt>mv ceph.client.rgw.keyring /etc/ceph/ceph.client.rgw.keyring</screen>
     </step>
    </procedure>
    <tip>
     <title>ブートストラップキーリングの使用</title>
     <para>
      もう1つの方法は、Object Gatewayのブートストラップキーリングを作成し、そこからObject Gatewayのキーリングを作成することです。
     </para>
     <procedure>
      <step>
       <para>
        モニタノードの1つでObject Gatewayのブートストラップキーリングを作成します。
       </para>
<screen><prompt>cephadm@mon &gt; </prompt>ceph \
 auth get-or-create client.bootstrap-rgw mon 'allow profile bootstrap-rgw' \
 --connect-timeout=25 \
 --cluster=ceph \
 --name mon. \
 --keyring=/var/lib/ceph/mon/ceph-<replaceable>NODE_HOST</replaceable>/keyring \
 -o /var/lib/ceph/bootstrap-rgw/keyring</screen>
      </step>
      <step>
       <para>
        ブートストラップキーリングを保存するため、<filename>/var/lib/ceph/radosgw/ceph-<replaceable>RGW_NAME</replaceable></filename>ディレクトリを作成します。
       </para>
<screen><prompt>cephadm@mon &gt; </prompt>mkdir \
/var/lib/ceph/radosgw/ceph-<replaceable>RGW_NAME</replaceable></screen>
      </step>
      <step>
       <para>
        新しく作成したブートストラップキーリングからObject Gatewayのキーリングを作成します。
       </para>
<screen><prompt>cephadm@mon &gt; </prompt>ceph \
 auth get-or-create client.rgw.<replaceable>RGW_NAME</replaceable> osd 'allow rwx' mon 'allow rw' \
 --connect-timeout=25 \
 --cluster=ceph \
 --name client.bootstrap-rgw \
 --keyring=/var/lib/ceph/bootstrap-rgw/keyring \
 -o /var/lib/ceph/radosgw/ceph-<replaceable>RGW_NAME</replaceable>/keyring</screen>
      </step>
      <step>
       <para>
        Object GatewayのキーリングをObject Gatewayホストにコピーします。
       </para>
<screen><prompt>cephadm@mon &gt; </prompt>scp \
/var/lib/ceph/radosgw/ceph-<replaceable>RGW_NAME</replaceable>/keyring \
<replaceable>RGW_HOST</replaceable>:/var/lib/ceph/radosgw/ceph-<replaceable>RGW_NAME</replaceable>/keyring</screen>
       <remark role="fixme">Does the scp command fail because it is not executed as remote root but local root?</remark>
      </step>
     </procedure>
    </tip>
   </sect3>
   <sect3 xml:id="ogw-pool-create">
    <title>プールの作成(オプション)</title>
    <para>
     Ceph Object Gatewayでは、特定のゲートウェイデータを保存するためにCeph Storage Clusterのプールが必要です。作成したユーザが適切なパーミッションを持っている場合、プールはゲートウェイによって自動的に作成されます。ただし、Cephの設定ファイルで、プールごとに適切なデフォルトの数の配置グループが設定されていることを確認してください。
    </para>
    <para>
     プール名は<literal><replaceable>ZONE_NAME</replaceable>.<replaceable>POOL_NAME</replaceable></literal>という構文に従っています。この例のように、ゲートウェイをデフォルトの地域とゾーンで設定する場合、デフォルトのゾーン名は「default」になります。
    </para>
<screen>.rgw.root
default.rgw.control
default.rgw.meta
default.rgw.log
default.rgw.buckets.index
default.rgw.buckets.data</screen>
    <para>
     プールを手動で作成するには、<xref linkend="ceph-pools-operate-add-pool"/>を参照してください。
    </para>
    <important>
     <title>Object Gatewayとイレージャコーディングプール</title>
     <para>
      イレージャコーディングは、<literal>default.rgw.buckets.data</literal>プールでのみ可能です。その他のプールはすべて複製する必要があります。そうしないとゲートウェイにアクセスできません。
     </para>
    </important>
   </sect3>
   <sect3>
    <title>Cephへのゲートウェイ設定の追加</title>
    <para>
     Ceph Object Gateway設定をCephの設定ファイルに追加します。Ceph Object Gatewayの設定では、Ceph Object Gatewayインスタンスを識別する必要があります。続いて、Ceph Object Gatewayデーモンをインストールしたホストの名前、キーリング(cephxで使用)、およびログファイル(オプション)を指定します。次に例を示します。
    </para>
<screen>[client.rgw.<replaceable>INSTANCE_NAME</replaceable>]
host = <replaceable>HOST_NAME</replaceable>
keyring = /etc/ceph/ceph.client.rgw.keyring</screen>
    <tip>
     <title>Object Gatewayのログファイル</title>
     <para>
      Object Gatewayのデフォルトのログファイルを上書きするには、次の行を含めます。
     </para>
<screen>log file = /var/log/radosgw/client.rgw.<replaceable>INSTANCE_NAME</replaceable>.log</screen>
    </tip>
    <para>
     ゲートウェイインスタンスの<literal>[client.rgw.*]</literal>の部分は、Cephの設定ファイルのこの部分を、Ceph Storage Clusterクライアントの設定用として識別します。クライアントタイプはCeph Object Gateway (radosgw)です。その後にインスタンス名が続きます。次に例を示します。
    </para>
<screen>[client.rgw.gateway]
host = ceph-gateway
keyring = /etc/ceph/ceph.client.rgw.keyring</screen>
    <note>
     <para>
      <replaceable>HOST_NAME</replaceable>は、ドメイン名を除くマシンのホスト名にする必要があります。
     </para>
    </note>
    <para>
     続いて、<literal>print continue</literal>をオフにします。これをtrueに設定すると、PUT操作で問題が発生することがあります。
    </para>
<screen>rgw print continue = false</screen>

    <para>
     Ceph Object GatewayをサブドメインS3呼び出し(たとえば、<literal>http://bucketname.hostname</literal>)と共に使用するには、Cephの設定ファイルの<literal>[client.rgw.gateway]</literal>セクションにCeph Object GatewayのDNS名を追加する必要があります。
    </para>
<screen>[client.rgw.gateway]
...
rgw dns name = <replaceable>HOST_NAME</replaceable></screen>
    <para>
     <literal>http://<replaceable>BUCKET_NAME</replaceable>.<replaceable>HOST_NAME</replaceable></literal>構文を使用する場合は、クライアントマシンにDnsmasqなどのDNSサーバをインストールすることを検討する必要もあります。<filename>dnsmasq.conf</filename>ファイルに以下の設定を含める必要があります。
    </para>
<screen>address=/<replaceable>HOST_NAME</replaceable>/<replaceable>HOST_IP_ADDRESS</replaceable>
listen-address=<replaceable>CLIENT_LOOPBACK_IP</replaceable></screen>
    <para>
     続いて、<replaceable>CLIENT_LOOPBACK_IP</replaceable>のIPアドレスをクライアントマシン上の最初のDNSサーバとして追加します。
    </para>
   </sect3>
   <sect3>
    <title>データディレクトリの作成</title>
    <para>
     展開スクリプトによってCeph Object Gatewayのデフォルトのデータディレクトリが作成されない場合があります。まだデータディレクトリを作成していない場合は、radosgwデーモンの各インスタンスに対して作成します。Cephの設定ファイルの<literal>host</literal>変数は、radosgwの各インスタンスをどのホストで実行するかを指定します。一般的な形式では、radosgwデーモン、クラスタ名、およびデーモンIDを指定します。
    </para>
<screen><prompt>root # </prompt>mkdir -p /var/lib/ceph/radosgw/<replaceable>CLUSTER_ID</replaceable></screen>
    <para>
     上のサンプルの<filename>ceph.conf</filename>設定を使用する場合、以下を実行します。
    </para>
<screen><prompt>root # </prompt>mkdir -p /var/lib/ceph/radosgw/ceph-radosgw.gateway</screen>
   </sect3>
   <sect3>
    <title>サービスの再起動とゲートウェイの起動</title>
    <para>
     すべてのコンポーネントが確実に設定を再ロードするよう、Ceph Storage Clusterサービスを再起動することをお勧めします。その後、<systemitem>radosgw</systemitem>サービスを起動します。詳細については、<xref linkend="cha-ceph-operating"/>および<xref linkend="ceph-rgw-operating"/>を参照してください。
    </para>
    <para>
     サービスが稼働したら、匿名のGET要求を実行して、ゲートウェイが応答を返すかどうかを確認できます。ドメイン名に対して簡単なHTTP要求を実行すると、以下が返されるはずです。
    </para>
<screen>&lt;ListAllMyBucketsResult&gt;
      &lt;Owner&gt;
              &lt;ID&gt;anonymous&lt;/ID&gt;
              &lt;DisplayName/&gt;
      &lt;/Owner&gt;
      &lt;Buckets/&gt;
&lt;/ListAllMyBucketsResult&gt;</screen>
   </sect3>
  </sect2>
 </sect1>
</chapter>
