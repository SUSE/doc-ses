<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="containerized-kubernetes.xml" version="5.0" xml:id="cha-container-kubernetes">

 <title>SUSE CaaS Platform 4 Kubernetesクラスタ上のSUSE Enterprise Storage 6</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:maintainer>tbazant@suse.com</dm:maintainer>
   <dm:status>編集</dm:status>
   <dm:deadline/>
   <dm:priority/>
   <dm:translation>yes</dm:translation>
   <dm:languages/>
   <dm:release>SES 6</dm:release>
  </dm:docmanager>
 </info>
 <warning>
  <title>技術プレビュー</title>
  <para>
   SUSE CaaS Platform上でコンテナ化されたCephクラスタを実行することは、技術プレビューです。Kubernetesの運用クラスタには展開しないでください。
  </para>
 </warning>
 <para>
  この章では、SUSE CaaS Platform 4 Kubernetesクラスタ上でコンテナ化されたSUSE Enterprise Storage 6を展開する方法について説明します。
 </para>
 <sect1 xml:id="kube-consider">
  <title>注意事項</title>

  <para>
   展開を開始する前に、次の点を考慮してください。
  </para>

  <itemizedlist>
   <listitem>
    <para>
     KubernetesでCephを実行するため、SUSE Enterprise Storage 6はRook (<link xlink:href="https://rook.io/"/>)と呼ばれるアップストリームプロジェクトを使用します。
    </para>
   </listitem>
   <listitem>
    <para>
     設定によっては、Rookは、Kubernetesクラスタ内にあるすべてのノード上の未使用ディスクを「すべて」使用する場合があります。<emphasis/>
    </para>
   </listitem>
   <listitem>
    <para>
     セットアップには特権付きのコンテナが必要です。
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
 <sect1 xml:id="kube-prereq">
  <title>前提条件</title>

  <para>
   展開を開始する前に、以下が必要です。
  </para>

  <itemizedlist>
   <listitem>
    <para>
     稼働中のSUSE CaaS Platform 4クラスタ。
    </para>
   </listitem>
   <listitem>
    <para>
     SUSE CaaS Platform 4のワーカノードと、Cephクラスタ用のストレージとして追加された多数の追加ディスク。
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
 <sect1 xml:id="kube-rook-manifests">
  <title>Rookマニフェストの取得</title>

  <para>
   Rookオーケストレータは、「マニフェスト」と呼ばれるYAML形式の設定ファイルを使用します。<emphasis/>必要なマニフェストは、
   <package>rook-k8s-yaml</package> のRPMパッケージに含まれています。次のコマンドを実行して、これをインストールします。
  </para>

<screen><prompt>root # </prompt>zypper install rook-k8s-yaml</screen>
 </sect1>
 <sect1 xml:id="kube-install">
  <title>インストール</title>

  <para>
   Rook-Cephには、2つのメインコンポーネントが含まれます。Kubernetesによって実行され、Cephクラスタを作成できるようにする「オペレータ」と、オペレータによって作成され、部分的に管理されるCeph「クラスタ」そのものです。
  </para>

  <sect2 xml:id="kube-configure">
   <title>設定</title>
   <sect3 xml:id="kube-configure-global">
    <title>グローバル設定</title>
    <para>
     このセットアップで使用されるマニフェストは、RookおよびCephのすべてのコンポーネントを「rook-ceph」ネームスペースにインストールします。これを変更する必要がある場合は、Kubernetesマニフェストでこのネームスペースへのすべての参照を適切に変更します。
    </para>
    <para>
     使用するRookの機能に応じて、<filename>common.yaml</filename>の「Pod Security Policy」の設定を変更し、Rookのセキュリティ要件を制限します。マニフェストファイルのコメントに従います。
    </para>
   </sect3>
   <sect3 xml:id="kube-config-operator">
    <title>オペレータの設定</title>
    <para>
     マニフェスト<filename>operator.yaml</filename>は、Rookオペレータを設定します。通常、変更する必要はありません。マニフェストファイルのコメントに従って、詳細を確認してください。
    </para>
   </sect3>
   <sect3 xml:id="kube-config-ceph">
    <title>Cephクラスタの設定</title>
    <para>
     マニフェスト<filename>cluster.yaml</filename>は、Kubernetesで実行される実際のCephクラスタを設定します。使用可能なすべてのオプションの詳しい説明については、<link xlink:href="https://rook.io/docs/rook/v1.0/ceph-cluster-crd.html"/>にあるアップストリームのRookドキュメントを参照してください。
    </para>
    <para>
     デフォルトでは、Rookは、<option>node-role.kubernetes.io/master:NoSchedule</option>が指定されていないすべてのノードを使用するように設定され、設定されている配置設定に従います(<link xlink:href="https://rook.io/docs/rook/v1.0/ceph-cluster-crd.html#placement-configuration-settings"/>を参照してください)。次の例では、このような動作を無効にし、nodesセクションで明示的に一覧にされているノードのみを使用します。
    </para>
<screen>
storage:
  useAllNodes: false
  nodes:
    - name: caasp4-worker-0
    - name: caasp4-worker-1
    - name: caasp4-worker-2
</screen>
    <note>
     <para>
      デフォルトでは、Rookは、各ノード上にある空きディスクと空のディスクをすべて使用して、Cephストレージとして使うように設定されます。
     </para>
    </note>
   </sect3>
   <sect3 xml:id="kube-config-docs">
    <title>マニュアル</title>
    <itemizedlist>
     <listitem>
      <para>
       <link xlink:href="https://rook.github.io/docs/rook/master/ceph-storage.html"/>にあるRook-Cephアップストリームマニュアルには、より詳細な展開を設定するための詳細情報が記載されています。このマニュアルをリファレンスとして使用してRook-Cephの基礎を理解してから、詳細設定を行ってください。
      </para>
     </listitem>
     <listitem>
      <para>
       SUSE CaaS Platform製品の詳細については、<link xlink:href="https://www.suse.com/documentation/suse-caasp"/>を参照してください。
      </para>
     </listitem>
    </itemizedlist>
   </sect3>
  </sect2>

  <sect2 xml:id="kube-config-rook-operator">
   <title>Rookオペレータの作成</title>
   <para>
    次のコマンドを実行して、SUSE CaaS Platformマスタノードに、Rook-Cephの共通コンポーネント、CSIの役割、およびRook-Cephオペレータをインストールします。
   </para>
<screen><prompt>root # </prompt>kubectl apply -f common.yaml -f operator.yaml</screen>
   <para>
    <filename>common.yaml</filename>は、「rook-ceph」ネームスペース、KubernetesがCephオブジェクト(「CephCluster」など)を認識できるようにするためのCeph CRD (カスタムリソース定義) (<link xlink:href="https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/"/>を参照)、およびRookがクラスタ固有のリソースを管理できるようにするために必要なおよびRBACの役割とPod Security Policy (<link xlink:href="https://kubernetes.io/docs/concepts/policy/pod-security-policy/"/>を参照)を作成します。
   </para>
   <tip>
    <title><option>hostNetwork</option>と<option>hostPorts</option>の使用</title>
    <para>
     クラスタリソース定義で<option>hostNetwork: true</option>を使用する場合、<option>hostNetwork</option>を使用できるようにする必要があります。また、<literal>PodSecurityPolicy</literal>で<option>hostPorts</option>を使用できるようにする必要もあります。
    </para>
   </tip>
   <para>
    SUSE CaaS Platformマスタノードで<command>kubectl get pods -n rook-ceph</command>を実行して、インストールを確認します。次に例を示します。
   </para>
<screen><prompt>root # </prompt>kubectl get pods -n rook-ceph
NAME                                     READY   STATUS      RESTARTS   AGE
rook-ceph-agent-57c9j                    1/1     Running     0          22h
rook-ceph-agent-b9j4x                    1/1     Running     0          22h
rook-ceph-operator-cf6fb96-lhbj7         1/1     Running     0          22h
rook-discover-mb8gv                      1/1     Running     0          22h
rook-discover-tztz4                      1/1     Running     0          22h</screen>
  </sect2>

  <sect2 xml:id="kube-create-ceph-cluster">
   <title>Cephクラスタの作成</title>
   <para>
    ニーズに合わせて<filename>cluster.yaml</filename>を変更したら、Cephクラスタを作成できます。SUSE CaaS Platformマスタノードで次のコマンドを実行します。
   </para>
<screen><prompt>root # </prompt>kubectl apply -f cluster.yaml</screen>
   <para>
    「rook-ceph」ネームスペースを確認して、Cephクラスタが作成されていること確認します。<filename>cluster.yaml</filename>マニフェストで設定した数のCeph Manager (デフォルトは3つ)、1つのCeph Monitor、および空きディスクと同じ数のCeph OSDが表示されます。
   </para>
   <tip>
    <title>一時的なOSDポッド</title>
    <para>
     Cephクラスタのブートストラップ中に、<literal>rook-ceph-osd-prepare-<replaceable>NODE-NAME</replaceable></literal>という名前の複数のポッドがしばらく実行された後、「Completed」のステータスで終了するのを確認できます。名前からわかるように、これらのポッドはCeph OSDをプロビジョニングします。終了後にログを検査できるように、これらのログは削除されずに残されます。次に例を示します。
    </para>
<screen><prompt>root # </prompt>kubectl get pods --namespace rook-ceph
NAME                                         READY  STATUS     RESTARTS  AGE
rook-ceph-agent-57c9j                        1/1    Running    0         22h
rook-ceph-agent-b9j4x                        1/1    Running    0         22h
rook-ceph-mgr-a-6d48564b84-k7dft             1/1    Running    0         22h
rook-ceph-mon-a-cc44b479-5qvdb               1/1    Running    0         22h
rook-ceph-mon-b-6c6565ff48-gm9wz             1/1    Running    0         22h
rook-ceph-operator-cf6fb96-lhbj7             1/1    Running    0         22h
rook-ceph-osd-0-57bf997cbd-4wspg             1/1    Running    0         22h
rook-ceph-osd-1-54cf468bf8-z8jhp             1/1    Running    0         22h
rook-ceph-osd-prepare-caasp4-worker-0-f2tmw  0/2    Completed  0         9m35s
rook-ceph-osd-prepare-caasp4-worker-1-qsfhz  0/2    Completed  0         9m33s
rook-ceph-tools-76c7d559b6-64rkw             1/1    Running    0         22h
rook-discover-mb8gv                          1/1    Running    0         22h
rook-discover-tztz4                          1/1    Running    0         22h</screen>
   </tip>
  </sect2>
 </sect1>
 <sect1 xml:id="kube-using-rook">
  <title>Kubernetesワークロード用ストレージとしてのRookの使用</title>

  <para>
   Rookでは、3つの異なるタイプのストレージを使用できます。
  </para>

  <variablelist>
   <varlistentry>
    <term><emphasis role="bold">オブジェクトストレージ</emphasis></term>
    <listitem>
     <para>
      オブジェクトストレージは、S3 APIをストレージクラスタに公開し、アプリケーションがデータを配置および取得できるようにします。詳細な説明については、<link xlink:href="https://rook.io/docs/rook/v1.0/ceph-object.html"/>を参照してください。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>共有ファイルシステム</term>
    <listitem>
     <para>
      共有ファイルシステムは、複数のポッドから読み込み/書き込み許可を使用してマウントできます。これは、共有ファイルシステムを使用してクラスタ化されるアプリケーションで役立ちます。詳細な説明については、<link xlink:href="https://rook.io/docs/rook/v1.0/ceph-filesystem.html"/>を参照してください。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>ブロックストレージ</term>
    <listitem>
     <para>
      ブロックストレージでは、1つのポッドにストレージをマウントできます。詳細な説明については、<link xlink:href="https://rook.io/docs/rook/v1.0/ceph-block.html"/>を参照してください。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 xml:id="kube-uninstall">
  <title>Rookのアンインストール</title>

  <para>
   Rookをアンインストールするには、次の手順に従います。
  </para>

  <procedure>
   <step>
    <para>
     Rookストレージを使用しているすべてのKubernetesアプリケーションを削除します。
    </para>
   </step>
   <step>
    <para>
     <xref linkend="kube-using-rook"/>に従って、作成したオブジェクト、ファイル、およびブロックストレージのアーティファクトをすべて削除します。
    </para>
   </step>
   <step>
    <para>
     Cephクラスタ、オペレータ、および関連するリソースを削除します。
    </para>
<screen>
<prompt>root # </prompt>kubectl delete -f cluster.yaml
<prompt>root # </prompt>kubectl delete -f operator.yaml
<prompt>root # </prompt>kubectl delete -f common.yaml
</screen>
   </step>
   <step>
    <para>
     ホスト上のデータを削除します。
    </para>
<screen><prompt>root # </prompt>rm -rf /var/lib/rook</screen>
   </step>
   <step>
    <para>
     必要に応じて、Rookによって使用されていたディスクを消去します。詳細については、<link xlink:href="https://rook.io/docs/rook/master/ceph-teardown.html"/>を参照してください。
    </para>
   </step>
  </procedure>
 </sect1>
</chapter>
