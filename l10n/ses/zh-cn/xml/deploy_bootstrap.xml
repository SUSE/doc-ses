<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="deploy_bootstrap.xml" version="5.0" xml:id="deploy-bootstrap">
 <info>
  <title>使用 <systemitem class="resource">ceph-salt</systemitem> 部署引导集群</title>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:translation>yes</dm:translation>
   <dm:release>SES 7</dm:release>
  </dm:docmanager>
 </info>
 <para>
  本节将指导您完成部署基本 Ceph 集群的过程。请仔细阅读下面的小节，并按给定的顺序执行所包含的命令。
 </para>
 <sect1 xml:id="deploy-cephadm-cephsalt">
  <title>安装 <systemitem class="resource">ceph-salt</systemitem></title>

  <para>
   <systemitem class="resource">ceph-salt</systemitem> 提供了用于部署由 cephadm 管理的 Ceph 集群的工具。<systemitem class="resource">ceph-salt</systemitem> 使用 Salt 基础结构来执行操作系统管理（例如，软件更新或时间同步），并为 Salt 受控端定义角色。
  </para>

  <para>
   在 Salt 主控端上安装 <package>ceph-salt</package> 软件包：
  </para>

<screen><prompt>root@master # </prompt>zypper install ceph-salt</screen>

  <para>
   上面的命令将 <package>ceph-salt-formula</package> 安装为依赖项，它通过在 <filename>/etc/salt/master.d</filename> 目录中插入额外的文件修改了 Salt 主控端配置。要应用更改，请重启动 <systemitem class="daemon">salt-master.service</systemitem> 并同步 Salt 模块：
  </para>

<screen>
<prompt>root@master # </prompt>systemctl restart salt-master.service
<prompt>root@master # </prompt>salt \* saltutil.sync_all
</screen>
 </sect1>
 <sect1 xml:id="deploy-cephadm-configure">
  <title>配置集群属性</title>

  <para>
   使用 <command>ceph-salt config</command> 命令可配置集群的基本属性。
  </para>

  <important>
   <para>
    <filename>/etc/ceph/ceph.conf</filename> 文件由 cephadm 管理，用户<emphasis>不得</emphasis>编辑该文件。应使用新的 <command>ceph config</command> 命令设置 Ceph 配置参数。有关更多信息，请参见<xref linkend="cha-ceph-configuration-db"/>。
   </para>
  </important>

  <sect2 xml:id="deploy-cephadm-configure-shell">
   <title>使用 <systemitem class="resource">ceph-salt</systemitem> 外壳</title>
   <para>
    如果在不带任何路径或子命令的情况下运行 <command> config</command>，您将进入交互式 <systemitem class="resource">ceph-salt</systemitem>ceph-salt 外壳。如果您需要成批配置多个属性，并且不想键入完整的命令语法，使用外壳会非常方便。
   </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config
<prompt>/&gt;</prompt> ls
o- / ............................................................... [...]
  o- ceph_cluster .................................................. [...]
  | o- minions .............................................. [no minions]
  | o- roles ....................................................... [...]
  |   o- admin .............................................. [no minions]
  |   o- bootstrap ........................................... [no minion]
  |   o- cephadm ............................................ [no minions]
  |   o- tuned ..................................................... [...]
  |     o- latency .......................................... [no minions]
  |     o- throughput ....................................... [no minions]
  o- cephadm_bootstrap ............................................. [...]
  | o- advanced .................................................... [...]
  | o- ceph_conf ................................................... [...]
  | o- ceph_image_path .................................. [ no image path]
  | o- dashboard ................................................... [...]
  | | o- force_password_update ................................. [enabled]
  | | o- password ................................................ [admin]
  | | o- ssl_certificate ....................................... [not set]
  | | o- ssl_certificate_key ................................... [not set]
  | | o- username ................................................ [admin]
  | o- mon_ip .................................................. [not set]
  o- containers .................................................... [...]
  | o- registries_conf ......................................... [enabled]
  | | o- registries .............................................. [empty]
  | o- registry_auth ............................................... [...]
  |   o- password .............................................. [not set]
  |   o- registry .............................................. [not set]
  |   o- username .............................................. [not set]
  o- ssh ............................................... [no key pair set]
  | o- private_key .................................. [no private key set]
  | o- public_key .................................... [no public key set]
  o- time_server ........................... [enabled, no server host set]
    o- external_servers .......................................... [empty]
    o- servers ................................................... [empty]
    o- subnet .................................................. [not set]
</screen>
   <para>
    从 <systemitem class="resource">ceph-salt</systemitem> 的 <command>ls</command> 命令输出中您可以看到，集群配置是以树状结构组织的。要在 <systemitem class="resource">ceph-salt</systemitem> 外壳中配置集群的特定属性，可使用以下两个选项：
   </para>
   <itemizedlist>
    <listitem>
     <para>
      从当前位置运行命令，并输入属性的绝对路径作为第一个参数：
     </para>
<screen>
<prompt>/&gt;</prompt> /cephadm_bootstrap/dashboard ls
o- dashboard ....................................................... [...]
  o- force_password_update ..................................... [enabled]
  o- password .................................................... [admin]
  o- ssl_certificate ........................................... [not set]
  o- ssl_certificate_key ....................................... [not set]
  o- username .................................................... [admin]
<prompt>/&gt; /cephadm_bootstrap/dashboard/username set ceph-admin</prompt>
Value set.
</screen>
    </listitem>
    <listitem>
     <para>
      更改为需要配置和运行命令的属性的路径：
     </para>
<screen>
<prompt>/&gt;</prompt> cd /cephadm_bootstrap/dashboard/
<prompt>/ceph_cluster/minions&gt;</prompt> ls
o- dashboard ....................................................... [...]
  o- force_password_update ..................................... [enabled]
  o- password .................................................... [admin]
  o- ssl_certificate ........................................... [not set]
  o- ssl_certificate_key ....................................... [not set]
  o- username ................................................[ceph-admin]
</screen>
    </listitem>
   </itemizedlist>
   <tip>
    <title>自动完成配置代码段</title>
    <para>
     在 <systemitem class="resource">ceph-salt</systemitem> 外壳中，您可以使用类似于常规 Linux 外壳 (Bash) 自动完成的自动完成功能。它可以完成配置路径、子命令或 Salt 受控端名称。自动完成配置路径时，可使用以下两个选项：
    </para>
    <itemizedlist>
     <listitem>
      <para>
       要让外壳完成您当前位置的相对路径，请按 TAB 键 <keycap function="tab"/> 两次。
      </para>
     </listitem>
     <listitem>
      <para>
       要让外壳完成绝对路径，请输入 <keycap>/</keycap> 并按 TAB 键 <keycap function="tab"/> 两次。
      </para>
     </listitem>
    </itemizedlist>
   </tip>
   <tip>
    <title>使用光标键导航</title>
    <para>
     如果从 <command> 外壳输入 </command>cd<systemitem class="resource">ceph-salt</systemitem> 而不带任何路径，则该命令将列显集群配置的树状结构，其中当前路径对应的行处于活动状态。您可以使用向上和向下光标键在各行之间导航。按 <keycap function="enter"/> 进行确认后，配置路径将更改为最后一个活动路径。
    </para>
   </tip>
   <important>
    <title>约定</title>
    <para>
     为了保持文档的一致性，我们将使用单一命令语法，而不输入 <systemitem class="resource">ceph-salt</systemitem> 外壳。例如，您可以使用以下命令列出集群配置树：
    </para>
<screen><prompt>root@master # </prompt>ceph-salt config ls</screen>
   </important>
  </sect2>

  <sect2 xml:id="deploy-cephadm-configure-minions">
   <title>添加 Salt 受控端</title>
   <para>
    将我们在<xref linkend="deploy-salt"/>中部署并接受的所有或部分 Salt 受控端包含到 Ceph 集群配置中。您可以通过全名指定 Salt 受控端，也可以使用 glob 表达式“*”和“？”一次包含多个 Salt 受控端。在 <literal>/ceph_cluster/minions</literal> 路径下使用 <command>add</command> 子命令。以下命令包含所有已接受 Salt 受控端：
   </para>
<screen><prompt>root@master # </prompt>ceph-salt config /ceph_cluster/minions add '*'</screen>
   <para>
    确认是否添加了指定的 Salt 受控端：
   </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config /ceph_cluster/minions ls
o- minions ................................................. [Minions: 5]
  o- ses-master.example.com .................................. [no roles]
  o- ses-min1.example.com .................................... [no roles]
  o- ses-min2.example.com .................................... [no roles]
  o- ses-min3.example.com .................................... [no roles]
  o- ses-min4.example.com .................................... [no roles]
</screen>
  </sect2>

  <sect2 xml:id="deploy-cephadm-configure-cephadm">
   <title>指定由 cephadm 管理的 Salt 受控端</title>
   <para>
    指定哪些节点将属于 Ceph 集群并由 cephadm 管理。包含将运行 Ceph 服务的所有节点以及管理节点：
   </para>
<screen><prompt>root@master # </prompt>ceph-salt config /ceph_cluster/roles/cephadm add '*'</screen>
  </sect2>

  <sect2 xml:id="deploy-cephadm-configure-admin">
   <title>指定管理节点</title>
   <para>
    管理节点是安装 <filename>ceph.conf</filename> 配置文件和 Ceph 管理密钥环的节点。通常在管理节点上运行与 Ceph 相关的命令。
   </para>
   <tip>
    <title>Salt 主控端和管理节点位于同一节点</title>
    <para>
     在所有或大多数主机都属于 SUSE Enterprise Storage 的同类环境中，建议将管理节点和 Salt 主控端置于同一主机。
    </para>
    <para>
     而对于一个 Salt 基础结构托管多个集群（例如 SUSE Enterprise Storage 和 SUSE Manager）的异构环境，请<emphasis>勿</emphasis>将管理节点和 Salt 主控端置于同一主机。
    </para>
   </tip>
   <para>
    要指定管理节点，请运行以下命令：
   </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config /ceph_cluster/roles/admin add ses-master.example.com
1 minion added.
<prompt>root@master # </prompt>ceph-salt config /ceph_cluster/roles/admin ls
o- admin ................................................... [Minions: 1]
  o- ses-master.example.com ...................... [Other roles: cephadm]
</screen>
   <tip>
    <title>在多个节点上安装 <filename>ceph.conf</filename> 和管理密钥环</title>
    <para>
     如果是部署所需，您可以在多个节点上安装 Ceph 配置文件和管理密钥环。出于安全原因，请避免将其安装在集群的所有节点上。
    </para>
   </tip>
  </sect2>

  <sect2 xml:id="deploy-cephadm-configure-mon">
   <title>指定第一个 MON/MGR 节点</title>
   <para>
    您需要指定将要引导集群的集群 Salt 受控端。此受控端将成为第一个运行 Ceph Monitor 和 Ceph Manager 服务的受控端 。
   </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config /ceph_cluster/roles/bootstrap set ses-min1.example.com
Value set.
<prompt>root@master # </prompt>ceph-salt config /ceph_cluster/roles/bootstrap ls
o- bootstrap ..................................... [ses-min1.example.com]
</screen>
   <para>
    此外，您还需要在公共网络上指定引导 MON 的 IP 地址，以确保 <option>public_network</option> 参数设置正确，例如：
   </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/mon_ip set 192.168.10.20
</screen>
  </sect2>

  <sect2 xml:id="deploy-cephadm-tuned-profiles">
   <title>指定调整的配置</title>
   <para>
    您需要指定集群的哪些受控端具有主动调整的配置。为此，请使用以下命令显式添加这些角色：
   </para>
   <note>
    <para>
     一个受控端不能同时拥有 <literal>latency</literal> 和 <literal>throughput</literal> 角色。
    </para>
   </note>
<screen>
<prompt>root@master # </prompt>ceph-salt config /ceph_cluster/roles/tuned/latency add ses-min1.example.com
Adding ses-min1.example.com...
1 minion added.
<prompt>root@master # </prompt>ceph-salt config /ceph_cluster/roles/tuned/throughput add ses-min2.example.com
Adding ses-min2.example.com...
1 minion added.
</screen>
  </sect2>

  <sect2 xml:id="deploy-cephadm-configure-ssh">
   <title>生成 SSH 密钥对</title>
   <para>
    cephadm 使用 SSH 协议与集群节点通讯。将自动创建名为 <literal>cephadm</literal> 的用户帐户并用于 SSH 通讯。
   </para>
   <para>
    您需要生成 SSH 密钥对的私用和公共部分：
   </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config /ssh generate
Key pair generated.
<prompt>root@master # </prompt>ceph-salt config /ssh ls
o- ssh .................................................. [Key Pair set]
  o- private_key ..... [53:b1:eb:65:d2:3a:ff:51:6c:e2:1b:ca:84:8e:0e:83]
  o- public_key ...... [53:b1:eb:65:d2:3a:ff:51:6c:e2:1b:ca:84:8e:0e:83]
</screen>
  </sect2>

  <sect2 xml:id="deploy-cephadm-configure-ntp">
   <title>配置时间服务器</title>
   <para>
    所有集群节点都需要与可靠的时间源进行时间同步。有以下几种方案可以实现时间同步：
   </para>
   <itemizedlist>
    <listitem>
     <para>
      如果所有集群节点都已配置为使用所选 NTP 服务同步其时间，请完全禁用时间服务器处理：
     </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config /time_server disable
</screen>
    </listitem>
    <listitem>
     <para>
      如果您的站点已有单一时间源，请指定时间源的主机名：
     </para>
<screen>
 <prompt>root@master # </prompt>ceph-salt config /time_server/servers add <replaceable>time-server.example.com</replaceable>
</screen>
    </listitem>
    <listitem>
     <para>
      另外，<systemitem class="resource">ceph-salt</systemitem> 可以配置一个 Salt 受控端来充当集群其余受控端的时间服务器。有时，它被称为“内部时间服务器”。在此方案中，<systemitem class="resource">ceph-salt</systemitem> 将配置内部时间服务器（应为其中一个 Salt 受控端）以使其时间与外部时间服务器（例如 <literal>pool.ntp.org</literal>）同步，并将所有其他受控端配置为从内部时间服务器获取时间。可以通过以下命令来实现：
     </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config /time_server/servers add ses-master.example.com
<prompt>root@master # </prompt>ceph-salt config /time_server/external_servers add pool.ntp.org
</screen>
     <para>
      <option>/time_server/subnet</option> 选项指定允许 NTP 客户端通过其访问 NTP 服务器的子网。当您指定 <option>/time_server/servers</option> 时，会自动设置该选项。如果需要更改该选项或手动指定，请运行：
     </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config /time_server/subnet set 10.20.6.0/24
</screen>
    </listitem>
   </itemizedlist>
   <para>
    检查时间服务器设置：
   </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config /time_server ls
o- time_server ................................................ [enabled]
  o- external_servers ............................................... [1]
  | o- pool.ntp.org ............................................... [...]
  o- servers ........................................................ [1]
  | o- ses-master.example.com ..................................... [...]
  o- subnet .............................................. [10.20.6.0/24]
</screen>
   <para>
    有关设置时间同步的详细信息，请参见 <link xlink:href="https://documentation.suse.com/sles/15-SP3/html/SLES-all/cha-ntp.html#sec-ntp-yast"/>。
   </para>
  </sect2>

  <sect2 xml:id="deploy-cephadm-configure-dashboardlogin">
   <title>配置 Ceph Dashboard 登录身份凭证</title>
   <para>
    部署完基本集群后便可使用 Ceph Dashboard。要访问 Ceph Dashboard，您需要设置有效的用户名和密码，例如：
   </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/dashboard/username set admin
<prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/dashboard/password set <replaceable>PWD</replaceable>
</screen>
   <tip>
    <title>强制密码更新</title>
    <para>
     默认情况下，系统将强制第一位仪表盘用户在首次登录仪表盘时更改其密码。要禁用此功能，请运行以下命令：
    </para>
<screen><prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/dashboard/force_password_update disable</screen>
   </tip>
  </sect2>

  <sect2 xml:id="deploy-cephadm-configure-registry">
   <title>使用容器注册表</title>
   <para>
    Ceph 集群需要能够访问容器注册表，以便能下载和部署容器化 Ceph 服务。可以使用以下两种方式来访问注册表：
   </para>
   <itemizedlist>
    <listitem>
     <para>
      如果您的集群可以（直接或通过代理）访问 <literal>registry.suse.com</literal> 上的默认注册表，您可以将 <systemitem class="resource">ceph-salt</systemitem> 直接指向此 URL，而无需创建本地注册表。继续执行<xref linkend="deploy-cephadm-configure-imagepath"/>中的步骤。
     </para>
    </listitem>
    <listitem>
     <para>
      如果集群无法访问默认注册表（例如，若为实体隔离部署），您需要配置本地容器注册表。创建并配置本地注册表后，需要将 <systemitem class="resource">ceph-salt</systemitem> 指向它。
     </para>
    </listitem>
   </itemizedlist>
   <sect3 xml:id="updating-ceph-local-registry">
    <title>创建并配置本地注册表（可选）</title>
    <important>
     <para>
      创建本地注册表的方法非常多。本节中的说明是有关创建安全和不安全注册表的示例。有关运行容器映像注册表的一般信息，请参见 <link xlink:href="https://documentation.suse.com/sles/15-SP3/single-html/SLES-container/#sec-docker-registry-installation"/>。
     </para>
    </important>
    <tip>
     <title>归置和端口的使用</title>
     <para>
      在集群中的所有节点都可访问的计算机上部署注册表。建议在管理节点上部署。注册表默认会侦听端口 5000。
     </para>
     <para>
      在注册表节点上，使用以下命令确保端口未被占用：
     </para>
<screen>ss -tulpn | grep :5000</screen>
     <para>
      如果其他进程（例如 <literal>iscsi-tcmu</literal>）已在侦听端口 5000，则确定可用于映射到注册表容器中的端口 5000 的另一个未被占用的端口。
     </para>
    </tip>
    <procedure>
     <title>创建本地注册表</title>
     <step>
      <para>
       确认 <package>Containers Module</package> 扩展已启用。
      </para>
<screen>
<prompt>&gt; </prompt>SUSEConnect --list-extensions | grep -A2 "Containers Module"
Containers Module 15 SP3 x86_64 (Activated)
</screen>
     </step>
     <step>
      <para>
       确认已安装以下软件包：<package>apache2-utils</package>（如果启用了安全注册表）、<package>cni</package>、<package>cni-plugins</package>、<package>podman</package>、<package>podman-cni-config</package> 和 <package>skopeo</package>。
      </para>
     </step>
     <step>
      <para>
       收集以下信息：
      </para>
      <itemizedlist>
       <listitem>
        <para>
         注册表主机的完全限定域名 (<option>REG_HOST_FQDN</option>)。
        </para>
       </listitem>
       <listitem>
        <para>
         用于映射到注册表容器端口 5000 的可用端口号 (<option>REG_HOST_PORT</option>)。
        </para>
       </listitem>
       <listitem>
        <para>
         注册表是否安全 (<option>insecure=[true|false]</option>)。
        </para>
       </listitem>
      </itemizedlist>
     </step>
     <step>
      <para>
       要启动不安全的注册表（未经过 SSL 加密），请执行以下步骤：
      </para>
      <substeps>
       <step>
        <para>
         为不安全的注册表配置 <systemitem class="resource">ceph-salt</systemitem>：
        </para>
<screen>
<prompt>cephuser@adm &gt; </prompt>ceph-salt config containers/registries_conf enable
<prompt>cephuser@adm &gt; </prompt>ceph-salt config containers/registries_conf/registries \
 add prefix=<option>REG_HOST_FQDN</option> insecure=true \
 location=<option>REG_HOST_PORT</option>:5000
</screen>
       </step>
       <step>
        <para>
         启动不安全的注册表，具体做法为创建必要的目录（例如 <filename>/var/lib/registry</filename>）并使用 <command>podman</command> 命令启动注册表：
        </para>
<screen>
<prompt role="root"># </prompt>mkdir -p /var/lib/registry
<prompt role="root"># </prompt>podman run --privileged -d --name registry \
 -p <option>REG_HOST_PORT</option>:5000 -v /var/lib/registry:/var/lib/registry \
 --restart=always registry:2
</screen>
       </step>
       <step>
        <para>
         要使注册表在系统重引导后启动，请为其创建并启用 <systemitem class="daemon">systemd</systemitem> 单元文件：
        </para>
<screen>
<prompt>&gt; </prompt><command>sudo</command> podman generate systemd --files --name registry
<prompt>&gt; </prompt><command>sudo</command> mv container-registry.service /etc/systemd/system/
<prompt>&gt; </prompt><command>sudo</command> systemctl enable container-registry.service
</screen>
       </step>
      </substeps>
     </step>
     <step>
      <para>
       要启动安全注册表，请执行以下步骤：
      </para>
      <substeps>
       <step>
        <para>
         创建必要目录：
        </para>
<screen><prompt role="root"># </prompt>mkdir -p /var/lib/registry/{auth,certs}</screen>
       </step>
       <step>
        <para>
         生成 SSL 证书：
        </para>
<screen>
<prompt role="root"># </prompt>openssl req -newkey rsa:4096 -nodes -sha256 \
 -keyout /var/lib/registry/certs/domain.key -x509 -days 365 \
 -out /var/lib/registry/certs/domain.crt
</screen>
        <note>
         <para>
          将 <literal>Cn=[value]</literal> 的值设置为主机的完全限定域名 ([<option>REG_HOST_FQDN</option>])。
         </para>
        </note>
       </step>
       <step>
        <para>
         将该证书复制到集群的所有节点上并刷新证书缓存：
        </para>
<screen>
<prompt role="root"># </prompt>salt-cp '*' /var/lib/registry/certs/domain.crt \
 /etc/pki/trust/anchors/
<prompt role="root"># </prompt>salt '*' cmd.shell "update-ca-certificates"
</screen>
       </step>
       <step>
        <para>
         生成用于向注册表进行身份验证的用户名和密码组合：
        </para>
<screen>
<prompt role="root"># </prompt>htpasswd2 -bBc /var/lib/registry/auth/htpasswd \
 <option>REG_USERNAME</option> <option>REG_PASSWORD</option>
</screen>
       </step>
       <step>
        <para>
         启动安全注册表。请使用 <option>REGISTRY_STORAGE_DELETE_ENABLED=true</option> 标志，以便之后能使用 <command>skopeo delete</command> 命令删除映像。
        </para>
<screen>
podman run --name myregistry -p <option>REG_HOST_PORT</option>:5000 \
 -v /var/lib/registry:/var/lib/registry \
 -v /var/lib/registry/auth:/auth:z \
 -e "REGISTRY_AUTH=htpasswd" \
 -e "REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm" \
 -e REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd \
 -v /var/lib/registry/certs:/certs:z \
 -e "REGISTRY_HTTP_TLS_CERTIFICATE=/certs/domain.crt" \
 -e "REGISTRY_HTTP_TLS_KEY=/certs/domain.key" \
 -e REGISTRY_STORAGE_DELETE_ENABLED=true \
 -e REGISTRY_COMPATIBILITY_SCHEMA1_ENABLED=true -d registry:2
</screen>
       </step>
       <step>
        <para>
         测试对注册表的安全访问：
        </para>
<screen>
<prompt>&gt; </prompt>curl https://<option>REG_HOST_FQDN</option>:<option>REG_HOST_PORT</option>/v2/_catalog \
 -u <option>REG_USERNAME</option>:<option>REG_PASSWORD</option>
</screen>
       </step>
      </substeps>
     </step>
     <step>
      <para>
       创建本地注册表后，需要将 <literal>registry.suse.com</literal> 上官方 SUSE 注册表中的容器映像同步到本地注册表。可以使用 <package>skopeo</package> 软件包中的 <command>skopeo sync</command> 命令来实现此目的。有关详细信息，请参见手册页 (<command>man 1 skopeo-sync</command>)。考虑下列示例：
      </para>
      <example>
       <title>查看清单文件</title>
<screen>
skopeo inspect docker://registry.suse.com/ses/7.1/ceph/ceph | jq .RepoTags
skopeo inspect docker://registry.suse.com/ses/7.1/ceph/grafana | jq .RepoTags
skopeo inspect docker://registry.suse.com/ses/7.1/ceph/prometheus-server:2.32.1 | jq .RepoTags
skopeo inspect docker://registry.suse.com/ses/7.1/ceph/prometheus-node-exporter:1.1.2 | jq .RepoTags
skopeo inspect docker://registry.suse.com/ses/7.1/ceph/prometheus-alertmanager:0.21.0 | jq .RepoTags
</screen>
      </example>
      <example>
       <title>同步到目录</title>
       <para>
        同步所有 Ceph 映像：
       </para>
<screen>skopeo sync --src docker --dest dir registry.suse.com/ses/7.1/ceph/ceph /root/images/</screen>
       <para>
        仅同步最新的映像：
       </para>
<screen>skopeo sync --src docker --dest dir registry.suse.com/ses/7.1/ceph/ceph:latest /root/images/</screen>
      </example>
      <example>
       <title>同步 Grafana 映像：</title>
<screen>skopeo sync --src docker --dest dir registry.suse.com/ses/7.1/ceph/grafana /root/images/</screen>
       <para>
        仅同步最新的 Grafana 映像：
       </para>
<screen>skopeo sync --src docker --dest dir registry.suse.com/ses/7.1/ceph/grafana:latest /root/images/</screen>
      </example>
      <example>
       <title>同步最新的 Prometheus 映像</title>
<screen>
skopeo sync --src docker --dest dir registry.suse.com/ses/7.1/ceph/prometheus-server:2.32.1 /root/images/
skopeo sync --src docker --dest dir registry.suse.com/ses/7.1/ceph/prometheus-node-exporter:1.1.2 /root/images/
skopeo sync --src docker --dest dir registry.suse.com/ses/7.1/ceph/prometheus-alertmanager:0.21.0 /root/images/
</screen>
      </example>
     </step>
    </procedure>
    <procedure>
     <title>配置本地注册表和访问身份凭证</title>
     <step>
      <para>
       配置本地注册表的 URL：
      </para>
<screen><prompt>cephuser@adm &gt; </prompt>ceph-salt config /containers/registry_auth/registry set <replaceable>REG_HOST_URL</replaceable></screen>
     </step>
     <step>
      <para>
       配置用户名和密码以访问本地注册表：
      </para>
<screen><prompt>cephuser@adm &gt; </prompt>ceph-salt config /containers/registry_auth/username set <replaceable>REG_USERNAME</replaceable></screen>
<screen><prompt>cephuser@adm &gt; </prompt>ceph-salt config /containers/registry_auth/password set <replaceable>REG_PASSWORD</replaceable></screen>
     </step>
    </procedure>
    <tip>
     <title>注册表缓存</title>
     <para>
      要避免在出现新的更新容器时重新同步本地注册表，您可以配置<emphasis>注册表缓存</emphasis>。
     </para>
    </tip>
   </sect3>
   <sect3 xml:id="deploy-cephadm-configure-imagepath">
    <title>配置容器映像的路径</title>
    <important>
     <para>
      本节帮助您配置引导集群（部署的第一个 Ceph Monitor 和 Ceph Manager 对）的容器映像的路径。该路径不适用于附加服务（如监控堆栈）的容器映像。
     </para>
    </important>
    <tip>
     <title>配置 HTTPS 代理</title>
     <para>
      如果您需要使用代理来与容器注册表服务器通讯，请在所有集群节点上执行以下配置步骤：
     </para>
     <procedure>
      <step>
       <para>
        复制容器的配置文件：
       </para>
<screen><prompt>&gt; </prompt><command>sudo</command> cp /usr/share/containers/containers.conf /etc/containers/containers.conf</screen>
      </step>
      <step>
       <para>
        编辑新复制的文件，在文件的 <literal>[engine]</literal> 部分添加 <option>http_proxy</option> 设置，例如：
       </para>
<screen><prompt>&gt; </prompt>cat /etc/containers/containers.conf
 [engine]
 http_proxy=proxy.example.com
 [...]
 </screen>
      </step>
     </procedure>
    </tip>
    <para>
     cephadm 需要知道容器映像的有效 URI 路径。执行以下命令校验默认设置
    </para>
<screen><prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/ceph_image_path ls</screen>
    <para>
     如果您不需要备用或本地注册表，请指定默认的 SUSE 容器注册表：
    </para>
<screen><prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/ceph_image_path set registry.suse.com/ses/7.1/ceph/ceph</screen>
    <para>
     如果您的部署需要特定路径（例如本地注册表的路径），请按如下所示进行配置：
    </para>
<screen><prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/ceph_image_path set <replaceable>LOCAL_REGISTRY_PATH</replaceable></screen>
   </sect3>
  </sect2>

  <sect2 xml:id="deploy-cephadm-inflight-encryption">
   <title>启用数据传输中加密 (msgr2)</title>
   <para>
    Messenger v2 协议 (MSGR2) 是 Ceph 的线上传输协议。它提供了一种可对正在通过网络传输的所有数据进行加密的安全模式，封装了身份验证有效负载，并支持未来集成新的身份验证模式（例如 Kerberos）。
   </para>
   <important>
    <para>
     Linux 内核 Ceph 客户端（例如 CephFS 和 RADOS 块设备）当前不支持 msgr2。
    </para>
   </important>
   <para>
    Ceph 守护进程可以绑定到多个端口，以便让旧 Ceph 客户端和支持 v2 的新客户端能够连接到同一集群。默认情况下，针对新的 v2 协议，MON 现在会绑定到 IANA 指定的新端口 3300（CE4h 或 0xCE4），而针对旧版 v1 协议，则会绑定到旧的默认端口 6789。
   </para>
   <para>
    v2 协议 (MSGR2) 支持以下两种连接模式：
   </para>
   <variablelist>
    <varlistentry>
     <term>crc 模式</term>
     <listitem>
      <para>
       建立连接时进行强初始身份验证和 CRC32C 完整性检查。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>secure 模式</term>
     <listitem>
      <para>
       建立连接时进行强初始身份验证，并对所有身份验证后流量进行完全加密，包括加密完整性检查。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    对于大多数连接，有一些选项可以控制使用哪种模式：
   </para>
   <variablelist>
    <varlistentry>
     <term>ms_cluster_mode</term>
     <listitem>
      <para>
       用于 Ceph 守护进程之间的集群内通讯的连接模式（或允许的模式）。如果列出了多种模式，则首选最先列出的模式。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ms_service_mode</term>
     <listitem>
      <para>
       连接到集群时允许客户端使用的模式列表。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ms_client_mode</term>
     <listitem>
      <para>
       与 Ceph 集群通讯时，供客户端使用（或允许）的连接模式列表，按首选项排序。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    有一组专用于 Monitor 的并行选项集，允许管理员设置与 Monitor 通讯的不同（通常更安全）要求。
   </para>
   <variablelist>
    <varlistentry>
     <term>ms_mon_cluster_mode</term>
     <listitem>
      <para>
       在 Monitor 之间使用的连接模式（或允许的模式）。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ms_mon_service_mode</term>
     <listitem>
      <para>
       连接到 Monitor 时，供客户端或其他 Ceph 守护进程使用的允许模式列表。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ms_mon_client_mode</term>
     <listitem>
      <para>
       连接到 Monitor 时，供客户端或非 Monitor 守护进程使用的连接模式的列表，按首选项排序。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    要在部署期间启用 MSGR2 加密模式，您需要在运行 <systemitem class="resource">ceph-salt</systemitem> apply<command> 之前向 </command>ceph-salt 配置添加一些配置选项。
   </para>
   <para>
    要使用 <literal>secure</literal> 模式，请运行以下命令。
   </para>
   <para>
    向 <filename> 配置工具中的 </filename>ceph_conf<systemitem class="resource">ceph-salt</systemitem> 添加全局部分。
   </para>
<screen><prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/ceph_conf add global</screen>
   <para>
    设置以下选项：
   </para>
<screen><prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/ceph_conf/global set ms_cluster_mode "secure crc"
<prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/ceph_conf/global set ms_service_mode "secure crc"
<prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/ceph_conf/global set ms_client_mode "secure crc"
</screen>
   <note>
    <para>
     确保 <literal>secure</literal> 先于 <literal>crc</literal>。
    </para>
   </note>
   <para>
    要<emphasis>强制使用</emphasis> <literal>secure</literal> 模式，请运行以下命令：
   </para>
<screen><prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/ceph_conf/global set ms_cluster_mode secure
<prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/ceph_conf/global set ms_service_mode secure
<prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/ceph_conf/global set ms_client_mode secure
</screen>
   <tip xml:id="update-inflight-encryption-settings">
    <title>更新设置</title>
    <para>
     如果您要更改上述任何设置，请在 Monitor 配置存储中设置配置更改。此操作使用 <command>ceph config set</command> 命令实现。
    </para>
<screen><prompt>root@master # </prompt>ceph config set global <replaceable>CONNECTION_OPTION</replaceable> <replaceable>CONNECTION_MODE</replaceable> [--force]</screen>
    <para>
     例如：
    </para>
<screen><prompt>root@master # </prompt>ceph config set global ms_cluster_mode "secure crc"</screen>
    <para>
     如果要检查当前值（包括默认值），请运行以下命令：
    </para>
<screen><prompt>root@master # </prompt>ceph config get <replaceable>CEPH_COMPONENT</replaceable> <replaceable>CONNECTION_OPTION</replaceable></screen>
    <para>
     例如，要获取 OSD 的 <literal>ms_cluster_mode</literal>，请运行：
    </para>
<screen><prompt>root@master # </prompt>ceph config get osd ms_cluster_mode</screen>
   </tip>
  </sect2>

  <sect2 xml:id="deploy-cephadm-enable-network">
   <title>配置集群网络</title>
   <para>
    （可选）如果运行的是独立的集群网络，则可能需要设置集群网络 IP 地址并后跟斜线符号及子网掩码部分，例如 <literal>192.168.10.22/24</literal>。
   </para>
   <para>
    运行以下命令可启用 <literal>cluster_network</literal>：
   </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/ceph_conf add global
<prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/ceph_conf/global set cluster_network <replaceable>NETWORK_ADDR</replaceable>
</screen>
  </sect2>

  <sect2 xml:id="deploy-cephadm-configure-verify">
   <title>确认集群配置</title>
   <para>
    最低集群配置已完成。请检查是否存在明显错误：
   </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config ls
o- / ............................................................... [...]
  o- ceph_cluster .................................................. [...]
  | o- minions .............................................. [Minions: 5]
  | | o- ses-master.example.com .................................. [admin]
  | | o- ses-min1.example.com ......................... [bootstrap, admin]
  | | o- ses-min2.example.com ................................. [no roles]
  | | o- ses-min3.example.com ................................. [no roles]
  | | o- ses-min4.example.com ................................. [no roles]
  | o- roles ....................................................... [...]
  |   o- admin .............................................. [Minions: 2]
  |   | o- ses-master.example.com ....................... [no other roles]
  |   | o- ses-min1.example.com ................. [other roles: bootstrap]
  |   o- bootstrap ................................ [ses-min1.example.com]
  |   o- cephadm ............................................ [Minions: 5]
  |   o- tuned ..................................................... [...]
  |     o- latency .......................................... [no minions]
  |     o- throughput ....................................... [no minions]
  o- cephadm_bootstrap ............................................. [...]
  | o- advanced .................................................... [...]
  | o- ceph_conf ................................................... [...]
  | o- ceph_image_path .............. [registry.suse.com/ses/7.1/ceph/ceph]
  | o- dashboard ................................................... [...]
  |   o- force_password_update ................................. [enabled]
  |   o- password ................................... [randomly generated]
  |   o- username ................................................ [admin]
  | o- mon_ip ............................................ [192.168.10.20]
  o- containers .................................................... [...]
  | o- registries_conf ......................................... [enabled]
  | | o- registries .............................................. [empty]
  | o- registry_auth ............................................... [...]
  |   o- password .............................................. [not set]
  |   o- registry .............................................. [not set]
  |   o- username .............................................. [not set]
  o- ssh .................................................. [Key Pair set]
  | o- private_key ..... [53:b1:eb:65:d2:3a:ff:51:6c:e2:1b:ca:84:8e:0e:83]
  | o- public_key ...... [53:b1:eb:65:d2:3a:ff:51:6c:e2:1b:ca:84:8e:0e:83]
  o- time_server ............................................... [enabled]
    o- external_servers .............................................. [1]
    | o- 0.pt.pool.ntp.org ......................................... [...]
    o- servers ....................................................... [1]
    | o- ses-master.example.com .................................... [...]
    o- subnet ............................................. [10.20.6.0/24]
</screen>
   <tip>
    <title>集群配置的状态</title>
    <para>
     您可以通过运行以下命令检查集群的配置是否有效：
    </para>
<screen>
<prompt>root@master # </prompt>ceph-salt status
cluster: 5 minions, 0 hosts managed by cephadm
config: OK
</screen>
   </tip>
  </sect2>

  <sect2 xml:id="deploy-cephadm-configure-export">
   <title>导出集群配置</title>
   <para>
    在配置了基本集群并且其配置有效之后，最好将其配置导出到文件中：
   </para>
<screen><prompt>root@master # </prompt>ceph-salt export &gt; cluster.json</screen>
   <warning>
    <para>
     <command>ceph-salt export</command> 的输出中包含 SSH 私用密钥。如果您担心安全问题，请不要在未采取适当预防措施的情况下执行此命令。
    </para>
   </warning>
   <para>
    如果集群配置损坏并需要恢复到备份状态，请运行：
   </para>
<screen><prompt>root@master # </prompt>ceph-salt import cluster.json</screen>
  </sect2>
 </sect1>
 <sect1 xml:id="deploy-cephadm-deploy">
  <title>更新节点并引导最小集群</title>

  <para>
   部署集群之前，请更新所有节点上的所有软件包：
  </para>

<screen><prompt>root@master # </prompt>ceph-salt update</screen>

  <para>
   如果节点在更新期间报告 <literal>Reboot is needed</literal>，则表示重要的操作系统软件包（例如内核）已更新到更新版本，您需要重引导节点才能应用更改。
  </para>

  <para>
   要重引导所有需要重引导的节点，请追加 <option>--reboot</option> 选项
  </para>

<screen><prompt>root@master # </prompt>ceph-salt update --reboot</screen>

  <para>
   或者在单独的步骤中重引导这些节点：
  </para>

<screen><prompt>root@master # </prompt>ceph-salt reboot</screen>

  <important>
   <para>
    永远不会通过 <command>ceph-salt update --reboot</command> 或 <command>ceph-salt reboot</command> 命令重引导 Salt 主控端。如果 Salt 主控端需要重引导，您需要手动进行重引导。
   </para>
  </important>

  <para>
   更新节点后，请引导最小集群：
  </para>

<screen><prompt>root@master # </prompt>ceph-salt apply</screen>

  <note>
   <para>
    引导完成后，集群将拥有一个 Ceph Monitor 和一个 Ceph Manager。
   </para>
  </note>

  <para>
   以上命令将打开一个交互式用户界面，其中会显示每个受控端的当前进度。
  </para>

  <figure>
   <title>部署最小集群</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="cephadm_deploy.png" width="75%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="cephadm_deploy.png" width="75%"/>
    </imageobject>
   </mediaobject>
  </figure>

  <tip>
   <title>非交互模式</title>
   <para>
    如果您需要从脚本应用配置，还有一种非交互的部署模式。此模式在从远程计算机部署集群时也很有用，因为通过网络不断更新屏幕上的进度信息可能会对用户造成干扰：
   </para>
<screen><prompt>root@master # </prompt>ceph-salt apply --non-interactive</screen>
  </tip>
 </sect1>
 <sect1 xml:id="deploy-min-cluster-final-steps">
  <title>查看最后的步骤</title>

  <para>
   在 <command>ceph-salt apply</command> 命令完成后，您便应该会有一个 Ceph Monitor 和一个 Ceph Manager。您应该能够在任何以 <literal>root</literal> 身份或使用 <literal>sudo</literal> 的 <literal>cephadm</literal> 用户身份被授予 <literal>admin</literal> 角色的受控端上成功运行 <command>ceph status</command> 命令。
  </para>

  <para>
   后续步骤包括使用 cephadm 部署额外的 Ceph Monitor、Ceph Manager、OSD、监控堆栈和网关。
  </para>

  <para>
   继续之前，请查看新集群的网络设置。此时，已根据在 <literal>ceph-salt</literal> 配置中针对 <literal>/cephadm_bootstrap/mon_ip</literal> 输入的值填充了 <literal>public_network</literal> 设置。不过，此设置仅适用于 Ceph Monitor。您可以使用以下命令查看此设置：
  </para>

<screen><prompt>root@master # </prompt>ceph config get mon public_network</screen>

  <para>
   这是 Ceph 正常工作所需的最低配置，但还是建议您将此 <literal>public_network</literal> 设为 <literal>global</literal>，这意味着它将应用于所有类型的 Ceph 守护进程，而不仅仅应用于 MON：
  </para>

<screen><prompt>root@master # </prompt>ceph config set global public_network "$(ceph config get mon public_network)"</screen>

  <note>
   <para>
    此步骤不是必需的。但如果不使用此设置，Ceph OSD 和其他守护进程（Ceph Monitor 除外）将侦听<emphasis>所有地址</emphasis>。
   </para>
   <para>
    如果您希望在各 OSD 之间使用完全独立的网络进行通讯，请运行以下命令：
   </para>
<screen><prompt>root@master # </prompt>ceph config set global cluster_network "<replaceable>cluster_network_in_cidr_notation</replaceable>"</screen>
   <para>
    执行此命令将确保您部署中所创建的 OSD 从一开始就使用预期的集群网络。
   </para>
  </note>

  <para>
   如果您的集群设置为具有密集节点（每个主机有超过 62 个 OSD），请确保为 Ceph OSD 指定足够的端口。默认范围 (6800-7300) 当前允许每个主机有不超过 62 个 OSD。对于具有密集节点的集群，请将设置 <literal>ms_bind_port_max</literal> 调整到适当的值。每个 OSD 将使用 8 个额外的端口。例如，如果一台主机设置为运行 96 个 OSD，则需要 768 个端口。通过运行以下命令，应将 <literal>ms_bind_port_max</literal> 至少设置为 7568：
  </para>

<screen><prompt>root@master # </prompt>ceph config set osd.* ms_bind_port_max 7568</screen>

  <para>
   您需要相应地调整防火墙设置才能使其正常工作。有关更多信息，请参见<xref linkend="storage-bp-net-firewall"/>。
  </para>
 </sect1>
 <sect1 xml:id="deploy-min-cluster-disable-insecure">
  <title>禁用不安全的客户端</title>

  <para>
   从 Pacific v15.2.11 起，引入了新的健康状况警告来告知您允许了不安全的客户端加入集群。此警告默认会<emphasis>打开</emphasis>。Ceph Dashboard 会表明集群处于 <literal>HEALTH_WARN</literal> 状态，在命令行上校验集群状态会告知您如下信息：
  </para>

<screen>
<prompt>cephuser@adm &gt; </prompt>ceph status
cluster:
  id:     3fe8b35a-689f-4970-819d-0e6b11f6707c
  health: HEALTH_WARN
  mons are allowing insecure global_id reclaim
[...]
</screen>

  <para>
   此警告表示 Ceph Monitor 仍在允许未增补的旧版客户端连接集群。这样可确保在升级集群时，现有客户端仍可连接集群，但会警告您存在需要解决的问题。当集群和所有客户端都升级到最新版本的 Ceph 后，运行以下命令禁用未增补的客户端：
  </para>

<screen><prompt>cephuser@adm &gt; </prompt>ceph config set mon auth_allow_insecure_global_id_reclaim false</screen>
 </sect1>
</chapter>
