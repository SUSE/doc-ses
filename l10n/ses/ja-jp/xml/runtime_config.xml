<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="runtime_config.xml" version="5.0" xml:id="cha-ceph-configuration">
 <title>Cephクラスタの設定</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:translation>yes</dm:translation>
   <dm:release>SES 7</dm:release>
  </dm:docmanager>
 </info>
 <para>
  この章では、設定オプションを使用してCephクラスタを設定する方法を説明します。
 </para>
 <sect1 xml:id="cha-ceph-configuration-ceph-conf">
  <title><filename>ceph.conf</filename>ファイルの設定</title>

  <para>
   cephadmは基本的な<filename>ceph.conf</filename>ファイルを使用します。このファイルにはMONに接続し、設定情報を認証して取得するための最小限のオプションセットだけが含まれます。ほとんどの場合、使用するのは<option>mon_host</option>オプションだけに限られます(しかしながら、DNSのSRVレコードを使用することで、このオプションも不要となります)。
  </para>

  <important>
   <para>
    もはや<filename>ceph.conf</filename>ファイルはクラスタ設定を保存する中心的役割を担うことはなくなっており、主に設定データベースが使用されます(<xref linkend="cha-ceph-configuration-db"/>を参照してください)。
   </para>
   <para>
    従来通り、<filename>ceph.conf</filename>ファイルを使用してクラスタ設定を変更する必要がある場合(たとえば、設定データベースからのオプションの読み取りをサポートしていないクライアントを使用する場合)、次のコマンドを実行し、クラスタ全体で<filename>ceph.conf</filename>ファイルの保守と配布を行う必要があります。
   </para>
<screen><prompt>cephuser@adm &gt; </prompt>ceph config set mgr mgr/cephadm/manage_etc_ceph_ceph_conf false</screen>
  </important>

  <sect2 xml:id="cha-ceph-configuration-ceph-conf-containers">
   <title>コンテナイメージ内の<filename>ceph.conf</filename>へのアクセス</title>
   <para>
    Cephデーモンはコンテナ内で実行されますが、従来通り<filename>ceph.conf</filename>設定ファイルにアクセスすることができます。設定ファイルはホストシステム上で次のファイルとして「バインドマウント」<emphasis></emphasis>されています。
   </para>
<screen>/var/lib/ceph/<replaceable>CLUSTER_FSID</replaceable>/<replaceable>DAEMON_NAME</replaceable>/config</screen>
   <para>
    <replaceable>CLUSTER_FSID</replaceable>は、<command>ceph fsid</command>コマンドで取得できる、実行中のクラスタの固有FSIDで置き換えます。<replaceable>DAEMON_NAME</replaceable>は<command>ceph orch ps</command>コマンドにより一覧にされる固有のデーモン名で置き換えます。以下に例を示します。
   </para>
<screen>/var/lib/ceph/b4b30c6e-9681-11ea-ac39-525400d7702d/osd.2/config</screen>
   <para>
    デーモンの設定を変更するには、デーモンの<filename>config</filename>ファイルを編集し、再起動します。
   </para>
<screen><prompt role="root"># </prompt>systemctl restart ceph-<replaceable>CLUSTER_FSID</replaceable>-<replaceable>DAEMON_NAME</replaceable></screen>
   <para>
    以下に例を示します。
   </para>
<screen><prompt role="root"># </prompt>systemctl restart ceph-b4b30c6e-9681-11ea-ac39-525400d7702d-osd.2</screen>
   <important>
    <para>
     cephadmがデーモンを再展開すると、すべてのカスタム設定は失われます。
    </para>
   </important>
  </sect2>
 </sect1>
 <sect1 xml:id="cha-ceph-configuration-db">
  <title>設定データベース</title>

  <para>
   Ceph Monitorは、クラスタ全体の動作に影響する設定オプションの中央データベースを管理します。
  </para>

  <sect2 xml:id="cha-ceph-configuration-db-sections">
   <title>セクションとマスクの設定</title>
   <para>
    MONに保存された設定オプションは「グローバル」<emphasis></emphasis>セクション、「デーモンタイプ」<emphasis></emphasis>セクション、または、「特定のデーモン」<emphasis></emphasis>セクションに記録できます。また、オプションは関連する「マスク」<emphasis></emphasis>を持つ場合もあり、オプションの適用対象となるデーモンやクライアントを細かく制限できます。マスクには2つの形式があります。
   </para>
   <itemizedlist>
    <listitem>
     <para>
      <replaceable>TYPE</replaceable>:<replaceable>LOCATION</replaceable> この場合<replaceable>TYPE</replaceable>は<literal>rack</literal>や<literal>host</literal>などのCRUSHプロパティで、<replaceable>LOCATION</replaceable>はそのプロパティの値です。
     </para>
     <para>
      たとえば、<literal>host:example_host</literal>は特定のホストで実行されるデーモンまたはクライアントだけにオプションを制限します。
     </para>
    </listitem>
    <listitem>
     <para>
      <replaceable>CLASS</replaceable>:<replaceable>DEVICE_CLASS</replaceable>の場合。<replaceable>DEVICE_CLASS</replaceable>は<literal>hdd</literal>や<literal>ssd</literal>などのCRUSHデバイスクラスの名前です。たとえば、<literal>class:ssd</literal>はSSDにより支援されるOSDだけにオプションを制限します。このマスクはOSDでないデーモンやクライアントには影響しません。
     </para>
    </listitem>
   </itemizedlist>
  </sect2>

  <sect2 xml:id="cha-ceph-configuration-db-commands">
   <title>設定オプションの設定と読み取り</title>
   <para>
    クラスタの設定オプションの設定または読み取りを行うには、次のコマンドを使用してください。<replaceable>WHO</replaceable>パラメータは、セクション名、マスク、またはその両方をスラッシュ(/)記号で区切って組み合わせたものを使用できます。たとえば、<literal>osd/rack:foo</literal>は<literal>foo</literal>という名前のラックに含まれるすべてのOSDデーモンを表します。
   </para>
   <variablelist>
    <varlistentry>
     <term><command>ceph config dump</command></term>
     <listitem>
      <para>
       クラスタ全体を対象とする設定データベース全体をダンプします。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><command>ceph config get <replaceable>WHO</replaceable></command></term>
     <listitem>
      <para>
       設定データベースに保存されている、特定のデーモンまたはクライアント(たとえば、<literal>mds.a</literal>)の設定をダンプします。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><command>ceph config set <replaceable>WHO</replaceable> <replaceable>OPTION</replaceable> <replaceable>VALUE</replaceable></command></term>
     <listitem>
      <para>
       設定データベースの設定オプションに指定した値を設定します。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><command>ceph config show <replaceable>WHO</replaceable></command></term>
     <listitem>
      <para>
       報告された実行中のデーモンに関する現在の設定を表示します。ローカルの設定ファイルが同時に使用されている場合や、オプションがランタイム中にオーバーライドされていたり、コマンドラインでオーバーライドされている場合、これらの設定はMonitorが保存した値と異なることもあります。オプション値のソースは出力の一部として報告されます。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><command>ceph config assimilate-conf -i <replaceable>INPUT_FILE</replaceable> -o <replaceable>OUTPUT_FILE</replaceable></command></term>
     <listitem>
      <para>
       <replaceable>INPUT_FILE</replaceable>で指定した設定ファイルをインポートし、すべての有効なオプションを設定データベースに保存します。認識されないか、無効であるか、Monitorが制御できない設定は、<replaceable>OUTPUT_FILE</replaceable>いう名前で保存される、簡略化された設定ファイルに返されます。このコマンドは、旧来の設定ファイルから、中央化されたMonitorベースの設定に移行する際に便利です。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="cha-ceph-configuration-db-runtime">
   <title>ランタイム中のデーモンの設定</title>
   <para>
    ほとんどの場合、Cephによりランタイム中のデーモンの設定を変更できます。これは、ログ出力の量を増減する必要がある場合や、ランタイム中にクラスタの最適化を行う場合に有用です。
   </para>
   <para>
    次のコマンドを使用して、設定オプションの値を更新できます。
   </para>
<screen><prompt>cephuser@adm &gt; </prompt>ceph config set <replaceable>DAEMON</replaceable> <replaceable>OPTION</replaceable> <replaceable>VALUE</replaceable></screen>
   <para>
    たとえば、特定のOSDでデバッグログのレベルを調整するには、次のコマンドを実行します。
   </para>
<screen><prompt>cephuser@adm &gt; </prompt>ceph config set osd.123 debug_ms 20</screen>
   <note>
    <para>
     同じオプションがローカルの設定ファイルでもカスタマイズされている場合、Monitorの設定は無視されます。これは、設定ファイルよりも優先度が低いためです。
    </para>
   </note>
   <sect3 xml:id="cha-ceph-configuration-db-runtime-override">
    <title>値のオーバーライド</title>
    <para>
     <command>tell</command>または<command>daemon</command>サブコマンドを使用して、オプションの値を一時的に変更することができます。この変更は実行中のプロセスだけに影響し、デーモンやプロセスが再起動すると破棄されます。
    </para>
    <para>
     値をオーバーライドする方法は2つあります。
    </para>
    <itemizedlist>
     <listitem>
      <para>
       <command>tell</command>サブコマンドを使用して、いずれかのクラスタノードから特定のデーモンにメッセージを送る方法。
      </para>
<screen><prompt>cephuser@adm &gt; </prompt>ceph tell <replaceable>DAEMON</replaceable> config set <replaceable>OPTION</replaceable> <replaceable>VALUE</replaceable></screen>
      <para>
       以下に例を示します。
      </para>
<screen><prompt>cephuser@adm &gt; </prompt>ceph tell osd.123 config set debug_osd 20</screen>
      <tip>
       <para>
        <command>tell</command>サブコマンドはデーモンの識別にワイルドカードを使用できます。たとえば、すべてのOSDデーモンでデバッグレベルを調整するには、次のコマンドを実行します。
       </para>
<screen><prompt>cephuser@adm &gt; </prompt>ceph tell osd.* config set debug_osd 20</screen>
      </tip>
     </listitem>
     <listitem>
      <para>
       <command>daemon</command>サブコマンドを使用して、デーモンのプロセスを実行中のノードから<filename>/var/run/ceph</filename>のソケットを介して特定のデーモンのプロセスに接続する方法。
      </para>
<screen><prompt>cephuser@adm &gt; </prompt>cephadm enter --name osd.<replaceable>ID</replaceable> -- ceph daemon <replaceable>DAEMON</replaceable> config set <replaceable>OPTION</replaceable> <replaceable>VALUE</replaceable></screen>
      <para>
       以下に例を示します。
      </para>
<screen><prompt>cephuser@adm &gt; </prompt>cephadm enter --name osd.4 -- ceph daemon osd.4 config set debug_osd 20</screen>
     </listitem>
    </itemizedlist>
    <tip>
     <para>
      <command>ceph config show</command>コマンドを使用してランタイム中の設定を表示すると(<xref linkend="cha-ceph-configuration-db-runtime-view"/>を参照してください)、一時的にオーバーライドされた値は、<literal>override</literal>をソースとして表示されます。
     </para>
    </tip>
   </sect3>
   <sect3 xml:id="cha-ceph-configuration-db-runtime-view">
    <title>ランタイム設定の表示</title>
    <para>
     デーモンに設定されているすべてのオプションを表示するには、次のコマンドを実行します。
    </para>
<screen><prompt>cephuser@adm &gt; </prompt>ceph config show-with-defaults osd.0</screen>
    <para>
     デーモンに設定されている、デフォルトではないすべてのオプションを表示するには、次のコマンドを実行します。
    </para>
<screen><prompt>cephuser@adm &gt; </prompt>ceph config show osd.0</screen>
    <para>
     特定のオプションを調べるには、次のコマンドを実行します。
    </para>
<screen><prompt>cephuser@adm &gt; </prompt>ceph config show osd.0 debug_osd</screen>
    <para>
     デーモンのプロセスを実行しているノードから実行中のデーモンに接続し、設定を確認することも可能です。
    </para>
<screen><prompt>cephuser@adm &gt; </prompt>cephadm enter --name osd.0 -- ceph daemon osd.0 config show</screen>
    <para>
     デフォルトではない設定だけを表示するには、次のコマンドを実行します。
    </para>
<screen><prompt>cephuser@adm &gt; </prompt>cephadm enter --name osd.0 -- ceph daemon osd.0 config diff</screen>
    <para>
     特定のオプションを調べるには、次のコマンドを実行します。
    </para>
<screen><prompt>cephuser@adm &gt; </prompt>cephadm enter --name osd.0 -- ceph daemon osd.0 config get debug_osd</screen>
   </sect3>
  </sect2>
 </sect1>
 <sect1 xml:id="cha-ceph-config-key-store">
  <title><systemitem class="resource">config-key</systemitem> 格納</title>

  <para>
   <systemitem class="resource">config-key</systemitem>はCeph Monitorが提供する多目的サービスです。キーと値のペアを永続的に保存することで、設定キーの管理を容易にします。<systemitem class="resource">config-key</systemitem>を使用するのは主にCephのツールとデーモンです。
  </para>

  <tip>
   <para>
    キーの追加や既存のキーの変更を行ったら、影響を受けるサービスを再起動して変更を有効にします。Cephサービスの操作の詳細については、<xref linkend="cha-ceph-operating"/>を参照してください。
   </para>
  </tip>

  <para>
   <command></command>コマンドを使用して、<systemitem class="resource">config-key</systemitem>config-keyストアを操作します。<command>config-key</command>コマンドと共に、以下のサブコマンドを使用します。
  </para>

  <variablelist>
   <varlistentry>
    <term><command>ceph config-key rm <replaceable>KEY</replaceable></command></term>
    <listitem>
     <para>
      指定したキーを削除します。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>ceph config-key exists <replaceable>KEY</replaceable></command></term>
    <listitem>
     <para>
      指定したキーの有無をチェックします。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>ceph config-key get <replaceable>KEY</replaceable></command></term>
    <listitem>
     <para>
      指定したキーの値を取得します。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>ceph config-key ls</command></term>
    <listitem>
     <para>
      すべてのキーを一覧にします。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>ceph config-key dump</command></term>
    <listitem>
     <para>
      すべてのキーとその値をダンプします。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>ceph config-key set <replaceable>KEY</replaceable> <replaceable>VALUE</replaceable></command></term>
    <listitem>
     <para>
      指定したキーとその値を保存します。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <sect2 xml:id="cha-ceph-config-key-store-iscsi">
   <title>iSCSI Gateway</title>
   <para>
    iSCSI Gatewayは<systemitem class="resource">config-key</systemitem>ストアを使用して、設定オプションの保存と読み取りを行います。すべてのiSCSI Gatewayに関連するキーはプレフィックスとして<literal>iscsi</literal>という文字列がつきます。次に例を示します。
   </para>
<screen>
iscsi/trusted_ip_list
iscsi/api_port
iscsi/api_user
iscsi/api_password
iscsi/api_secure
</screen>
   <para>
    たとえば、2セットの設定オプションが必要な場合は、別の記述キーワードでプレフィックスを拡張します。たとえば、<literal>datacenterA</literal>と<literal>datacenterB</literal>を追加すると次のようになります。
   </para>
<screen>
iscsi/datacenterA/trusted_ip_list
iscsi/datacenterA/api_port
[...]
iscsi/datacenterB/trusted_ip_list
iscsi/datacenterB/api_port
[...]
</screen>
  </sect2>
 </sect1>
 <sect1 xml:id="config-osd-and-bluestore">
  <title>Ceph OSDとBlueStore</title>

  <sect2 xml:id="config-auto-cache-sizing">
   <title>自動キャッシュサイズ調整の設定</title>
   <para>
    <option>tc_malloc</option>がメモリアロケータとして設定されていて、<option>bluestore_cache_autotune</option>設定が有効になっている場合、BlueStoreを、そのキャッシュサイズを自動的に調整するように設定できます。このオプションは現在、デフォルトで有効です。BlueStoreは、<option>osd_memory_target</option>設定オプションを使用して、OSDのヒープメモリ使用量を指定されたターゲットサイズに維持しようとします。これはベストエフォート型のアルゴリズムで、<option>osd_memory_cache_min</option>で指定されている量よりも小さいサイズにキャッシュが縮小されることはありません。キャッシュ比率は、優先度の階層に基づいて選択されます。優先度情報が使用できない場合は、代わりに<option>bluestore_cache_meta_ratio</option>オプションと<option>bluestore_cache_kv_ratio</option>オプションが使用されます。
   </para>
   <variablelist>
    <varlistentry>
     <term>bluestore_cache_autotune</term>
     <listitem>
      <para>
       最小値を優先しながら、異なるBlueStoreキャッシュに割り当てられる比率を自動的に調整します。デフォルトは<option>True</option>です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>osd_memory_target</term>
     <listitem>
      <para>
       <option>tc_malloc</option>および<option>bluestore_cache_autotune</option>が有効な場合、この量のバイトをメモリ内マップした状態を保持しようとします。
      </para>
      <note>
       <para>
        これは、プロセスのRSSメモリ使用量と正確には一致しない場合があります。通常、プロセスによってマップされたヒープメモリの合計量は、このターゲットに近い値を維持しますが、マップ解除済みのメモリをカーネルが実際に再利用する保証はありません。
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>osd_memory_cache_min</term>
     <listitem>
      <para>
       <option>tc_malloc</option>および<option>bluestore_cache_autotune</option>が有効な場合に、キャッシュに使用するメモリの最小量を設定します。
      </para>
      <note>
       <para>
        この値を低く設定しすぎると、多大なキャッシュスラッシングが発生する可能性があります。
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>
 </sect1>
 <sect1 xml:id="config-ogw">
  <title>Ceph Object Gateway</title>

  <para>
   いくつかのオプションによりObject Gatewayの動作を間接的に操作することができます。オプションを指定しない場合は、そのデフォルト値が使用されます。次に、Object Gatewayのすべてのオプションのリストを示します。
  </para>

  <sect2 xml:id="config-ogw-general-settings">
   <title>一般的な設定</title>
   <variablelist>
    <varlistentry>
     <term>rgw_frontends</term>
     <listitem>
      <para>
       HTTPフロントエンドを設定します。複数のフロントエンドがある場合は、各項目のカンマ区切リストを指定します。各フロントエンド設定には、スペースで区切ったオプションのリストを含めることができます。この場合、各オプションは「キー=値」または「キー」の形式になります。デフォルトは<literal>beast port=7480</literal>です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_data</term>
     <listitem>
      <para>
       Object Gatewayのデータファイルの場所を設定します。デフォルトは<filename>/var/lib/ceph/radosgw/<replaceable>CLUSTER_ID</replaceable></filename>です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_enable_apis</term>
     <listitem>
      <para>
       指定したAPIを有効にします。デフォルトは「s3, swift, swift_auth, admin All APIs」です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_cache_enabled</term>
     <listitem>
      <para>
       Object Gatewayキャッシュを有効/無効にします。デフォルトは<literal>true</literal>です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_cache_lru_size</term>
     <listitem>
      <para>
       Object Gatewayキャッシュのエントリの数。デフォルトは10000です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_socket_path</term>
     <listitem>
      <para>
       ドメインソケットのソケットパス。<option>FastCgiExternalServer</option>は、このソケットを使用します。ソケットパスを指定しない場合、Object Gatewayは外部サーバとして実行されません。ここで指定するパスは、<filename>rgw.conf</filename>ファイルで指定するパスと同じである必要があります。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_fcgi_socket_backlog</term>
     <listitem>
      <para>
       fcgiのソケットバックログ。デフォルトは1024です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_host</term>
     <listitem>
      <para>
       Object Gatewayインスタンスのホスト。IPアドレスまたはDNS名を指定できます。デフォルトは<literal>0.0.0.0</literal>です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_port</term>
     <listitem>
      <para>
       インスタンスが要求をリスンするポート番号。指定されていない場合、Object Gatewayは外部のFastCGIを実行します。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_dns_name</term>
     <listitem>
      <para>
       サービス対象ドメインのDNS名。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_script_uri</term>
     <listitem>
      <para>
       SCRIPT_URIが要求で設定されていない場合の代替値。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_request_uri</term>
     <listitem>
      <para>
       REQUEST_URIが要求で設定されていない場合の代替値。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_print_continue</term>
     <listitem>
      <para>
       100-continueが使用可能な場合、これを有効にします。デフォルトは<literal>true</literal>です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_remote_addr_param</term>
     <listitem>
      <para>
       リモートアドレスパラメータ。たとえば、リモートアドレスが含まれるHTTPフィールド、またはリバースプロキシが使用可能な場合はX-Forwarded-Forアドレス。デフォルトは<literal>REMOTE_ADDR</literal>です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_op_thread_timeout</term>
     <listitem>
      <para>
       開いているスレッドのタイムアウト(秒)。デフォルトは600です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_op_thread_suicide_timeout</term>
     <listitem>
      <para>
       Object Gatewayプロキシが停止するまでのタイムアウト(秒)。0 (デフォルト)に設定すると無効になります。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_thread_pool_size</term>
     <listitem>
      <para>
       Beastサーバのスレッドの数。より多くの要求を実行する必要がある場合は、値を増やします。デフォルトは100スレッドです。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_num_rados_handles</term>
     <listitem>
      <para>
       Object GatewayのRADOSクラスタハンドルの数。Object Gatewayの各ワーカスレッドは、その有効期間中、RADOSハンドルを選択するようになりました。このオプションは今後のリリースで廃止され、削除される可能性があります。デフォルトは1です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_num_control_oids</term>
     <listitem>
      <para>
       異なるObject Gatewayインスタンス間のキャッシュ同期に使用する通知オブジェクトの数。デフォルトは8です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_init_timeout</term>
     <listitem>
      <para>
       Object Gatewayが初期化を中止するまでの秒数。デフォルトは30です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_mime_types_file</term>
     <listitem>
      <para>
       MIMEタイプのパスと場所。Swiftによるオブジェクトタイプの自動検出に使用します。デフォルトは<filename>/etc/mime.types</filename>です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_gc_max_objs</term>
     <listitem>
      <para>
       1つのガベージコレクション処理サイクルでガベージコレクションによって処理できるオブジェクトの最大数。デフォルトは32です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_gc_obj_min_wait</term>
     <listitem>
      <para>
       ガベージコレクション処理によってオブジェクトを削除および処理するまでの最大待機時間。デフォルトは2 * 3600です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_gc_processor_max_time</term>
     <listitem>
      <para>
       2つの連続するガベージコレクション処理サイクルを開始する間隔の最大時間。デフォルトは3600です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_gc_processor_period</term>
     <listitem>
      <para>
       ガベージコレクション処理のサイクル時間。デフォルトは3600です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_s3_success_create_obj_status</term>
     <listitem>
      <para>
       <literal>create-obj</literal>に対する代替の成功ステータス応答。デフォルトは0です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_resolve_cname</term>
     <listitem>
      <para>
       Object Gatewayが要求ホスト名フィールドのDNS CNAMEレコードを使用する必要があるかどうか(ホスト名がObject Gateway DNS名に等しくない場合)。デフォルトは<literal>false</literal>です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_obj_stripe_size</term>
     <listitem>
      <para>
       Object Gatewayオブジェクトのオブジェクトストライプのサイズ。デフォルトは<literal>4 &lt;&lt; 20</literal>です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_extended_http_attrs</term>
     <listitem>
      <para>
       エンティティ(たとえば、ユーザ、バケット、オブジェクト)に設定できる一連の新しい属性を追加します。これらの追加属性は、エンティティを配置したり、POSTメソッドを使用して変更したりする場合に、HTTPヘッダフィールドによって設定できます。設定されている場合、これらの属性は、エンティティに対してGET/HEADを要求したときにHTTPフィールドとして返されます。デフォルトは<literal>content_foo, content_bar, x-foo-bar</literal>です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_exit_timeout_secs</term>
     <listitem>
      <para>
       プロセスを待機してから無条件に終了するまでの秒数。デフォルトは120です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_get_obj_window_size</term>
     <listitem>
      <para>
       1つのオブジェクト要求のウィンドウサイズ(バイト単位)。デフォルトは<literal>16 &lt;&lt; 20</literal>です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_get_obj_max_req_size</term>
     <listitem>
      <para>
       Ceph Storage Clusterに送信される1つのGET操作の最大要求サイズ。デフォルトは<literal>4 &lt;&lt; 20</literal>です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_relaxed_s3_bucket_names</term>
     <listitem>
      <para>
       USリージョンのバケットに対して、あいまいなS3バケット名を有効にします。デフォルトは<literal>false</literal>です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_list_buckets_max_chunk</term>
     <listitem>
      <para>
       ユーザバケットを一覧にする際に1つの操作で取得するバケットの最大数。デフォルトは1000です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_override_bucket_index_max_shards</term>
     <listitem>
      <para>
       バケットインデックスオブジェクトのシャードの数を表します。0 (デフォルト)の設定は、シャーディングがないことを示します。バケットの一覧のコストが増加するため、大きすぎる値(たとえば、1000)を設定しないことをお勧めします。この変数は、自動的に<command>radosgw-admin</command>コマンドに適用されるよう、クライアントまたはグローバルセクションで設定する必要があります。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_curl_wait_timeout_ms</term>
     <listitem>
      <para>
       特定の<command>curl</command>呼び出しのタイムアウト(ミリ秒)。デフォルトは1000です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_copy_obj_progress</term>
     <listitem>
      <para>
       コピー操作に時間がかかる場合に、オブジェクトの進行状況の出力を有効にします。デフォルトは<literal>true</literal>です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_copy_obj_progress_every_bytes</term>
     <listitem>
      <para>
       コピーの進行状況出力間の最大バイト数。デフォルトは1024 * 1024です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_admin_entry</term>
     <listitem>
      <para>
       管理要求URLのエントリポイント。デフォルトは<literal>admin</literal>です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_content_length_compat</term>
     <listitem>
      <para>
       CONTENT_LENGTHとHTTP_CONTENT_LENGTHの両方が設定されたFCGI要求の互換処理を有効にします。デフォルトは<literal>false</literal>です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_bucket_quota_ttl</term>
     <listitem>
      <para>
       キャッシュされたクォータ情報を信頼する時間の量(秒単位)。このタイムアウトを過ぎると、クォータ情報はクラスタから再フェッチされます。デフォルトは600です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_user_quota_bucket_sync_interval</term>
     <listitem>
      <para>
       バケットクォータ情報が蓄積されてからクラスタと同期するまでの時間(秒単位)。この時間の間、他のObject Gatewayインスタンスは、このインスタンスに対する操作に関連したバケットクォータ統計情報の変更を確認しません。デフォルトは180です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_user_quota_sync_interval</term>
     <listitem>
      <para>
       ユーザクォータ情報が蓄積されてからクラスタと同期するまでの時間(秒数)。この時間の間、他のObject Gatewayインスタンスは、このインスタンスに対する操作に関連したユーザクォータ統計情報の変更を確認しません。デフォルトは180です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_bucket_default_quota_max_objects</term>
     <listitem>
      <para>
       バケットあたりのオブジェクトのデフォルトの最大数。他のクォータが指定されていない場合、新しいユーザに対して設定され、既存のユーザには影響しません。この変数は、自動的に<command>radosgw-admin</command>コマンドに適用されるよう、クライアントまたはグローバルセクションで設定する必要があります。デフォルトは-1です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_bucket_default_quota_max_size</term>
     <listitem>
      <para>
       バケットあたりのデフォルトの最大容量(バイト単位)。他のクォータが指定されていない場合、新しいユーザに対して設定され、既存のユーザには影響しません。デフォルトは-1です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_user_default_quota_max_objects</term>
     <listitem>
      <para>
       ユーザのオブジェクトのデフォルトの最大数。これには、ユーザが所有するすべてのバケット内にあるすべてのオブジェクトが含まれます。他のクォータが指定されていない場合、新しいユーザに対して設定され、既存のユーザには影響しません。デフォルトは-1です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_user_default_quota_max_size</term>
     <listitem>
      <para>
       他のクォータが指定されていない場合に新しいユーザに対して設定されるユーザの最大クォータサイズの値(バイト単位)。既存のユーザには影響しません。デフォルトは-1です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_verify_ssl</term>
     <listitem>
      <para>
       要求の実行中にSSL証明書を検証します。デフォルトは<literal>true</literal>です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_max_chunk_size</term>
     <listitem>
      <para>
       1回の操作で読み込むデータチャンクの最大サイズ。値を4MB (4194304)に増やすと、大容量オブジェクトの処理時にパフォーマンスが向上します。デフォルトは128KB (131072)です。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <variablelist>
    <title>マルチサイト設定</title>
    <varlistentry>
     <term>rgw_zone</term>
     <listitem>
      <para>
       ゲートウェイインスタンスのゾーンの名前。ゾーンが設定されていない場合は、<command>radosgw-admin zone default</command>コマンドでクラスタ全体のデフォルト値を設定できます。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_zonegroup</term>
     <listitem>
      <para>
       ゲートウェイインスタンスのゾーングループの名前。ゾーングループが設定されていない場合は、<command>radosgw-admin zonegroup default</command>コマンドでクラスタ全体のデフォルト値を設定できます。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_realm</term>
     <listitem>
      <para>
       ゲートウェイインスタンスのレルムの名前。レルムが設定されていない場合は、<command>radosgw-admin realm default</command>コマンドでクラスタ全体のデフォルト値を設定できます。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_run_sync_thread</term>
     <listitem>
      <para>
       レルム内に同期元となる他のゾーンがある場合は、データとメタデータの同期を処理するためのスレッドを生成します。デフォルトは<literal>true</literal>です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_data_log_window</term>
     <listitem>
      <para>
       データログエントリのウィンドウ(秒単位)。デフォルトは30です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_data_log_changes_size</term>
     <listitem>
      <para>
       データ変更ログ用に保持するメモリ内エントリの数。デフォルトは1000です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_data_log_obj_prefix</term>
     <listitem>
      <para>
       データログのオブジェクト名のプレフィックス。デフォルトは「data_log」です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_data_log_num_shards</term>
     <listitem>
      <para>
       データ変更ログを保持するシャード(オブジェクト)の数。デフォルトは128です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_md_log_max_shards</term>
     <listitem>
      <para>
       メタデータログのシャードの最大数。デフォルトは64です。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <variablelist>
    <title>Swift設定</title>
    <varlistentry>
     <term>rgw_enforce_swift_acls</term>
     <listitem>
      <para>
       SwiftのACL (アクセス制御リスト)設定を適用します。デフォルトは<literal>true</literal>です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_swift_token_expiration</term>
     <listitem>
      <para>
       Swiftのトークンを期限切れにする時間(秒単位)。デフォルトは24 * 3600です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_swift_url</term>
     <listitem>
      <para>
       Ceph Object Gateway Swift APIのURL。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_swift_url_prefix</term>
     <listitem>
      <para>
       「/v1」の部分の前に配置するSwift StorageURLのURLプレフィックス。これにより、同じホスト上で複数のゲートウェイインスタンスを実行できます。互換性のため、この設定変数を空に設定すると、デフォルトの「/swift」が使用されます。StorageURLをルートから開始するには、明示的なプレフィックス「/」を使用します。
      </para>
      <warning>
       <para>
        S3 APIが有効な場合、このオプションを「/」に設定しても機能しません。S3を無効にすると、マルチサイト設定でObject Gatewayを展開できなくなることに注意してください。
       </para>
      </warning>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_swift_auth_url</term>
     <listitem>
      <para>
       内部Swift認証が使用されていない場合にv1認証トークンを検証するためのデフォルトのURL。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_swift_auth_entry</term>
     <listitem>
      <para>
       Swift認証URLのエントリポイント。デフォルトは<literal>auth</literal>です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_swift_versioning_enabled</term>
     <listitem>
      <para>
       OpenStack Object Storage APIのオブジェクトのバージョン管理を有効にします。これにより、クライアントは、バージョンを管理する必要があるコンテナに<literal>X-Versions-Location</literal>属性を設定できます。この属性では、アーカイブされたバージョンを保存するコンテナの名前を指定します。これは、アクセス制御の検証のため、バージョン管理されたコンテナと同じユーザが所有する必要があります。ACLは考慮「されません」。<emphasis></emphasis>これらのコンテナは、S3のバージョン管理メカニズムではバージョン管理できません。デフォルトは<literal>false</literal>です。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <variablelist>
    <title>ログ設定</title>
    <varlistentry>
     <term>rgw_log_nonexistent_bucket</term>
     <listitem>
      <para>
       存在しないバケットに対する要求をObject Gatewayがログに記録できるようにします。デフォルトは<literal>false</literal>です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_log_object_name</term>
     <listitem>
      <para>
       オブジェクト名のログ書式。書式指定子の詳細については、マニュアルページ<command>man 1 date</command>を参照してください。デフォルトは<literal>%Y-%m-%d-%H-%i-%n</literal>です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_log_object_name_utc</term>
     <listitem>
      <para>
       ログに記録するオブジェクト名にUTC時刻を含めるかどうか。<literal>false</literal>(デフォルト)に設定すると、ローカル時刻が使用されます。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_usage_max_shards</term>
     <listitem>
      <para>
       使用状況ログ用のシャードの最大数。デフォルトは32です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_usage_max_user_shards</term>
     <listitem>
      <para>
       1人のユーザの使用状況ログに使用するシャードの最大数。デフォルトは1です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_enable_ops_log</term>
     <listitem>
      <para>
       Object Gatewayの正常な操作それぞれに対してログを有効にします。デフォルトは<literal>false</literal>です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_enable_usage_log</term>
     <listitem>
      <para>
       使用状況ログを有効にします。デフォルトは<literal>false</literal>です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_ops_log_rados</term>
     <listitem>
      <para>
       操作ログをCeph Storage Clusterバックエンドに書き込むかどうか。デフォルトは<literal>true</literal>です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_ops_log_socket_path</term>
     <listitem>
      <para>
       操作ログを書き込むためのUnixドメインソケット。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_ops_log_data_backlog</term>
     <listitem>
      <para>
       Unixドメインソケットに書き込まれる操作ログのデータバックログの最大データサイズ。デフォルトは5&lt;&lt;20です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_usage_log_flush_threshold</term>
     <listitem>
      <para>
       同期的にフラッシュするまでの、使用状況ログ内のマージされたダーティエントリの数。デフォルトは1024です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_usage_log_tick_interval</term>
     <listitem>
      <para>
       保留中の使用状況ログデータを「n」秒ごとにフラッシュします。デフォルトは30です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_log_http_headers</term>
     <listitem>
      <para>
       ログエントリに含めるHTTPヘッダのカンマ区切りリスト。ヘッダ名では大文字と小文字は区別されず、各単語を下線で区切った完全なヘッダ名を使用します。たとえば、「http_x_forwarded_for」「http_x_special_k」のようにします。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_intent_log_object_name</term>
     <listitem>
      <para>
       インテントログオブジェクト名のログ書式。書式指定子の詳細については、マニュアルページ<command>man 1 date</command>を参照してください。デフォルトは「%Y-%m-%d-%i-%n」です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_intent_log_object_name_utc</term>
     <listitem>
      <para>
       インテントログオブジェクト名にUTC時刻を含めるかどうか。<literal>false</literal>(デフォルト)に設定すると、ローカル時刻が使用されます。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <variablelist>
    <title>Keystone設定</title>
    <varlistentry>
     <term>rgw_keystone_url</term>
     <listitem>
      <para>
       KeystoneサーバのURL。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_keystone_api_version</term>
     <listitem>
      <para>
       Keystoneサーバと通信するために使用するOpenStack Identity APIのバージョン(2または3)。デフォルトは2です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_keystone_admin_domain</term>
     <listitem>
      <para>
       OpenStack Identity API v3を使用する場合に管理者特権を持つOpenStackドメインの名前。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_keystone_admin_project</term>
     <listitem>
      <para>
       OpenStack Identity API v3を使用する場合に管理者特権を持つOpenStackプロジェクトの名前。設定されていない場合は、代わりに<command>rgw keystone admin tenant</command>の値が使用されます。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_keystone_admin_token</term>
     <listitem>
      <para>
       Keystone管理者トークン(共有シークレット)。Object Gatewayでは、管理者トークンを使用した認証は、管理者資格情報を使用した認証よりも優先されます(オプション<option>rgw keystone admin user</option>、<option>rgw keystone admin password</option>、<option>rgw keystone admin tenant</option>、<option>rgw keystone admin project</option>、および<option>rgw keystone admin domain</option>)。管理者トークン機能は非推奨と見なされています。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_keystone_admin_tenant</term>
     <listitem>
      <para>
       OpenStack Identity API v2を使用する場合に管理者特権を持つOpenStackテナント(サービステナント)の名前。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_keystone_admin_user</term>
     <listitem>
      <para>
       OpenStack Identity API v2を使用する場合にKeystone認証用の管理者特権を持つOpenStackユーザ(サービスユーザ)の名前。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_keystone_admin_password</term>
     <listitem>
      <para>
       OpenStack Identity API v2を使用する場合のOpenStack管理者ユーザのパスワード。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_keystone_accepted_roles</term>
     <listitem>
      <para>
       要求を実行するために必要な役割。デフォルトは「Member, admin」です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_keystone_token_cache_size</term>
     <listitem>
      <para>
       各Keystoneトークンキャッシュ内のエントリの最大数。デフォルトは10000です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_keystone_revocation_interval</term>
     <listitem>
      <para>
       トークンの失効を確認する間隔の秒数。デフォルトは15 * 60です。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>rgw_keystone_verify_ssl</term>
     <listitem>
      <para>
       Keystoneへのトークン要求の実行中にSSL証明書を検証します。デフォルトは<literal>true</literal>です。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <sect3 xml:id="sec-ceph-rgw-configuration-notes">
    <title>追加の注意事項</title>
    <variablelist>
     <varlistentry>
      <term>rgw_dns_name</term>
      <listitem>
       <para>
        クライアントが<literal>vhost</literal>形式のバケットを使用できるようにします。
       </para>
       <para>
        <literal>vhost</literal>形式のアクセスは、<replaceable>bucketname</replaceable>.<replaceable>s3-endpoint</replaceable>/<replaceable>object-path</replaceable>を使用することを意味します。これに対して<literal>path</literal>形式のアクセスは<replaceable>s3-endpoint</replaceable>/<replaceable>bucket</replaceable>/<replaceable>object</replaceable>を使用します。
       </para>
       <para>
        <literal>rgw dns name</literal>が設定されている場合、S3クライアントが<literal>rgw dns name</literal>で指定されるエンドポイントに直接要求するように設定されているか、確認してください。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect3>
  </sect2>

  <sect2 xml:id="config-ogw-http-frontends">
   <title>HTTPフロントエンドの設定</title>
   <sect3 xml:id="config-http-beast">
    <title>Beast</title>
    <variablelist>
     <varlistentry>
      <term>port、ssl_port</term>
      <listitem>
       <para>
        IPv4およびIPv6のリスンポート番号。複数のポート番号を指定できます。
       </para>
<screen>port=80 port=8000 ssl_port=8080</screen>
       <para>
        デフォルトは80です。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>endpoint、ssl_endpoint</term>
      <listitem>
       <para>
        「address[:port]」の形式のリスンアドレス。アドレスは、ドット区切りの10進数形式のIPv4アドレス文字列、または角括弧で囲んだ16進数形式のIPv6アドレスです。IPv6エンドポイントを指定すると、IPv6のみがリスンされます。オプションのポート番号は、<option>endpoint</option>の場合は80、<option>ssl_endpoint</option>の場合は443にデフォルトで設定されます。複数のアドレスを指定できます。
       </para>
<screen>
endpoint=[::1] endpoint=192.168.0.100:8000 ssl_endpoint=192.168.0.100:8080
</screen>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>ssl_private_key</term>
      <listitem>
       <para>
        SSLが有効なエンドポイントに対して使用する秘密鍵のパス(オプション)。指定されていない場合、<option>ssl_certificate</option>ファイルが秘密鍵として使用されます。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>tcp_nodelay</term>
      <listitem>
       <para>
        指定されている場合、ソケットオプションにより、接続時にNagleのアルゴリズムが無効化されます。つまり、パケットは、バッファがいっぱいになるかタイムアウトになるまで待つのではなく、できるだけ早く送信されます。
       </para>
       <para>
        「1」は、すべてのソケットに対してNagleのアルゴリズムを無効にします。
       </para>
       <para>
        「0」は、Nagleのアルゴリズムを有効なままにします(デフォルト)。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
    <example>
     <title>Beastの設定例</title>
<screen>
<prompt>cephuser@adm &gt; </prompt>ceph config set rgw.myrealm.myzone.ses-min1.kwwazo \
 rgw_frontends beast port=8000 ssl_port=443 \
 ssl_certificate=/etc/ssl/ssl.crt \
 error_log_file=/var/log/radosgw/beast.error.log
</screen>
<screen>
</screen>
    </example>
   </sect3>
   <sect3 xml:id="config-http-civetweb">
    <title>CivetWeb</title>
    <variablelist>
     <varlistentry>
      <term>ポート</term>
      <listitem>
       <para>
        リスンするポート番号。SSLが有効なポートには、サフィックス「s」を追加します(たとえば、「443s」)。特定のIPv4またはIPv6アドレスをバインドするには、「address:port」の形式を使用します。複数のエンドポイントを指定するには、各エンドポイントを「+」で結合するか、複数のオプションを指定します。
       </para>
<screen>
port=127.0.0.1:8000+443s
port=8000 port=443s
</screen>
       <para>
        デフォルトは7480です。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>num_threads</term>
      <listitem>
       <para>
        受信HTTP接続を処理するためにCivetwebによって生成されるスレッドの数。これは実質的に、フロントエンドが処理できる同時接続数を制限します。
       </para>
       <para>
        デフォルトは、<option>rgw_thread_pool_size</option>オプションで指定されている値です。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>request_timeout_ms</term>
      <listitem>
       <para>
        Civetwebが他の受信データを待機してから中止するまでの時間(ミリ秒単位)。
       </para>
       <para>
        デフォルトは30,000ミリ秒です。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>access_log_file</term>
      <listitem>
       <para>
        アクセスログファイルのパス。フルパス、または現在の作業ディレクトリを基準とした相対パスのいずれかを指定できます。指定されていない場合(デフォルト)、アクセスはログに記録されません。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>error_log_file</term>
      <listitem>
       <para>
        エラーログファイルのパス。フルパス、または現在の作業ディレクトリを基準とした相対パスのいずれかを指定できます。指定されていない場合(デフォルト)、エラーはログに記録されません。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
    <example>
     <title><filename>/etc/ceph/ceph.conf</filename>のCivetweb設定の例</title>
<screen>
<prompt>cephuser@adm &gt; </prompt>ceph config set rgw.myrealm.myzone.ses-min2.ingabw \
 rgw_frontends civetweb port=8000+443s request_timeout_ms=30000 \
 error_log_file=/var/log/radosgw/civetweb.error.log
</screen>
    </example>
   </sect3>
   <sect3 xml:id="config-http-common-options">
    <title>共通オプション</title>
    <variablelist>
     <varlistentry>
      <term>ssl_certificate</term>
      <listitem>
       <para>
        SSLが有効なエンドポイントに対して使用するSSL証明書ファイルのパス。
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>prefix</term>
      <listitem>
       <para>
        すべての要求のURLに挿入するプレフィックス文字列。たとえば、Swift専用のフロントエンドでは、URLプレフィックス<literal>/swift</literal>を指定できます。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect3>
  </sect2>
 </sect1>
</chapter>
