<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="deploy_bootstrap.xml" version="5.0" xml:id="deploy-bootstrap">
 <info>
  <title><systemitem class="resource">ceph-salt</systemitem>を使用したブートストラップクラスタの展開</title>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:translation>yes</dm:translation>
   <dm:release>SES 7</dm:release>
  </dm:docmanager>
 </info>
 <para>
  このセクションでは、基本的なCephクラスタを展開する一連のプロセスを説明します。以下のサブセクションをよく読んで、記載されているコマンドを記載されている順番で実行してください。
 </para>
 <sect1 xml:id="deploy-cephadm-cephsalt">
  <title><systemitem class="resource">ceph-salt</systemitem>のインストール</title>

  <para>
   <systemitem class="resource">ceph-salt</systemitem>はcephadmに管理されるCephクラスタを展開するためのツールを提供します。<systemitem class="resource">ceph-salt</systemitem>はSaltインフラストラクチャを使用して、OSの管理(たとえば、ソフトウェアアップデートや時刻の同期)や、Salt Minionの役割の定義を行います。
  </para>

  <para>
   Salt Master上で、<package>ceph-salt</package>パッケージをインストールします。
  </para>

<screen><prompt>root@master # </prompt>zypper install ceph-salt</screen>

  <para>
   先に示したコマンドは、<package>ceph-salt-formula</package>を依存関係としてインストールします。この依存関係により、<filename>/etc/salt/master.d</filename>ディレクトリに追加のファイルを挿入することで、Salt Masterの設定が変更されます。変更を適用するには、<systemitem class="daemon">salt-master.service</systemitem>を再起動し、Saltモジュールを同期させます。
  </para>

<screen>
<prompt>root@master # </prompt>systemctl restart salt-master.service
<prompt>root@master # </prompt>salt \* saltutil.sync_all
</screen>
 </sect1>
 <sect1 xml:id="deploy-cephadm-configure">
  <title>クラスタプロパティの設定</title>

  <para>
   <command>ceph-salt config</command>コマンドを使用して、クラスタの基本的なプロパティを設定します。
  </para>

  <important>
   <para>
    <filename>/etc/ceph/ceph.conf</filename>ファイルは、cephadmで管理されており、ユーザは編集しないでください。<emphasis></emphasis>Cephの設定パラメータは、新しい<command>ceph config</command>コマンドを使用して設定する必要があります。詳細については、<xref linkend="cha-ceph-configuration-db"/>を参照してください。
   </para>
  </important>

  <sect2 xml:id="deploy-cephadm-configure-shell">
   <title><systemitem class="resource">ceph-salt</systemitem>シェルの使用</title>
   <para>
    <command> config</command>をパスやサブコマンドを使わずに実行する場合、インタラクティブな<systemitem class="resource">ceph-salt</systemitem>ceph-saltシェルを入力します。このシェルは、1つのバッチで複数のプロパティを設定する必要がありますが、完全なコマンド構文を入力したくない場合に便利です。
   </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config
<prompt>/&gt;</prompt> ls
o- / ............................................................... [...]
  o- ceph_cluster .................................................. [...]
  | o- minions .............................................. [no minions]
  | o- roles ....................................................... [...]
  |   o- admin .............................................. [no minions]
  |   o- bootstrap ........................................... [no minion]
  |   o- cephadm ............................................ [no minions]
  |   o- tuned ..................................................... [...]
  |     o- latency .......................................... [no minions]
  |     o- throughput ....................................... [no minions]
  o- cephadm_bootstrap ............................................. [...]
  | o- advanced .................................................... [...]
  | o- ceph_conf ................................................... [...]
  | o- ceph_image_path .................................. [ no image path]
  | o- dashboard ................................................... [...]
  | | o- force_password_update ................................. [enabled]
  | | o- password ................................................ [admin]
  | | o- ssl_certificate ....................................... [not set]
  | | o- ssl_certificate_key ................................... [not set]
  | | o- username ................................................ [admin]
  | o- mon_ip .................................................. [not set]
  o- containers .................................................... [...]
  | o- registries_conf ......................................... [enabled]
  | | o- registries .............................................. [empty]
  | o- registry_auth ............................................... [...]
  |   o- password .............................................. [not set]
  |   o- registry .............................................. [not set]
  |   o- username .............................................. [not set]
  o- ssh ............................................... [no key pair set]
  | o- private_key .................................. [no private key set]
  | o- public_key .................................... [no public key set]
  o- time_server ........................... [enabled, no server host set]
    o- external_servers .......................................... [empty]
    o- servers ................................................... [empty]
    o- subnet .................................................. [not set]
</screen>
   <para>
    <systemitem class="resource">ceph-salt</systemitem>の<command>ls</command>コマンドの出力を見るとわかるように、クラスタ構成がツリー構造に整理されます。<systemitem class="resource">ceph-salt</systemitem>シェルに含まれる、クラスタの特定のプロパティを設定するには、次の2つのオプションがあります。
   </para>
   <itemizedlist>
    <listitem>
     <para>
      現在位置からコマンドを実行し、第1引数としてプロパティへの絶対パスを入力する
     </para>
<screen>
<prompt>/&gt;</prompt> /cephadm_bootstrap/dashboard ls
o- dashboard ....................................................... [...]
  o- force_password_update ..................................... [enabled]
  o- password .................................................... [admin]
  o- ssl_certificate ........................................... [not set]
  o- ssl_certificate_key ....................................... [not set]
  o- username .................................................... [admin]
<prompt>/&gt; /cephadm_bootstrap/dashboard/username set ceph-admin</prompt>
Value set.
</screen>
    </listitem>
    <listitem>
     <para>
      設定する必要があるプロパティへのパスを変更してから、コマンドを実行する
     </para>
<screen>
<prompt>/&gt;</prompt> cd /cephadm_bootstrap/dashboard/
<prompt>/ceph_cluster/minions&gt;</prompt> ls
o- dashboard ....................................................... [...]
  o- force_password_update ..................................... [enabled]
  o- password .................................................... [admin]
  o- ssl_certificate ........................................... [not set]
  o- ssl_certificate_key ....................................... [not set]
  o- username ................................................[ceph-admin]
</screen>
    </listitem>
   </itemizedlist>
   <tip>
    <title>設定スニペットの自動補完</title>
    <para>
     <systemitem class="resource">ceph-salt</systemitem>シェルの中では自動補完機能を使用できます。これは、通常のLinuxシェル(Bash)の自動補完と同じようなものです。この機能は設定パス、サブコマンド、またはSalt Minion名を補完します。設定パスを自動補完する場合は、次の2つのオプションがあります。
    </para>
    <itemizedlist>
     <listitem>
      <para>
       現在位置からの相対的なパスをシェルに補完させる場合は、TABキー<keycap function="tab"/>を2回押します。
      </para>
     </listitem>
     <listitem>
      <para>
       シェルに絶対パスを補完させる場合は、<keycap>/</keycap>を入力してからTABキー<keycap function="tab"/>を2回押します。
      </para>
     </listitem>
    </itemizedlist>
   </tip>
   <tip>
    <title>方向キーによる移動</title>
    <para>
     <command>シェルからパスを使用せずに</command>cd<systemitem class="resource">ceph-salt</systemitem>コマンドを入力すると、ツリー構造のクラスタ構成が出力され、現在パスの行がアクティブになります。上下の方向キーを使用して、それぞれの行に移動できます。<keycap function="enter"/>を押して確定すると、アクティブ行に設定パスが変更されます。
    </para>
   </tip>
   <important>
    <title>表記</title>
    <para>
     ドキュメントの整合性を維持するため、<systemitem class="resource">ceph-salt</systemitem>シェルを入力しない単一のコマンド構文を使用しています。たとえば、次のコマンドを使用してクラスタ構成のツリーを一覧にできます。
    </para>
<screen><prompt>root@master # </prompt>ceph-salt config ls</screen>
   </important>
  </sect2>

  <sect2 xml:id="deploy-cephadm-configure-minions">
   <title>Salt Minionの追加</title>
   <para>
    <xref linkend="deploy-salt"/>で展開し受諾したSalt Minionの全体またはサブセットをCephクラスタ構成に含めます。Salt Minionはフルネームで指定できます。また、「*」と「?」のグロブ表現を使用することで複数のSalt Minionを同時に含めることもできます。<literal>/ceph_cluster/minions</literal>パスで<command>add</command>サブコマンドを使用します。次のコマンドは受諾済みのSalt Minionをすべて含めます。
   </para>
<screen><prompt>root@master # </prompt>ceph-salt config /ceph_cluster/minions add '*'</screen>
   <para>
    指定したSalt Minionが追加されたことを確認します。
   </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config /ceph_cluster/minions ls
o- minions ................................................. [Minions: 5]
  o- ses-master.example.com .................................. [no roles]
  o- ses-min1.example.com .................................... [no roles]
  o- ses-min2.example.com .................................... [no roles]
  o- ses-min3.example.com .................................... [no roles]
  o- ses-min4.example.com .................................... [no roles]
</screen>
  </sect2>

  <sect2 xml:id="deploy-cephadm-configure-cephadm">
   <title>cephadmで管理するSalt Minionの指定</title>
   <para>
    Cephクラスタに属し、cephadmで管理するノードを指定します。Cephサービスを実行するすべてのノードと、管理ノードを含めます。
   </para>
<screen><prompt>root@master # </prompt>ceph-salt config /ceph_cluster/roles/cephadm add '*'</screen>
  </sect2>

  <sect2 xml:id="deploy-cephadm-configure-admin">
   <title>管理ノードの指定</title>
   <para>
    管理ノードは、<filename>ceph.conf</filename>設定ファイルとCeph管理キーリングがインストールされるノードです。通常、Ceph関連のコマンドは管理ノードで実行します。
   </para>
   <tip>
    <title>同じノード上のSalt Masterと管理ノード</title>
    <para>
     すべての、または、ほとんどのホストがSUSE Enterprise Storageに所属するような均質な環境では、Salt Masterと同じホストに管理ノードを置くことお勧めします。
    </para>
    <para>
     あるSaltインフラストラクチャが複数のクラスタのホストとなるような異種環境(たとえば、SUSE Enterprise Storageと共にSUSE Managerを使用するような環境)では、Salt Masterと同じホストに管理ノードを置かない<emphasis></emphasis>でください。
    </para>
   </tip>
   <para>
    管理ノードを指定するには、次のコマンドを実行します。
   </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config /ceph_cluster/roles/admin add ses-master.example.com
1 minion added.
<prompt>root@master # </prompt>ceph-salt config /ceph_cluster/roles/admin ls
o- admin ................................................... [Minions: 1]
  o- ses-master.example.com ...................... [Other roles: cephadm]
</screen>
   <tip>
    <title><filename>ceph.conf</filename>と管理キーリングを複数のノードにインストールする</title>
    <para>
     展開で必要な場合は、Ceph設定ファイルと管理キーリングを複数のノードにインストールすることもできます。セキュリティ上の理由から、すべてのクラスタのノードにインストールすることは避けてください。
    </para>
   </tip>
  </sect2>

  <sect2 xml:id="deploy-cephadm-configure-mon">
   <title>最初のMON/MGRノードの指定</title>
   <para>
    クラスタをブートストラップするSalt Minionをクラスタ内から指定する必要があります。このミニオンはCeph MonitorとCeph Managerサービスを実行する最初のミニオンになります。
   </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config /ceph_cluster/roles/bootstrap set ses-min1.example.com
Value set.
<prompt>root@master # </prompt>ceph-salt config /ceph_cluster/roles/bootstrap ls
o- bootstrap ..................................... [ses-min1.example.com]
</screen>
   <para>
    さらに、<option>public_network</option>パラメータが正しく設定されていることを確認するために、パブリックネットワーク上のブートストラップMONのIPアドレスを指定する必要があります。たとえば、次のコマンドを実行します。
   </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/mon_ip set 192.168.10.20
</screen>
  </sect2>

  <sect2 xml:id="deploy-cephadm-tuned-profiles">
   <title>調整されるプロファイルの指定</title>
   <para>
    クラスタの中から、アクティブに調整されるプロファイルを保有するミニオンを指定する必要があります。そのためには、次のコマンドを実行して役割を明示的に追加してください。
   </para>
   <note>
    <para>
     1つのミニオンに<literal>latency</literal>と<literal>throughput</literal>の両方の役割を持たせることはできません。
    </para>
   </note>
<screen>
<prompt>root@master # </prompt>ceph-salt config /ceph_cluster/roles/tuned/latency add ses-min1.example.com
Adding ses-min1.example.com...
1 minion added.
<prompt>root@master # </prompt>ceph-salt config /ceph_cluster/roles/tuned/throughput add ses-min2.example.com
Adding ses-min2.example.com...
1 minion added.
</screen>
  </sect2>

  <sect2 xml:id="deploy-cephadm-configure-ssh">
   <title>SSHキーペアの生成</title>
   <para>
    cephadmはSSHプロトコルを使用してクラスタノードと通信します。<literal>cephadm</literal>という名前のユーザアカウントが自動的に作成され、SSH通信に使用されます。
   </para>
   <para>
    SSHキーペアの公開鍵と秘密鍵を生成する必要があります。
   </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config /ssh generate
Key pair generated.
<prompt>root@master # </prompt>ceph-salt config /ssh ls
o- ssh .................................................. [Key Pair set]
  o- private_key ..... [53:b1:eb:65:d2:3a:ff:51:6c:e2:1b:ca:84:8e:0e:83]
  o- public_key ...... [53:b1:eb:65:d2:3a:ff:51:6c:e2:1b:ca:84:8e:0e:83]
</screen>
  </sect2>

  <sect2 xml:id="deploy-cephadm-configure-ntp">
   <title>タイムサーバの設定</title>
   <para>
    すべてのクラスタノードは信頼できるタイムソースと時刻を同期する必要があります。時刻を同期するには、いくつかのシナリオがあります。
   </para>
   <itemizedlist>
    <listitem>
     <para>
      最適なNTPサービスを使用して時刻を同期するように、すべてのクラスタノードを設定済みの場合、タイムサーバ処理を完全に無効化します。
     </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config /time_server disable
</screen>
    </listitem>
    <listitem>
     <para>
      お使いのサイトに単一のタイムソースがすでに存在する場合は、そのタイムソースのホスト名を指定します。
     </para>
<screen>
 <prompt>root@master # </prompt>ceph-salt config /time_server/servers add <replaceable>time-server.example.com</replaceable>
</screen>
    </listitem>
    <listitem>
     <para>
      別の方法として、<systemitem class="resource">ceph-salt</systemitem>にはSalt Minionの1つを残りのクラスタのタイムサーバとして機能するように設定する機能があります。この機能は「内部タイムサーバ」と呼ばれることもあります。このシナリオでは、<systemitem class="resource">ceph-salt</systemitem>は内部タイムサーバ(Salt Minionの1つであるはず)を、<literal>pool.ntp.org</literal>などの外部のタイムサーバと時刻を同期するように設定します。同時に、それ以外のミニオンを内部タイムサーバから時刻を取得するように設定します。この方法は、次のように実現できます。
     </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config /time_server/servers add ses-master.example.com
<prompt>root@master # </prompt>ceph-salt config /time_server/external_servers add pool.ntp.org
</screen>
     <para>
      <option>/time_server/subnet</option>オプションはサブネットを指定します。NTPクライアントはこのサブネットからNTPサーバへのアクセスを許可されます。サブネットは<option>/time_server/servers</option>を指定した際に自動で設定されます。変更や手動指定が必要な場合は、次のコマンドを実行します。
     </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config /time_server/subnet set 10.20.6.0/24
</screen>
    </listitem>
   </itemizedlist>
   <para>
    次のコマンドでタイムサーバの設定を確認します。
   </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config /time_server ls
o- time_server ................................................ [enabled]
  o- external_servers ............................................... [1]
  | o- pool.ntp.org ............................................... [...]
  o- servers ........................................................ [1]
  | o- ses-master.example.com ..................................... [...]
  o- subnet .............................................. [10.20.6.0/24]
</screen>
   <para>
    時刻同期設定の詳細については、<link xlink:href="https://documentation.suse.com/sles/15-SP3/html/SLES-all/cha-ntp.html#sec-ntp-yast"/>を参照してください。
   </para>
  </sect2>

  <sect2 xml:id="deploy-cephadm-configure-dashboardlogin">
   <title>Cephダッシュボードログインアカウント情報の設定</title>
   <para>
    基本的なクラスタが展開されると、Cephダッシュボードが使用可能になります。アクセスするには、有効なユーザ名とパスワードを設定する必要があります。次に例を示します。
   </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/dashboard/username set admin
<prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/dashboard/password set <replaceable>PWD</replaceable>
</screen>
   <tip>
    <title>パスワードの更新を強制する</title>
    <para>
     デフォルトでは、最初のダッシュボードユーザはダッシュボードに最初にログインの際にパスワードの変更を求められます。機能を無効化するには、次のコマンドを実行します。
    </para>
<screen><prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/dashboard/force_password_update disable</screen>
   </tip>
  </sect2>

  <sect2 xml:id="deploy-cephadm-configure-registry">
   <title>コンテナレジストリの使用</title>
   <para>
    Cephクラスタは、コンテナ化されたCephサービスをダウンロードして展開できるように、コンテナレジストリにアクセスできる必要があります。レジストリにアクセスするには、次の2つの方法があります。
   </para>
   <itemizedlist>
    <listitem>
     <para>
      クラスタが<literal>registry.suse.com</literal>のデフォルトレジストリに(直接またはプロキシ経由で)アクセスできる場合は、ローカルレジストリを作成せずにこのURLに直接<systemitem class="resource">ceph-salt</systemitem>をポイントすることができます。<xref linkend="deploy-cephadm-configure-imagepath"/>の手順に従って続行します。
     </para>
    </listitem>
    <listitem>
     <para>
      クラスタがデフォルトレジストリにアクセスできない場合(たとえば、エアギャップ環境の展開の場合)は、ローカルコンテナレジストリを設定する必要があります。ローカルレジストリを作成して設定したら、そのレジストリに<systemitem class="resource">ceph-salt</systemitem>をポイントする必要があります。
     </para>
    </listitem>
   </itemizedlist>
   <sect3 xml:id="updating-ceph-local-registry">
    <title>ローカルレジストリの作成と設定(オプション)</title>
    <important>
     <para>
      ローカルレジストリを作成するさまざまな方法があります。このセクションの手順は、セキュアなレジストリと非セキュアなレジストリを作成する例です。コンテナイメージレジストリの実行に関する一般的な情報については、<link xlink:href="https://documentation.suse.com/sles/15-SP3/single-html/SLES-container/#sec-docker-registry-installation"/>を参照してください。
     </para>
    </important>
    <tip>
     <title>配置とポートの使用</title>
     <para>
      クラスタ内のすべてのノードがアクセスできるマシンにレジストリを展開します。管理ノードをお勧めします。デフォルトでは、レジストリはポート5000でリスンします。
     </para>
     <para>
      レジストリノードで、次のコマンドを使用して、ポートが空いていることを確認します。
     </para>
<screen>ss -tulpn | grep :5000</screen>
     <para>
      他のプロセス(<literal>iscsi-tcmu</literal>など)がすでにポート5000でリスンしている場合は、レジストリコンテナのポート5000にマップするために使用できる別の空きポートを確認します。
     </para>
    </tip>
    <procedure>
     <title>ローカルレジストリの作成</title>
     <step>
      <para>
       <package>Containers Module</package>拡張機能が有効になっていることを確認します。
      </para>
<screen>
<prompt>&gt; </prompt>SUSEConnect --list-extensions | grep -A2 "Containers Module"
Containers Module 15 SP3 x86_64 (Activated)
</screen>
     </step>
     <step>
      <para>
       次のパッケージがインストールされていることを確認します: <package>apache2-utils</package> (セキュアなレジストリを有効にしている場合)、<package>cni</package>、<package>cni-plugins</package>、<package>podman</package>、<package>podman-cni-config</package>、および<package>skopeo</package>。
      </para>
     </step>
     <step>
      <para>
       次の情報を収集します。
      </para>
      <itemizedlist>
       <listitem>
        <para>
         レジストリホスト(<option>REG_HOST_FQDN</option>)の完全修飾ドメイン名。
        </para>
       </listitem>
       <listitem>
        <para>
         5000のレジストリコンテナポート(<option>REG_HOST_PORT</option>)にマップするために使用される使用可能なポート番号。
        </para>
       </listitem>
       <listitem>
        <para>
         レジストリがセキュアか非セキュアかどうか(<option>insecure=[true|false]</option>)。
        </para>
       </listitem>
      </itemizedlist>
     </step>
     <step>
      <para>
       非セキュアなレジストリ(SSL暗号化なし)を開始するには、次の手順に従います。
      </para>
      <substeps>
       <step>
        <para>
         非セキュアなレジストリの<systemitem class="resource">ceph-salt</systemitem>を設定します。
        </para>
<screen>
<prompt>cephuser@adm &gt; </prompt>ceph-salt config containers/registries_conf enable
<prompt>cephuser@adm &gt; </prompt>ceph-salt config containers/registries_conf/registries \
 add prefix=<option>REG_HOST_FQDN</option> insecure=true \
 location=<option>REG_HOST_PORT</option>:5000
</screen>
       </step>
       <step>
        <para>
         必要なディレクトリ(たとえば、<filename>/var/lib/registry</filename>)を作成し、<command>podman</command>コマンドを使用してレジストリを開始することにより、非セキュアなレジストリを開始します。
        </para>
<screen>
<prompt role="root"># </prompt>mkdir -p /var/lib/registry
<prompt role="root"># </prompt>podman run --privileged -d --name registry \
 -p <option>REG_HOST_PORT</option>:5000 -v /var/lib/registry:/var/lib/registry \
 --restart=always registry:2
</screen>
       </step>
       <step>
        <para>
         再起動後にレジストリを開始するには、レジストリの<systemitem class="daemon">systemd</systemitem>ユニットファイルを作成して有効にします。
        </para>
<screen>
<prompt>&gt; </prompt><command>sudo</command> podman generate systemd --files --name registry
<prompt>&gt; </prompt><command>sudo</command> mv container-registry.service /etc/systemd/system/
<prompt>&gt; </prompt><command>sudo</command> systemctl enable container-registry.service
</screen>
       </step>
      </substeps>
     </step>
     <step>
      <para>
       セキュアなレジストリを開始するには、次の手順に従います。
      </para>
      <substeps>
       <step>
        <para>
         必要なディレクトリを作成します。
        </para>
<screen><prompt role="root"># </prompt>mkdir -p /var/lib/registry/{auth,certs}</screen>
       </step>
       <step>
        <para>
         SSL証明書を生成します。
        </para>
<screen>
<prompt role="root"># </prompt>openssl req -newkey rsa:4096 -nodes -sha256 \
 -keyout /var/lib/registry/certs/domain.key -x509 -days 365 \
 -out /var/lib/registry/certs/domain.crt
</screen>
        <note>
         <para>
          <literal>CN=[value]</literal>の値をホストの完全修飾ドメイン名([<option>REG_HOST_FQDN</option>])に設定します。
         </para>
        </note>
       </step>
       <step>
        <para>
         証明書をすべてのクラスタノードにコピーし、証明書キャッシュを更新します。
        </para>
<screen>
<prompt role="root"># </prompt>salt-cp '*' /var/lib/registry/certs/domain.crt \
 /etc/pki/trust/anchors/
<prompt role="root"># </prompt>salt '*' cmd.shell "update-ca-certificates"
</screen>
       </step>
       <step>
        <para>
         レジストリへの認証用にユーザ名とパスワードの組み合わせを生成します。
        </para>
<screen>
<prompt role="root"># </prompt>htpasswd2 -bBc /var/lib/registry/auth/htpasswd \
 <option>REG_USERNAME</option> <option>REG_PASSWORD</option>
</screen>
       </step>
       <step>
        <para>
         セキュアなレジストリを開始します。<option>REGISTRY_STORAGE_DELETE_ENABLED=true</option>フラグを使用して、後で<command>skopeo delete</command>コマンドを使用してイメージを削除できるようにします。
        </para>
<screen>
podman run --name myregistry -p <option>REG_HOST_PORT</option>:5000 \
 -v /var/lib/registry:/var/lib/registry \
 -v /var/lib/registry/auth:/auth:z \
 -e "REGISTRY_AUTH=htpasswd" \
 -e "REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm" \
 -e REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd \
 -v /var/lib/registry/certs:/certs:z \
 -e "REGISTRY_HTTP_TLS_CERTIFICATE=/certs/domain.crt" \
 -e "REGISTRY_HTTP_TLS_KEY=/certs/domain.key" \
 -e REGISTRY_STORAGE_DELETE_ENABLED=true \
 -e REGISTRY_COMPATIBILITY_SCHEMA1_ENABLED=true -d registry:2
</screen>
       </step>
       <step>
        <para>
         レジストリへのセキュアなアクセスをテストします。
        </para>
<screen>
<prompt>&gt; </prompt>curl https://<option>REG_HOST_FQDN</option>:<option>REG_HOST_PORT</option>/v2/_catalog \
 -u <option>REG_USERNAME</option>:<option>REG_PASSWORD</option>
</screen>
       </step>
      </substeps>
     </step>
     <step>
      <para>
       ローカルレジストリが作成されたら、<literal>registry.suse.com</literal>にある公式のSUSEレジストリからローカルレジストリにコンテナイメージを同期する必要があります。同期するために、<package>skopeo</package>パッケージに含まれている<command>skopeo sync</command>コマンドを使用できます。詳細については、マニュアルページ(<command>man 1 skopeo-sync</command>)を参照してください。次に例を示します。
      </para>
      <example>
       <title>マニフェストファイルの表示</title>
<screen>
skopeo inspect docker://registry.suse.com/ses/7.1/ceph/ceph | jq .RepoTags
skopeo inspect docker://registry.suse.com/ses/7.1/ceph/grafana | jq .RepoTags
skopeo inspect docker://registry.suse.com/ses/7.1/ceph/prometheus-server:2.32.1 | jq .RepoTags
skopeo inspect docker://registry.suse.com/ses/7.1/ceph/prometheus-node-exporter:1.1.2 | jq .RepoTags
skopeo inspect docker://registry.suse.com/ses/7.1/ceph/prometheus-alertmanager:0.21.0 | jq .RepoTags
</screen>
      </example>
      <example>
       <title>ディレクトリに同期</title>
       <para>
        すべてのCephイメージを同期します。
       </para>
<screen>skopeo sync --src docker --dest dir registry.suse.com/ses/7.1/ceph/ceph /root/images/</screen>
       <para>
        最新のイメージのみを同期します。
       </para>
<screen>skopeo sync --src docker --dest dir registry.suse.com/ses/7.1/ceph/ceph:latest /root/images/</screen>
      </example>
      <example>
       <title>Grafanaイメージを同期</title>
<screen>skopeo sync --src docker --dest dir registry.suse.com/ses/7.1/ceph/grafana /root/images/</screen>
       <para>
        最新のGrafanaイメージのみを同期します。
       </para>
<screen>skopeo sync --src docker --dest dir registry.suse.com/ses/7.1/ceph/grafana:latest /root/images/</screen>
      </example>
      <example>
       <title>最新のPrometheusイメージを同期</title>
<screen>
skopeo sync --src docker --dest dir registry.suse.com/ses/7.1/ceph/prometheus-server:2.32.1 /root/images/
skopeo sync --src docker --dest dir registry.suse.com/ses/7.1/ceph/prometheus-node-exporter:1.1.2 /root/images/
skopeo sync --src docker --dest dir registry.suse.com/ses/7.1/ceph/prometheus-alertmanager:0.21.0 /root/images/
</screen>
      </example>
     </step>
    </procedure>
    <procedure>
     <title>ローカルレジストリを設定し、資格情報にアクセスする</title>
     <step>
      <para>
       ローカルレジストリのURLを設定します。
      </para>
<screen><prompt>cephuser@adm &gt; </prompt>ceph-salt config /containers/registry_auth/registry set <replaceable>REG_HOST_URL</replaceable></screen>
     </step>
     <step>
      <para>
       ローカルレジストリにアクセスするためのユーザ名とパスワードを設定します。
      </para>
<screen><prompt>cephuser@adm &gt; </prompt>ceph-salt config /containers/registry_auth/username set <replaceable>REG_USERNAME</replaceable></screen>
<screen><prompt>cephuser@adm &gt; </prompt>ceph-salt config /containers/registry_auth/password set <replaceable>REG_PASSWORD</replaceable></screen>
     </step>
    </procedure>
    <tip>
     <title>レジストリキャッシュ</title>
     <para>
      更新されたコンテナが新しく登場した際にローカルレジストリを再同期しないようにするには、「レジストリキャッシュ」<emphasis></emphasis>を設定できます。
     </para>
    </tip>
   </sect3>
   <sect3 xml:id="deploy-cephadm-configure-imagepath">
    <title>コンテナイメージへのパスの設定</title>
    <important>
     <para>
      このセクションでは、ブートストラップクラスタのコンテナイメージへのパスを設定する方法を説明します(最初のCeph MonitorとCeph Managerのペアの展開)。パスは、監視スタックなどの追加サービスのコンテナイメージには適用されません。
     </para>
    </important>
    <tip>
     <title>HTTPSプロキシの設定</title>
     <para>
      プロキシを使用してコンテナレジストリサーバと通信する必要がある場合は、すべてのクラスタノードで次の設定手順を実行します。
     </para>
     <procedure>
      <step>
       <para>
        コンテナの設定ファイルをコピーします。
       </para>
<screen><prompt>&gt; </prompt><command>sudo</command> cp /usr/share/containers/containers.conf /etc/containers/containers.conf</screen>
      </step>
      <step>
       <para>
        新しくコピーしたファイルを編集し、<option>http_proxy</option>設定を<literal>[engine]</literal>セクションに追加します。次に例を示します。
       </para>
<screen><prompt>&gt; </prompt>cat /etc/containers/containers.conf
 [engine]
 http_proxy=proxy.example.com
 [...]
 </screen>
      </step>
     </procedure>
    </tip>
    <para>
     cephadmは、コンテナイメージへの有効なURIパスを知っている必要があります。次のコマンドを実行して、デフォルト設定を確認します。
    </para>
<screen><prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/ceph_image_path ls</screen>
    <para>
     代替レジストリまたはローカルレジストリが必要ない場合は、デフォルトのSUSEコンテナレジストリを指定します。
    </para>
<screen><prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/ceph_image_path set registry.suse.com/ses/7.1/ceph/ceph</screen>
    <para>
     ローカルレジストリへのパスなど、展開に特定のパスが必要な場合は、次のように設定します。
    </para>
<screen><prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/ceph_image_path set <replaceable>LOCAL_REGISTRY_PATH</replaceable></screen>
   </sect3>
  </sect2>

  <sect2 xml:id="deploy-cephadm-inflight-encryption">
   <title>データ転送中の暗号化(msgr2)の有効化</title>
   <para>
    MSGR2プロトコルは、Cephの通信プロトコルです。このプロトコルは、ネットワークを通過するすべてのデータを暗号化するセキュリティモードを提供し、認証ペイロードをカプセル化し、新しい認証モード(Kerberosなど)を将来的に統合することを可能にします。
   </para>
   <important>
    <para>
     現在のところ、CephFSやRADOS Block Deviceなどの、LinuxカーネルのCephFSクライアントはmsgr2をサポートしていません。
    </para>
   </important>
   <para>
    Cephデーモンは複数のポートにバインドできるため、古いCephクライアントとv2対応の新しいクライアントが同じクラスタに接続できます。デフォルトでは、MONはIANAが新しく割り当てた3300番ポート(CE4hまたは0xCE4)と、過去のデフォルトポートである6789番ポートにバインドされます。前者は新しいv2プロトコル用で、後者は旧式のv1プロトコル用です。
   </para>
   <para>
    v2プロトコル(MSGR2)は2つの接続モードに対応しています。
   </para>
   <variablelist>
    <varlistentry>
     <term>crcモード</term>
     <listitem>
      <para>
       接続確立時の整合性チェックと、CRC32Cによる完全性チェックが行われます。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>セキュアモード</term>
     <listitem>
      <para>
       接続確立時の厳重な初回認証と、認証後のすべてのトラフィックの完全な暗号化が行われます。これには、暗号の完全性チェックが含まれます。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    ほとんどの接続については、オプションで使用するモードを制御できます。
   </para>
   <variablelist>
    <varlistentry>
     <term>ms_cluster_mode</term>
     <listitem>
      <para>
       Cephデーモン間のクラスタ内通信に使用される接続モード(または許可モード)。複数のモードが記載されている場合は、先頭に記載されたものが優先されます。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ms_service_mode</term>
     <listitem>
      <para>
       クライアントがクラスタに接続する際に使用する許可モードのリスト。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ms_client_mode</term>
     <listitem>
      <para>
       Cephクラスタと通信する際にクライアントが使用(または許可)する、優先度順の接続モードのリスト。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    Monitorだけに適用される、同様のオプションセットが存在します。これにより、管理者がMonitorとの通信に異なる要求(通常はより厳しい要求)を設定することができます。
   </para>
   <variablelist>
    <varlistentry>
     <term>ms_mon_cluster_mode</term>
     <listitem>
      <para>
       Monitor間の通信に使用される接続モード(または許可モード)。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ms_mon_service_mode</term>
     <listitem>
      <para>
       クライアントや他のCephデーモンがMonitorに接続する際に使用する許可モードのリスト。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ms_mon_client_mode</term>
     <listitem>
      <para>
       Monitorと通信する際にクライアントやMonitor以外のデーモンが使用する、優先度順の接続モードのリスト。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    展開中にMSGR2の暗号化モードを有効化するには、<systemitem class="resource">ceph-salt</systemitem>設定に設定オプションをいくつか追加してから<command>ceph-salt apply</command>を実行します。
   </para>
   <para>
    <literal>secure</literal>モードを使用するには、次のコマンドを実行します。
   </para>
   <para>
    <filename>設定ツールの</filename>ceph_conf<systemitem class="resource">ceph-salt</systemitem>にグローバルセクションを追加します。
   </para>
<screen><prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/ceph_conf add global</screen>
   <para>
    次のオプションを設定します。
   </para>
<screen><prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/ceph_conf/global set ms_cluster_mode "secure crc"
<prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/ceph_conf/global set ms_service_mode "secure crc"
<prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/ceph_conf/global set ms_client_mode "secure crc"
</screen>
   <note>
    <para>
     <literal>crc</literal>の前に<literal>secure</literal>がついているか確認してください。
    </para>
   </note>
   <para>
    <emphasis></emphasis> <literal>secure</literal>モードを強制するには、次のコマンドを実行します。
   </para>
<screen><prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/ceph_conf/global set ms_cluster_mode secure
<prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/ceph_conf/global set ms_service_mode secure
<prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/ceph_conf/global set ms_client_mode secure
</screen>
   <tip xml:id="update-inflight-encryption-settings">
    <title>設定の更新</title>
    <para>
     上記の設定を変更したい場合、Monitor設定の保存先に変更内容を設定します。その手段として、<command>ceph config set</command>コマンドを使用します。
    </para>
<screen><prompt>root@master # </prompt>ceph config set global <replaceable>CONNECTION_OPTION</replaceable> <replaceable>CONNECTION_MODE</replaceable> [--force]</screen>
    <para>
     例:
    </para>
<screen><prompt>root@master # </prompt>ceph config set global ms_cluster_mode "secure crc"</screen>
    <para>
     現在値やデフォルト値を確認したい場合は、次のコマンドを実行します。
    </para>
<screen><prompt>root@master # </prompt>ceph config get <replaceable>CEPH_COMPONENT</replaceable> <replaceable>CONNECTION_OPTION</replaceable></screen>
    <para>
     たとえば、OSDの<literal>ms_cluster_mode</literal>を取得するには、次のコマンドを実行します。
    </para>
<screen><prompt>root@master # </prompt>ceph config get osd ms_cluster_mode</screen>
   </tip>
  </sect2>

  <sect2 xml:id="deploy-cephadm-enable-network">
   <title>クラスタネットワークの設定</title>
   <para>
    必要に応じて分離されたクラスタネットワークを実行する場合は、クラスタのネットワークIPアドレスの末尾にスラッシュ記号で区切ったサブネットマスクを付加したアドレスを設定する必要がある場合があります。たとえば、<literal>192.168.10.22/24</literal>のようなアドレスです。
   </para>
   <para>
    <literal>cluster_network</literal>を有効化するには、次のコマンドを実行します。
   </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/ceph_conf add global
<prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/ceph_conf/global set cluster_network <replaceable>NETWORK_ADDR</replaceable>
</screen>
  </sect2>

  <sect2 xml:id="deploy-cephadm-configure-verify">
   <title>クラスタ設定の確認</title>
   <para>
    最低限のクラスタ設定が完了しました。明らかな誤りがないか、確認してください。
   </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config ls
o- / ............................................................... [...]
  o- ceph_cluster .................................................. [...]
  | o- minions .............................................. [Minions: 5]
  | | o- ses-master.example.com .................................. [admin]
  | | o- ses-min1.example.com ......................... [bootstrap, admin]
  | | o- ses-min2.example.com ................................. [no roles]
  | | o- ses-min3.example.com ................................. [no roles]
  | | o- ses-min4.example.com ................................. [no roles]
  | o- roles ....................................................... [...]
  |   o- admin .............................................. [Minions: 2]
  |   | o- ses-master.example.com ....................... [no other roles]
  |   | o- ses-min1.example.com ................. [other roles: bootstrap]
  |   o- bootstrap ................................ [ses-min1.example.com]
  |   o- cephadm ............................................ [Minions: 5]
  |   o- tuned ..................................................... [...]
  |     o- latency .......................................... [no minions]
  |     o- throughput ....................................... [no minions]
  o- cephadm_bootstrap ............................................. [...]
  | o- advanced .................................................... [...]
  | o- ceph_conf ................................................... [...]
  | o- ceph_image_path .............. [registry.suse.com/ses/7.1/ceph/ceph]
  | o- dashboard ................................................... [...]
  |   o- force_password_update ................................. [enabled]
  |   o- password ................................... [randomly generated]
  |   o- username ................................................ [admin]
  | o- mon_ip ............................................ [192.168.10.20]
  o- containers .................................................... [...]
  | o- registries_conf ......................................... [enabled]
  | | o- registries .............................................. [empty]
  | o- registry_auth ............................................... [...]
  |   o- password .............................................. [not set]
  |   o- registry .............................................. [not set]
  |   o- username .............................................. [not set]
  o- ssh .................................................. [Key Pair set]
  | o- private_key ..... [53:b1:eb:65:d2:3a:ff:51:6c:e2:1b:ca:84:8e:0e:83]
  | o- public_key ...... [53:b1:eb:65:d2:3a:ff:51:6c:e2:1b:ca:84:8e:0e:83]
  o- time_server ............................................... [enabled]
    o- external_servers .............................................. [1]
    | o- 0.pt.pool.ntp.org ......................................... [...]
    o- servers ....................................................... [1]
    | o- ses-master.example.com .................................... [...]
    o- subnet ............................................. [10.20.6.0/24]
</screen>
   <tip>
    <title>クラスタ設定のステータス</title>
    <para>
     次のコマンドを実行することで、クラスタ設定が有効かどうかを確認できます。
    </para>
<screen>
<prompt>root@master # </prompt>ceph-salt status
cluster: 5 minions, 0 hosts managed by cephadm
config: OK
</screen>
   </tip>
  </sect2>

  <sect2 xml:id="deploy-cephadm-configure-export">
   <title>クラスタ設定のエクスポート</title>
   <para>
    基本的なクラスタの設定が完了し、設定が有効であること確認したら、クラスタ設定をファイルにエクスポートするとよいでしょう。
   </para>
<screen><prompt>root@master # </prompt>ceph-salt export &gt; cluster.json</screen>
   <warning>
    <para>
     <command>ceph-salt export</command>の出力にはSSHの秘密鍵が含まれます。セキュリティ上の不安がある場合は、適切な予防策を講じるまではコマンドを実行しないでください。
    </para>
   </warning>
   <para>
    クラスタ設定を破棄してバックアップの状態に戻す場合は、次のコマンドを実行します。
   </para>
<screen><prompt>root@master # </prompt>ceph-salt import cluster.json</screen>
  </sect2>
 </sect1>
 <sect1 xml:id="deploy-cephadm-deploy">
  <title>ノードの更新と最小クラスタのブートストラップ</title>

  <para>
   クラスタを展開する前に、すべてのノードのソフトウェアパッケージをすべて更新してください。
  </para>

<screen><prompt>root@master # </prompt>ceph-salt update</screen>

  <para>
   アップデート中にノードが<literal>Reboot is needed</literal>と報告した場合、重要なOSのパッケージ(カーネルなど)が新しいバージョンに更新されているため、ノードを再起動して変更を適用する必要があります。
  </para>

  <para>
   再起動が必要なノードをすべて再起動するには、<option>--reboot</option>オプションを付加してください。
  </para>

<screen><prompt>root@master # </prompt>ceph-salt update --reboot</screen>

  <para>
   もしくは、個別に再起動してください。
  </para>

<screen><prompt>root@master # </prompt>ceph-salt reboot</screen>

  <important>
   <para>
    Salt Masterは<command>ceph-salt update --reboot</command>や<command>ceph-salt reboot</command>コマンドでは再起動されません。Salt Masterの再起動が必要な場合、手動で再起動してください。
   </para>
  </important>

  <para>
   ノードの更新後、最小のクラスタをブートストラップします。
  </para>

<screen><prompt>root@master # </prompt>ceph-salt apply</screen>

  <note>
   <para>
    ブートストラップが完了すると、クラスタにはCeph MonitorとCeph Managerが1つずつ含まれます。
   </para>
  </note>

  <para>
   先のコマンドを実行すると、インタラクティブなユーザインターフェイスが開かれ、各ミニオンの現在の進行状況が表示されます。
  </para>

  <figure>
   <title>最小クラスタの展開</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="cephadm_deploy.png" width="75%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="cephadm_deploy.png" width="75%"/>
    </imageobject>
   </mediaobject>
  </figure>

  <tip>
   <title>非インタラクティブモード</title>
   <para>
    スクリプトから設定を適用する必要がある場合、非インタラクティブモードで展開することもできます。このモードは、リモートマシンからクラスタを展開する際にも有用です。ネットワーク経由で進捗状況を画面に更新し続けると、煩わしく感じる場合があるためです。
   </para>
<screen><prompt>root@master # </prompt>ceph-salt apply --non-interactive</screen>
  </tip>
 </sect1>
 <sect1 xml:id="deploy-min-cluster-final-steps">
  <title>最終ステップの確認</title>

  <para>
   <command>ceph-salt apply</command>コマンドが完了すると、Ceph MonitorとCeph Managerが1つずつ存在するはずです。<literal>root</literal>に相当する<literal>admin</literal>の役割を与えられたミニオンか、<literal>sudo</literal>を使用する<literal>cephadm</literal>ユーザは、<command>ceph status</command>コマンドを正常に実行できるはずです。
  </para>

  <para>
   次の手順には、cephadmを使用した追加のCeph Monitor、Ceph Manager、OSD、監視スタック、ゲートウェイの展開が含まれます。
  </para>

  <para>
   続ける前に新しいクラスタのネットワーク設定を確認してください。この時点では、<literal>ceph-salt</literal>設定の<literal>/cephadm_bootstrap/mon_ip</literal>に入力された内容に従って、<literal>public_network</literal>設定が読み込まれます。しかし、この設定はCeph Monitorにしか適用されません。次のコマンドを使用して、この設定を確認できます。
  </para>

<screen><prompt>root@master # </prompt>ceph config get mon public_network</screen>

  <para>
   これがCephの動作に必要な最低限の設定ですが、この<literal>public_network</literal>設定を<literal>global</literal>に設定することをお勧めします。つまり、この設定がMONだけでなく、すべてのタイプのCephデーモンにも適用されます。
  </para>

<screen><prompt>root@master # </prompt>ceph config set global public_network "$(ceph config get mon public_network)"</screen>

  <note>
   <para>
    この手順は必須ではありません。しかしながら、この設定を使用しないと、Ceph OSDと(Ceph Monitorを除く)その他のデーモンが「すべてのアドレス」<emphasis></emphasis>をリスンすることになります。
   </para>
   <para>
    完全に分離されたネットワークを使用して、OSDどうしを通信させたい場合は、次のコマンドを実行します。
   </para>
<screen><prompt>root@master # </prompt>ceph config set global cluster_network "<replaceable>cluster_network_in_cidr_notation</replaceable>"</screen>
   <para>
    このコマンドを実行すると、展開中に作成されるOSDは最初から所定のクラスタネットワークを使用するようになります。
   </para>
  </note>

  <para>
   クラスタが高密度なノード(ホストあたりのOSDが62個を超える)から構成されるように設定する場合は、Ceph OSDに十分なポートを割り当ててください。デフォルトのポート範囲(6800～7300)のままでは、ホストあたりのOSDは最大62個までです。高密度なノードを含むクラスタの場合、<literal>ms_bind_port_max</literal>の設定を適切な値に調整してください。各OSDは追加で8個のポートを使用します。たとえば、96個のOSDを実行するように設定されたホストの場合、768個のポートが必要になります。この場合、次のコマンドを実行して、<literal>ms_bind_port_max</literal>を少なくとも7568に設定する必要があります。
  </para>

<screen><prompt>root@master # </prompt>ceph config set osd.* ms_bind_port_max 7568</screen>

  <para>
   これを動作させるには、設定した値に応じてファイアウォールの設定も調整する必要があります。詳細については、<xref linkend="storage-bp-net-firewall"/>を参照してください。
  </para>
 </sect1>
 <sect1 xml:id="deploy-min-cluster-disable-insecure">
  <title>非セキュアクライアントの無効化</title>

  <para>
   Pacific v15.2.11以降、非セキュアなクライアントがクラスタに参加できることを通知する新しいヘルス警告が導入されました。この警告はデフォルトで「オン」になっています。<emphasis></emphasis>Cephダッシュボードはクラスタを<literal>HEALTH_WARN</literal>ステータスで表示し、コマンドラインでクラスタステータスを確認すると次のように通知します。
  </para>

<screen>
<prompt>cephuser@adm &gt; </prompt>ceph status
cluster:
  id:     3fe8b35a-689f-4970-819d-0e6b11f6707c
  health: HEALTH_WARN
  mons are allowing insecure global_id reclaim
[...]
</screen>

  <para>
   この警告は、Ceph Monitorが、パッチが適用されていない古いクライアントがクラスタに接続することを引き続き許可していることを意味します。これにより、クラスタのアップグレード中も既存のクライアントが引き続き接続できるようになりますが、対処する必要のある問題があることを警告します。クラスタとすべてのクライアントが最新バージョンのCephにアップグレードされたら、次のコマンドを実行して、パッチが適用されていないクライアントを禁止します。
  </para>

<screen><prompt>cephuser@adm &gt; </prompt>ceph config set mon auth_allow_insecure_global_id_reclaim false</screen>
 </sect1>
</chapter>
