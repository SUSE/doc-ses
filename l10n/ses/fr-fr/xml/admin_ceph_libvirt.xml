<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="admin_ceph_libvirt.xml" version="5.0" xml:id="cha-ceph-libvirt">
 <title><systemitem class="library">libvirt</systemitem> et Ceph</title>
 <info>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:translation>yes</dm:translation>
   <dm:release>SES 7</dm:release>
  </dm:docmanager>
 </info>
 <para>
  La bibliothèque <systemitem class="library">libvirt</systemitem> crée une couche d&apos;abstraction entre les interfaces d&apos;hyperviseur et les applications logicielles qui les utilisent. Avec <systemitem class="library">libvirt</systemitem>, les développeurs et administrateurs système peuvent se concentrer sur un cadre de gestion commun, une API commune et une interface shell commune (<command>virsh</command>) vers de nombreux hyperviseurs différents, notamment QEMU/KVM, Xen, LXC ou VirtualBox.
 </para>
 <para>
  Les périphériques de bloc Ceph prennent en charge QEMU/KVM. Vous pouvez utiliser des périphériques de bloc Ceph avec un logiciel qui interagit avec <systemitem class="library">libvirt</systemitem>. La solution cloud utilise <systemitem class="library">libvirt</systemitem> pour interagir avec QEMU/KVM, lequel interagit avec les périphériques de bloc Ceph via <systemitem>librbd</systemitem>.
 </para>
 <para>
  Pour créer des machines virtuelles qui utilisent des périphériques de bloc Ceph, utilisez les procédures décrites dans les sections suivantes. Dans ces exemples, nous avons utilisé <literal>libvirt-pool</literal> comme nom de réserve, <literal>client.libvirt</literal> comme nom d&apos;utilisateur et <literal>new-libvirt-image</literal> comme nom d&apos;image. Vous pouvez utiliser n&apos;importe quelle valeur, mais assurez-vous de remplacer ces valeurs lors de l&apos;exécution des commandes dans les procédures suivantes.
 </para>
 <sect1 xml:id="ceph-libvirt-cfg-ceph">
  <title>Configuration de Ceph avec <systemitem class="library">libvirt</systemitem></title>

  <para>
   Pour configurer Ceph en vue de son utilisation avec <systemitem class="library">libvirt</systemitem>, procédez comme suit :
  </para>

  <procedure>
   <step>
    <para>
     Créez une réserve. L&apos;exemple suivant utilise le nom de réserve <literal>libvirt-pool</literal> avec 128 groupes de placement.
    </para>
<screen><prompt>cephuser@adm &gt; </prompt>ceph osd pool create libvirt-pool 128 128</screen>
    <para>
     Vérifiez que la réserve existe.
    </para>
<screen><prompt>cephuser@adm &gt; </prompt>ceph osd lspools</screen>
   </step>
   <step>
    <para>
     Créez un utilisateur Ceph. L&apos;exemple suivant utilise le nom d&apos;utilisateur Ceph <literal>client.libvirt</literal> et fait référence à <literal>libvirt-pool</literal>.
    </para>
<screen><prompt>cephuser@adm &gt; </prompt>ceph auth get-or-create client.libvirt mon 'profile rbd' osd \
 'profile rbd pool=libvirt-pool'</screen>
    <para>
     Vérifiez que le nom existe.
    </para>
<screen><prompt>cephuser@adm &gt; </prompt>ceph auth list</screen>
    <note>
     <title>nom d&apos;utilisateur ou ID</title>
     <para>
      <systemitem class="library">libvirt</systemitem> accédera à Ceph en utilisant l&apos;identifiant <literal>libvirt</literal> et non pas le nom Ceph <literal>client.libvirt</literal>. La <xref linkend="cephx-user"/> fournit une explication détaillée de la différence entre l&apos;ID et le nom.
     </para>
    </note>
   </step>
   <step>
    <para>
     Utilisez QEMU pour créer une image dans votre réserve RBD. L&apos;exemple suivant utilise le nom d&apos;image <literal>new-libvirt-image</literal> et fait référence à <literal>libvirt-pool</literal>.
    </para>
    <tip>
     <title>emplacement du fichier de trousseau de clés</title>
     <para>
      La clé utilisateur <systemitem class="library">libvirt</systemitem> est stockée dans un fichier de trousseau de clés placé dans le répertoire <filename>/etc/ceph</filename>. Ce fichier doit avoir un nom approprié qui inclut le nom de la grappe Ceph à laquelle il appartient. Pour le nom de grappe par défaut « ceph », le nom de fichier de trousseau de clés est <filename>/etc/ceph/ceph.client.libvirt.keyring</filename>.
     </para>
     <para>
      Si le trousseau de clés n&apos;existe pas, créez-le avec :
     </para>
<screen><prompt>cephuser@adm &gt; </prompt>ceph auth get client.libvirt &gt; /etc/ceph/ceph.client.libvirt.keyring</screen>
    </tip>
<screen><prompt role="root"># </prompt>qemu-img create -f raw rbd:libvirt-pool/new-libvirt-image:id=libvirt 2G</screen>
    <para>
     Vérifiez que l&apos;image existe.
    </para>
<screen><prompt>cephuser@adm &gt; </prompt>rbd -p libvirt-pool ls</screen>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="ceph-libvirt-virt-manager">
  <title>Préparation du gestionnaire de machines virtuelles</title>

  <para>
   Vous pouvez utiliser <systemitem class="library">libvirt</systemitem> sans gestionnaire de machines virtuelles, mais il est généralement plus simple de créer le premier domaine à l&apos;aide de <command>virt-manager</command>.
  </para>

  <procedure>
   <step>
    <para>
     Installez un gestionnaire de machines virtuelles.
    </para>
<screen><prompt role="root"># </prompt>zypper in virt-manager</screen>
   </step>
   <step>
    <para>
     Préparez/téléchargez une image du système d&apos;exploitation que vous souhaitez virtualiser.
    </para>
   </step>
   <step>
    <para>
     Lancez le gestionnaire de machines virtuelles.
    </para>
<screen>virt-manager</screen>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="ceph-libvirt-create-vm">
  <title>Création d&apos;une machine virtuelle</title>

  <para>
   Pour créer une machine virtuelle avec <command>virt-manager</command>, procédez comme suit :
  </para>

  <procedure>
   <step>
    <para>
     Choisissez la connexion dans la liste, cliquez avec le bouton droit dessus, puis sélectionnez <guimenu>New</guimenu> (Nouvelle).
    </para>
   </step>
   <step>
    <para>
     <guimenu>Importez l&apos;image disque existante</guimenu> en fournissant le chemin du stockage existant. Indiquez le type de système d&apos;exploitation, les paramètres de mémoire et assignez le <guimenu>nom</guimenu> de la machine virtuelle, par exemple <literal>libvirt-virtual-machine</literal>.
    </para>
   </step>
   <step>
    <para>
     Terminez la configuration et démarrez la machine virtuelle.
    </para>
   </step>
   <step>
    <para>
     Vérifiez que le domaine nouvellement créé existe avec <command>sudo virsh list</command>. Si nécessaire, indiquez la chaîne de connexion, par exemple :
    </para>
<screen role="ceph.libvirt.create_vm1"><command>virsh -c qemu+ssh://root@vm_host_hostname/system list</command>
Id    Name                           State
-----------------------------------------------
[...]
 9     libvirt-virtual-machine       running</screen>
   </step>
   <step>
    <para>
     Connectez-vous à la machine virtuelle et arrêtez-la avant de la configurer en vue de son utilisation avec Ceph.
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="ceph-libvirt-cfg-vm">
  <title>Configuration de la machine virtuelle</title>

  <para>
   Dans ce chapitre, nous nous concentrons sur la configuration des machines virtuelles en vue de leur intégration avec Ceph à l&apos;aide de <command>virsh</command>. Les commandes <command>virsh</command> nécessitent souvent des privilèges root (<command>sudo</command>) ; si vous ne possédez pas ces privilèges, elles ne vous renverront pas les résultats appropriés et ne vous informeront pas que vous devez posséder ces privilèges root. Pour consulter une référence sur les commandes <command>virsh</command>, reportez-vous à la page <command>man 1 virsh</command> (nécessite l&apos;installation du paquetage <package>libvirt-client</package>).
  </para>

  <procedure>
   <step>
    <para>
     Ouvrez le fichier de configuration avec <command>virsh edit</command>
     <replaceable> vm-domain-name</replaceable>.
    </para>
<screen><prompt role="root"># </prompt>virsh edit libvirt-virtual-machine</screen>
   </step>
   <step>
    <para>
     Une entrée &lt;disk&gt; doit figurer sous &lt;devices&gt;.
    </para>
<screen>&lt;devices&gt;
    &lt;emulator&gt;/usr/bin/qemu-system-<replaceable>SYSTEM-ARCH</replaceable>&lt;/emulator&gt;
    &lt;disk type='file' device='disk'&gt;
      &lt;driver name='qemu' type='raw'/&gt;
      &lt;source file='/path/to/image/recent-linux.img'/&gt;
      &lt;target dev='vda' bus='virtio'/&gt;
      &lt;address type='drive' controller='0' bus='0' unit='0'/&gt;
    &lt;/disk&gt;</screen>
    <para>
     Remplacez <filename>/path/to/image/recent-linux.img</filename> par le chemin d&apos;accès à l&apos;image du système d&apos;exploitation.
    </para>
    <important>
     <para>
      Utilisez <command>sudo virsh edit</command> au lieu d&apos;un éditeur de texte. Si vous modifiez le fichier de configuration sous <filename>/etc/qemu</filename> avec un éditeur de texte, <systemitem class="library">libvirt</systemitem>libvirt risque de ne pas reconnaître la modification. En cas de divergence entre le contenu du fichier XML sous <filename>/etc/libvirt/qemu</filename> et le résultat de <command>sudo virsh dumpxml</command> <replaceable> vm-domain-name</replaceable>, votre machine virtuelle risque de ne pas fonctionner correctement.
     </para>
    </important>
   </step>
   <step>
    <para>
     Ajoutez l&apos;image Ceph RBD que vous avez précédemment créée en tant qu&apos;entrée &lt;disk&gt;.
    </para>
<screen>&lt;disk type='network' device='disk'&gt;
        &lt;source protocol='rbd' name='libvirt-pool/new-libvirt-image'&gt;
                &lt;host name='<replaceable>monitor-host</replaceable>' port='6789'/&gt;
        &lt;/source&gt;
        &lt;target dev='vda' bus='virtio'/&gt;
&lt;/disk&gt;</screen>
    <para>
     Remplacez <replaceable>monitor-host</replaceable> par le nom de votre hôte et remplacez le nom de réserve et/ou d&apos;image, si nécessaire. Vous pouvez ajouter plusieurs entrées &lt;host&gt; pour vos moniteurs Ceph. L&apos;attribut <literal>dev</literal> est le nom du périphérique logique qui apparaît sous le répertoire <filename>/dev</filename> de votre machine virtuelle. L&apos;attribut de bus facultatif indique le type de périphérique de disque à émuler. Les paramètres valides sont spécifiques au pilote (par exemple, ide, scsi, virtio, xen, usb ou sata).
    </para>
   </step>
   <step>
    <para>
     Enregistrez le fichier.
    </para>
   </step>
   <step>
    <para>
     Si l&apos;authentification de votre grappe Ceph est activée (ce qui est le cas par défaut), vous devez générer un secret. Dans l&apos;éditeur de votre choix, créez un fichier appelé <filename>secret.xml</filename> avec le contenu suivant :
    </para>
<screen>&lt;secret ephemeral='no' private='no'&gt;
        &lt;usage type='ceph'&gt;
                &lt;name&gt;client.libvirt secret&lt;/name&gt;
        &lt;/usage&gt;
&lt;/secret&gt;</screen>
   </step>
   <step>
    <para>
     Définissez le secret.
    </para>
<screen><prompt role="root"># </prompt>virsh secret-define --file secret.xml
&lt;uuid of secret is output here&gt;</screen>
   </step>
   <step>
    <para>
     Récupérez la clé <literal>client.libvirt</literal> et enregistrez la chaîne de clé dans un fichier.
    </para>
<screen><prompt>cephuser@adm &gt; </prompt>ceph auth get-key client.libvirt | sudo tee client.libvirt.key</screen>
   </step>
   <step>
    <para>
     Définissez l&apos;UUID du secret.
    </para>
<screen><prompt role="root"># </prompt>virsh secret-set-value --secret <replaceable>uuid of secret</replaceable> \
--base64 $(cat client.libvirt.key) &amp;&amp; rm client.libvirt.key secret.xml</screen>
    <para>
     Vous devez également définir le secret manuellement en ajoutant l&apos;entrée <literal>&lt;auth&gt;</literal> à l&apos;élément <literal>&lt;disk&gt;</literal> que vous avez saisi précédemment (en remplaçant la valeur uuid par le résultat de l&apos;exemple de ligne de commande ci-dessus).
    </para>
<screen><prompt role="root"># </prompt>virsh edit libvirt-virtual-machine</screen>
    <para>
     Ajoutez ensuite l&apos;élément <literal>&lt;auth&gt;&lt;/auth&gt;</literal> au fichier de configuration du domaine :
    </para>
<screen>...
&lt;/source&gt;
&lt;auth username='libvirt'&gt;
        &lt;secret type='ceph' uuid='9ec59067-fdbc-a6c0-03ff-df165c0587b8'/&gt;
&lt;/auth&gt;
&lt;target ...</screen>
    <note>
     <para>
      L&apos;ID à utiliser est <literal>libvirt</literal>, et non pas le nom Ceph <literal>client.libvirt</literal> généré à l&apos;étape 2 de la <xref linkend="ceph-libvirt-cfg-ceph"/>. Assurez-vous d&apos;utiliser le composant ID du nom Ceph que vous avez généré. Si, pour une raison quelconque, vous devez régénérer le secret, il vous faudra exécuter <command>sudo virsh secret-undefine</command> <replaceable>uuid</replaceable> avant de relancer <command>sudo virsh secret-set-value</command>.
     </para>
    </note>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="ceph-libvirt-summary">
  <title>Résumé</title>

  <para>
   Une fois que vous avez configuré la VM pour l&apos;utiliser avec Ceph, vous pouvez la démarrer. Pour vérifier que la machine virtuelle et Ceph communiquent, vous pouvez effectuer les procédures suivantes.
  </para>

  <procedure>
   <step>
    <para>
     Vérifiez si Ceph est en cours d&apos;exécution :
    </para>
<screen><prompt>cephuser@adm &gt; </prompt>ceph health</screen>
   </step>
   <step>
    <para>
     Vérifiez si la machine virtuelle est en cours d&apos;exécution :
    </para>
<screen><prompt role="root"># </prompt>virsh list</screen>
   </step>
   <step>
    <para>
     Vérifiez si la machine virtuelle communique avec Ceph. Remplacez <replaceable>vm-domain-name</replaceable> par le nom du domaine de votre machine virtuelle :
    </para>
<screen><prompt role="root"># </prompt>virsh qemu-monitor-command --hmp <replaceable>vm-domain-name</replaceable> 'info block'</screen>
   </step>
   <step>
    <para>
     Vérifiez si le périphérique de <literal>&amp;target dev=&apos;hdb&apos; bus=&apos;ide&apos;/&gt;</literal> figure sous <filename>/dev</filename> ou sous <filename>/proc/partitions</filename> :
    </para>
<screen><prompt>&gt; </prompt>ls /dev
<prompt>&gt; </prompt>cat /proc/partitions</screen>
   </step>
  </procedure>
 </sect1>
</chapter>
