<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="deploy_bootstrap.xml" version="5.0" xml:id="deploy-bootstrap">
 <info>
  <title>使用 <systemitem class="resource">ceph-salt</systemitem> 部署開機叢集</title>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:translation>yes</dm:translation>
   <dm:release>SES 7</dm:release>
  </dm:docmanager>
 </info>
 <para>
  本節將引導您完成部署基本 Ceph 叢集的程序。請仔細閱讀下面的小節，並依給定的順序執行所包含的指令。
 </para>
 <sect1 xml:id="deploy-cephadm-cephsalt">
  <title>安裝 <systemitem class="resource">ceph-salt</systemitem></title>

  <para>
   <systemitem class="resource">ceph-salt</systemitem> 提供了用於部署由 cephadm 管理的 Ceph 叢集的工具。<systemitem class="resource">ceph-salt</systemitem> 使用 Salt 基礎架構來執行作業系統管理 (例如，軟體更新或時間同步)，並為 Salt Minion 定義角色。
  </para>

  <para>
   在 Salt Master 上安裝 <package>ceph-salt</package> 套件：
  </para>

<screen><prompt>root@master # </prompt>zypper install ceph-salt</screen>

  <para>
   上面的指令將 <package>ceph-salt-formula</package> 安裝為相依項，它透過在 <filename>/etc/salt/master.d</filename> 目錄中插入額外的檔案修改了 Salt Master 組態。若要套用變更，請重新啟動 <systemitem class="daemon">salt-master.service</systemitem> 並同步 Salt 模組：
  </para>

<screen>
<prompt>root@master # </prompt>systemctl restart salt-master.service
<prompt>root@master # </prompt>salt \* saltutil.sync_all
</screen>
 </sect1>
 <sect1 xml:id="deploy-cephadm-configure">
  <title>設定叢集內容</title>

  <para>
   使用 <command>ceph-salt config</command> 指令可設定叢集的基本內容。
  </para>

  <important>
   <para>
    <filename>/etc/ceph/ceph.conf</filename> 檔案由 cephadm 管理，使用者<emphasis>不得</emphasis>編輯該檔案。應使用新的 <command>ceph config</command> 指令設定 Ceph 組態參數。如需詳細資訊，請參閱<xref linkend="cha-ceph-configuration-db"/>。
   </para>
  </important>

  <sect2 xml:id="deploy-cephadm-configure-shell">
   <title>使用 <systemitem class="resource">ceph-salt</systemitem> 外圍程序</title>
   <para>
    如果在不附帶任何路徑或子指令的情況下執行 <command> config</command>，您將進入互動 <systemitem class="resource">ceph-salt</systemitem>ceph-salt 外圍程序。如果您需要在一個批次中設定多個內容，並且不想輸入完整的指令語法，使用外圍程序會非常方便。
   </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config
<prompt>/&gt;</prompt> ls
o- / ............................................................... [...]
  o- ceph_cluster .................................................. [...]
  | o- minions .............................................. [no minions]
  | o- roles ....................................................... [...]
  |   o- admin .............................................. [no minions]
  |   o- bootstrap ........................................... [no minion]
  |   o- cephadm ............................................ [no minions]
  |   o- tuned ..................................................... [...]
  |     o- latency .......................................... [no minions]
  |     o- throughput ....................................... [no minions]
  o- cephadm_bootstrap ............................................. [...]
  | o- advanced .................................................... [...]
  | o- ceph_conf ................................................... [...]
  | o- ceph_image_path .................................. [ no image path]
  | o- dashboard ................................................... [...]
  | | o- force_password_update ................................. [enabled]
  | | o- password ................................................ [admin]
  | | o- ssl_certificate ....................................... [not set]
  | | o- ssl_certificate_key ................................... [not set]
  | | o- username ................................................ [admin]
  | o- mon_ip .................................................. [not set]
  o- containers .................................................... [...]
  | o- registries_conf ......................................... [enabled]
  | | o- registries .............................................. [empty]
  | o- registry_auth ............................................... [...]
  |   o- password .............................................. [not set]
  |   o- registry .............................................. [not set]
  |   o- username .............................................. [not set]
  o- ssh ............................................... [no key pair set]
  | o- private_key .................................. [no private key set]
  | o- public_key .................................... [no public key set]
  o- time_server ........................... [enabled, no server host set]
    o- external_servers .......................................... [empty]
    o- servers ................................................... [empty]
    o- subnet .................................................. [not set]
</screen>
   <para>
    從 <systemitem class="resource">ceph-salt</systemitem> 的 <command>ls</command> 指令輸出中您會看到，叢集組態以樹狀結構組織。若要在 <systemitem class="resource">ceph-salt</systemitem> 外圍程序中設定叢集的特定內容，可使用以下兩個選項：
   </para>
   <itemizedlist>
    <listitem>
     <para>
      從目前位置執行指令，並輸入內容的絕對路徑做為第一個引數：
     </para>
<screen>
<prompt>/&gt;</prompt> /cephadm_bootstrap/dashboard ls
o- dashboard ....................................................... [...]
  o- force_password_update ..................................... [enabled]
  o- password .................................................... [admin]
  o- ssl_certificate ........................................... [not set]
  o- ssl_certificate_key ....................................... [not set]
  o- username .................................................... [admin]
<prompt>/&gt; /cephadm_bootstrap/dashboard/username set ceph-admin</prompt>
Value set.
</screen>
    </listitem>
    <listitem>
     <para>
      變更為需要設定的內容的路徑，並執行指令：
     </para>
<screen>
<prompt>/&gt;</prompt> cd /cephadm_bootstrap/dashboard/
<prompt>/ceph_cluster/minions&gt;</prompt> ls
o- dashboard ....................................................... [...]
  o- force_password_update ..................................... [enabled]
  o- password .................................................... [admin]
  o- ssl_certificate ........................................... [not set]
  o- ssl_certificate_key ....................................... [not set]
  o- username ................................................[ceph-admin]
</screen>
    </listitem>
   </itemizedlist>
   <tip>
    <title>自動完成組態程式碼片段</title>
    <para>
     在 <systemitem class="resource">ceph-salt</systemitem> 外圍程序中，您可以使用類似於一般 Linux 外圍程序 (Bash) 自動完成的自動完成功能。它可以完成組態路徑、子指令或 Salt Minion 名稱。自動完成組態路徑時，可使用以下兩個選項：
    </para>
    <itemizedlist>
     <listitem>
      <para>
       若要讓外圍程序完成您目前位置的相對路徑，請按 TAB 鍵 <keycap function="tab"/> 兩次。
      </para>
     </listitem>
     <listitem>
      <para>
       若要讓外圍程序完成絕對路徑，請輸入 <keycap>/</keycap> 並按 TAB 鍵 <keycap function="tab"/> 兩次。
      </para>
     </listitem>
    </itemizedlist>
   </tip>
   <tip>
    <title>使用游標鍵導覽</title>
    <para>
     如果從 <command> 外圍程序輸入 </command>cd<systemitem class="resource">ceph-salt</systemitem> 而不附帶任何路徑，則該指令將列印叢集組態的樹狀結構，其中目前路徑對應的行處於使用中狀態。您可以使用向上和向下游標鍵在各行之間導覽。按一下 <keycap function="enter"/> 進行確認後，組態路徑將變更為最後一個使用中路徑。
    </para>
   </tip>
   <important>
    <title>基本規則</title>
    <para>
     為了保持文件的一致性，我們將使用單一指令語法，而不輸入 <systemitem class="resource">ceph-salt</systemitem> 外圍程序。例如，您可以使用以下指令列出叢集組態樹：
    </para>
<screen><prompt>root@master # </prompt>ceph-salt config ls</screen>
   </important>
  </sect2>

  <sect2 xml:id="deploy-cephadm-configure-minions">
   <title>新增 Salt Minion</title>
   <para>
    將我們在<xref linkend="deploy-salt"/>中部署並接受的所有或部分 Salt Minion 包含到 Ceph 叢集組態中。您可以透過其全名指定 Salt Minion，也可以使用 glob 運算式「*」和「？」一次包含多個 Salt Minion。在 <literal>/ceph_cluster/minions</literal> 路徑下使用 <command>add</command> 子指令。以下指令包含所有已接受的 Salt Minion：
   </para>
<screen><prompt>root@master # </prompt>ceph-salt config /ceph_cluster/minions add '*'</screen>
   <para>
    確認是否新增了指定的 Salt Minion：
   </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config /ceph_cluster/minions ls
o- minions ................................................. [Minions: 5]
  o- ses-master.example.com .................................. [no roles]
  o- ses-min1.example.com .................................... [no roles]
  o- ses-min2.example.com .................................... [no roles]
  o- ses-min3.example.com .................................... [no roles]
  o- ses-min4.example.com .................................... [no roles]
</screen>
  </sect2>

  <sect2 xml:id="deploy-cephadm-configure-cephadm">
   <title>指定由 cephadm 管理的 Salt Minion</title>
   <para>
    指定哪些節點將屬於 Ceph 叢集並由 cephadm 管理。包含將執行 Ceph 服務的所有節點以及管理節點：
   </para>
<screen><prompt>root@master # </prompt>ceph-salt config /ceph_cluster/roles/cephadm add '*'</screen>
  </sect2>

  <sect2 xml:id="deploy-cephadm-configure-admin">
   <title>指定管理節點</title>
   <para>
    管理節點是安裝 <filename>ceph.conf</filename> 組態檔案和 Ceph 管理金鑰圈的節點。您通常會在管理節點上執行與 Ceph 相關的指令。
   </para>
   <tip>
    <title>Salt Master 和管理節點位於同一節點</title>
    <para>
     在所有或大多數主機都屬於 SUSE Enterprise Storage 的同質環境中，建議您將管理節點與 Salt Master 置於同一主機。
    </para>
    <para>
     而對於一個 Salt 基礎架構代管多個叢集 (例如 SUSE Enterprise Storage 和 SUSE Manager) 的異質環境，請<emphasis>勿</emphasis>將管理節點與 Salt Master 置於同一主機。
    </para>
   </tip>
   <para>
    若要指定管理節點，請執行以下指令：
   </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config /ceph_cluster/roles/admin add ses-master.example.com
1 minion added.
<prompt>root@master # </prompt>ceph-salt config /ceph_cluster/roles/admin ls
o- admin ................................................... [Minions: 1]
  o- ses-master.example.com ...................... [Other roles: cephadm]
</screen>
   <tip>
    <title>在多個節點上安裝 <filename>ceph.conf</filename> 和管理金鑰圈</title>
    <para>
     如果是部署所需，您可以在多個節點上安裝 Ceph 組態檔案和管理金鑰圈。出於安全原因，請避免將其安裝在叢集的所有節點上。
    </para>
   </tip>
  </sect2>

  <sect2 xml:id="deploy-cephadm-configure-mon">
   <title>指定第一個 MON/MGR 節點</title>
   <para>
    您需要指定將叢集開機的叢集 Salt Minion。此 Minion 將成為第一個執行 Ceph 監控程式和 Ceph 管理員服務的 Minion。
   </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config /ceph_cluster/roles/bootstrap set ses-min1.example.com
Value set.
<prompt>root@master # </prompt>ceph-salt config /ceph_cluster/roles/bootstrap ls
o- bootstrap ..................................... [ses-min1.example.com]
</screen>
   <para>
    此外，您還需要在公用網路上指定開機 MON 的 IP 位址，以確定 <option>public_network</option> 參數設定正確，例如：
   </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/mon_ip set 192.168.10.20
</screen>
  </sect2>

  <sect2 xml:id="deploy-cephadm-tuned-profiles">
   <title>指定調整的設定檔</title>
   <para>
    您需要指定叢集的哪些 Minion 具有主動調整的設定檔。為此，請使用以下指令明確新增這些角色：
   </para>
   <note>
    <para>
     一個 Minion 不能同時擁有 <literal>latency</literal> 和 <literal>throughput</literal> 角色。
    </para>
   </note>
<screen>
<prompt>root@master # </prompt>ceph-salt config /ceph_cluster/roles/tuned/latency add ses-min1.example.com
Adding ses-min1.example.com...
1 minion added.
<prompt>root@master # </prompt>ceph-salt config /ceph_cluster/roles/tuned/throughput add ses-min2.example.com
Adding ses-min2.example.com...
1 minion added.
</screen>
  </sect2>

  <sect2 xml:id="deploy-cephadm-configure-ssh">
   <title>產生 SSH 金鑰組</title>
   <para>
    cephadm 使用 SSH 通訊協定與叢集節點通訊。將自動建立名為 <literal>cephadm</literal> 的使用者帳戶並用於 SSH 通訊。
   </para>
   <para>
    您需要產生 SSH 金鑰組的私人和公用部分：
   </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config /ssh generate
Key pair generated.
<prompt>root@master # </prompt>ceph-salt config /ssh ls
o- ssh .................................................. [Key Pair set]
  o- private_key ..... [53:b1:eb:65:d2:3a:ff:51:6c:e2:1b:ca:84:8e:0e:83]
  o- public_key ...... [53:b1:eb:65:d2:3a:ff:51:6c:e2:1b:ca:84:8e:0e:83]
</screen>
  </sect2>

  <sect2 xml:id="deploy-cephadm-configure-ntp">
   <title>設定時間伺服器</title>
   <para>
    所有叢集節點都需要與可靠的時間來源進行時間同步。有以下幾種方案可以實現時間同步：
   </para>
   <itemizedlist>
    <listitem>
     <para>
      如果所有叢集節點都已設定為使用所選 NTP 服務同步其時間，請完全停用時間伺服器處理：
     </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config /time_server disable
</screen>
    </listitem>
    <listitem>
     <para>
      如果您的站台已有單一時間來源，請指定時間來源的主機名稱：
     </para>
<screen>
 <prompt>root@master # </prompt>ceph-salt config /time_server/servers add <replaceable>time-server.example.com</replaceable>
</screen>
    </listitem>
    <listitem>
     <para>
      另外，<systemitem class="resource">ceph-salt</systemitem> 可以設定一個 Salt Minion 來充當叢集其餘 Minion 的時間伺服器。有時，它被稱為「內部時間伺服器」。在此方案中，<systemitem class="resource">ceph-salt</systemitem> 將設定內部時間伺服器 (應為其中一個 Salt Minion) 以使其時間與外部時間伺服器 (例如 <literal>pool.ntp.org</literal>) 同步，並將所有其他 Minion 設定為從內部時間伺服器獲取時間。可透過以下指令來實現：
     </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config /time_server/servers add ses-master.example.com
<prompt>root@master # </prompt>ceph-salt config /time_server/external_servers add pool.ntp.org
</screen>
     <para>
      <option>/time_server/subnet</option> 選項指定允許 NTP 用戶端透過其存取 NTP 伺服器的子網路。當您指定 <option>/time_server/servers</option> 時，會自動設定該選項。如果需要變更該選項或手動指定，請執行：
     </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config /time_server/subnet set 10.20.6.0/24
</screen>
    </listitem>
   </itemizedlist>
   <para>
    檢查時間伺服器設定：
   </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config /time_server ls
o- time_server ................................................ [enabled]
  o- external_servers ............................................... [1]
  | o- pool.ntp.org ............................................... [...]
  o- servers ........................................................ [1]
  | o- ses-master.example.com ..................................... [...]
  o- subnet .............................................. [10.20.6.0/24]
</screen>
   <para>
    如需設定時間同步的詳細資訊，請參閱 <link xlink:href="https://documentation.suse.com/sles/15-SP3/html/SLES-all/cha-ntp.html#sec-ntp-yast"/>。
   </para>
  </sect2>

  <sect2 xml:id="deploy-cephadm-configure-dashboardlogin">
   <title>設定 Ceph Dashboard 登入身分證明</title>
   <para>
    部署基本叢集後便可使用 Ceph Dashboard。若要存取 Ceph Dashboard，您需要設定有效的使用者名稱和密碼，例如：
   </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/dashboard/username set admin
<prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/dashboard/password set <replaceable>PWD</replaceable>
</screen>
   <tip>
    <title>強制密碼更新</title>
    <para>
     依預設，系統將強制第一位儀表板使用者在首次登入儀表板時變更其密碼。若要停用此功能，請執行以下指令：
    </para>
<screen><prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/dashboard/force_password_update disable</screen>
   </tip>
  </sect2>

  <sect2 xml:id="deploy-cephadm-configure-registry">
   <title>使用容器登錄</title>
   <para>
    Ceph 叢集需要能夠存取容器登錄，以便能下載和部署容器化 Ceph 服務。可以使用以下兩種方式來存取登錄：
   </para>
   <itemizedlist>
    <listitem>
     <para>
      如果您的叢集可以 (直接或透過代理) 存取 <literal>registry.suse.com</literal> 上的預設登錄，您可以將 <systemitem class="resource">ceph-salt</systemitem> 直接指向此 URL，而無需建立本地登錄。繼續執行<xref linkend="deploy-cephadm-configure-imagepath"/>中的步驟。
     </para>
    </listitem>
    <listitem>
     <para>
      如果叢集無法存取預設登錄 (例如，若為實體隔離部署)，您需要設定本地容器登錄。建立並設定本地登錄後，需要將 <systemitem class="resource">ceph-salt</systemitem> 指向它。
     </para>
    </listitem>
   </itemizedlist>
   <sect3 xml:id="updating-ceph-local-registry">
    <title>建立並設定本地登錄 (選擇性)</title>
    <important>
     <para>
      建立本地登錄的方法非常多。本節中的說明是有關建立安全和不安全登錄的範例。如需執行容器影像登錄的一般資訊，請參閱 <link xlink:href="https://documentation.suse.com/sles/15-SP3/single-html/SLES-container/#sec-docker-registry-installation"/>。
     </para>
    </important>
    <tip>
     <title>放置和連接埠的使用</title>
     <para>
      在叢集中的所有節點都可存取的機器上部署登錄。建議在管理節點上部署。登錄預設會監聽連接埠 5000。
     </para>
     <para>
      在登錄節點上，使用以下指令確定連接埠未被佔用：
     </para>
<screen>ss -tulpn | grep :5000</screen>
     <para>
      如果其他程序 (例如 <literal>iscsi-tcmu</literal>) 已在監聽連接埠 5000，則確定可用於對應至登錄容器中的連接埠 5000 的另一個未被佔用的連接埠。
     </para>
    </tip>
    <procedure>
     <title>建立本地登錄</title>
     <step>
      <para>
       確認 <package>Containers Module</package> 延伸已啟用。
      </para>
<screen>
<prompt>&gt; </prompt>SUSEConnect --list-extensions | grep -A2 "Containers Module"
Containers Module 15 SP3 x86_64 (Activated)
</screen>
     </step>
     <step>
      <para>
       確認已安裝以下套件：<package>apache2-utils</package> (如果啟用了安全登錄)、<package>cni</package>、<package>cni-plugins</package>、<package>podman</package>、<package>podman-cni-config</package> 和 <package>skopeo</package>。
      </para>
     </step>
     <step>
      <para>
       收集以下資訊：
      </para>
      <itemizedlist>
       <listitem>
        <para>
         登錄主機的完整網域名稱 (<option>REG_HOST_FQDN</option>)。
        </para>
       </listitem>
       <listitem>
        <para>
         用於對應至登錄容器連接埠 5000 的可用連接埠號碼 (<option>REG_HOST_PORT</option>)。
        </para>
       </listitem>
       <listitem>
        <para>
         登錄是否安全 (<option>insecure=[true|false]</option>)。
        </para>
       </listitem>
      </itemizedlist>
     </step>
     <step>
      <para>
       若要啟動不安全的登錄 (未經過 SSL 加密)，請執行以下步驟：
      </para>
      <substeps>
       <step>
        <para>
         為不安全的登錄設定 <systemitem class="resource">ceph-salt</systemitem>：
        </para>
<screen>
<prompt>cephuser@adm &gt; </prompt>ceph-salt config containers/registries_conf enable
<prompt>cephuser@adm &gt; </prompt>ceph-salt config containers/registries_conf/registries \
 add prefix=<option>REG_HOST_FQDN</option> insecure=true \
 location=<option>REG_HOST_PORT</option>:5000
</screen>
       </step>
       <step>
        <para>
         啟動不安全的登錄，具體做法是建立必要的目錄 (例如 <filename>/var/lib/registry</filename>) 並使用 <command>podman</command> 指令啟動登錄：
        </para>
<screen>
<prompt role="root"># </prompt>mkdir -p /var/lib/registry
<prompt role="root"># </prompt>podman run --privileged -d --name registry \
 -p <option>REG_HOST_PORT</option>:5000 -v /var/lib/registry:/var/lib/registry \
 --restart=always registry:2
</screen>
       </step>
       <step>
        <para>
         若要使登錄在重新開機後啟動，請為其建立並啟用 <systemitem class="daemon">systemd</systemitem> 單位檔案：
        </para>
<screen>
<prompt>&gt; </prompt><command>sudo</command> podman generate systemd --files --name registry
<prompt>&gt; </prompt><command>sudo</command> mv container-registry.service /etc/systemd/system/
<prompt>&gt; </prompt><command>sudo</command> systemctl enable container-registry.service
</screen>
       </step>
      </substeps>
     </step>
     <step>
      <para>
       若要啟動安全登錄，請執行以下步驟：
      </para>
      <substeps>
       <step>
        <para>
         建立必要目錄：
        </para>
<screen><prompt role="root"># </prompt>mkdir -p /var/lib/registry/{auth,certs}</screen>
       </step>
       <step>
        <para>
         產生 SSL 證書：
        </para>
<screen>
<prompt role="root"># </prompt>openssl req -newkey rsa:4096 -nodes -sha256 \
 -keyout /var/lib/registry/certs/domain.key -x509 -days 365 \
 -out /var/lib/registry/certs/domain.crt
</screen>
        <note>
         <para>
          將 <literal>Cn=[value]</literal> 的值設定為主機的完整網域名稱 ([<option>REG_HOST_FQDN</option>])。
         </para>
        </note>
       </step>
       <step>
        <para>
         將該證書複製到叢集的所有節點上並重新整理證書快取：
        </para>
<screen>
<prompt role="root"># </prompt>salt-cp '*' /var/lib/registry/certs/domain.crt \
 /etc/pki/trust/anchors/
<prompt role="root"># </prompt>salt '*' cmd.shell "update-ca-certificates"
</screen>
       </step>
       <step>
        <para>
         產生用於向登錄進行驗證的使用者名稱和密碼組合：
        </para>
<screen>
<prompt role="root"># </prompt>htpasswd2 -bBc /var/lib/registry/auth/htpasswd \
 <option>REG_USERNAME</option> <option>REG_PASSWORD</option>
</screen>
       </step>
       <step>
        <para>
         啟動安全登錄。請使用 <option>REGISTRY_STORAGE_DELETE_ENABLED=true</option> 旗標，以便之後能使用 <command>skopeo delete</command> 指令刪除影像。
        </para>
<screen>
podman run --name myregistry -p <option>REG_HOST_PORT</option>:5000 \
 -v /var/lib/registry:/var/lib/registry \
 -v /var/lib/registry/auth:/auth:z \
 -e "REGISTRY_AUTH=htpasswd" \
 -e "REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm" \
 -e REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd \
 -v /var/lib/registry/certs:/certs:z \
 -e "REGISTRY_HTTP_TLS_CERTIFICATE=/certs/domain.crt" \
 -e "REGISTRY_HTTP_TLS_KEY=/certs/domain.key" \
 -e REGISTRY_STORAGE_DELETE_ENABLED=true \
 -e REGISTRY_COMPATIBILITY_SCHEMA1_ENABLED=true -d registry:2
</screen>
       </step>
       <step>
        <para>
         測試對登錄的安全存取：
        </para>
<screen>
<prompt>&gt; </prompt>curl https://<option>REG_HOST_FQDN</option>:<option>REG_HOST_PORT</option>/v2/_catalog \
 -u <option>REG_USERNAME</option>:<option>REG_PASSWORD</option>
</screen>
       </step>
      </substeps>
     </step>
     <step>
      <para>
       建立本地登錄後，需要將 <literal>registry.suse.com</literal> 上官方 SUSE 登錄中的容器影像同步到本地登錄。可以使用 <package>skopeo</package> 套件中的 <command>skopeo sync</command> 指令來實現此目的。如需詳細資訊，請參閱手冊頁 (<command>man 1 skopeo-sync</command>)。請考量以下幾個範例：
      </para>
      <example>
       <title>檢視清單檔案</title>
<screen>
skopeo inspect docker://registry.suse.com/ses/7.1/ceph/ceph | jq .RepoTags
skopeo inspect docker://registry.suse.com/ses/7.1/ceph/grafana | jq .RepoTags
skopeo inspect docker://registry.suse.com/ses/7.1/ceph/prometheus-server:2.32.1 | jq .RepoTags
skopeo inspect docker://registry.suse.com/ses/7.1/ceph/prometheus-node-exporter:1.1.2 | jq .RepoTags
skopeo inspect docker://registry.suse.com/ses/7.1/ceph/prometheus-alertmanager:0.21.0 | jq .RepoTags
</screen>
      </example>
      <example>
       <title>同步到目錄</title>
       <para>
        同步所有 Ceph 影像：
       </para>
<screen>skopeo sync --src docker --dest dir registry.suse.com/ses/7.1/ceph/ceph /root/images/</screen>
       <para>
        僅同步最新的影像：
       </para>
<screen>skopeo sync --src docker --dest dir registry.suse.com/ses/7.1/ceph/ceph:latest /root/images/</screen>
      </example>
      <example>
       <title>同步 Grafana 影像：</title>
<screen>skopeo sync --src docker --dest dir registry.suse.com/ses/7.1/ceph/grafana /root/images/</screen>
       <para>
        僅同步最新的 Grafana 影像：
       </para>
<screen>skopeo sync --src docker --dest dir registry.suse.com/ses/7.1/ceph/grafana:latest /root/images/</screen>
      </example>
      <example>
       <title>同步最新的 Prometheus 影像</title>
<screen>
skopeo sync --src docker --dest dir registry.suse.com/ses/7.1/ceph/prometheus-server:2.32.1 /root/images/
skopeo sync --src docker --dest dir registry.suse.com/ses/7.1/ceph/prometheus-node-exporter:1.1.2 /root/images/
skopeo sync --src docker --dest dir registry.suse.com/ses/7.1/ceph/prometheus-alertmanager:0.21.0 /root/images/
</screen>
      </example>
     </step>
    </procedure>
    <procedure>
     <title>設定本地登錄和存取身分證明</title>
     <step>
      <para>
       設定本地登錄的 URL：
      </para>
<screen><prompt>cephuser@adm &gt; </prompt>ceph-salt config /containers/registry_auth/registry set <replaceable>REG_HOST_URL</replaceable></screen>
     </step>
     <step>
      <para>
       設定使用者名稱和密碼以存取本地登錄：
      </para>
<screen><prompt>cephuser@adm &gt; </prompt>ceph-salt config /containers/registry_auth/username set <replaceable>REG_USERNAME</replaceable></screen>
<screen><prompt>cephuser@adm &gt; </prompt>ceph-salt config /containers/registry_auth/password set <replaceable>REG_PASSWORD</replaceable></screen>
     </step>
    </procedure>
    <tip>
     <title>登錄快取</title>
     <para>
      若要避免在出現新的更新容器時重新同步本地登錄，您可以設定<emphasis>登錄快取</emphasis>。
     </para>
    </tip>
   </sect3>
   <sect3 xml:id="deploy-cephadm-configure-imagepath">
    <title>設定容器影像的路徑</title>
    <important>
     <para>
      本節可協助您設定開機叢集 (部署的第一個 Ceph 監控程式和 Ceph 管理員對) 的容器影像的路徑。該路徑不適用於附加服務 (如監控堆疊) 的容器影像。
     </para>
    </important>
    <tip>
     <title>設定 HTTPS 代理</title>
     <para>
      如果您需要使用代理來與容器登錄伺服器通訊，請在所有叢集節點上執行以下組態步驟：
     </para>
     <procedure>
      <step>
       <para>
        複製容器的組態檔案：
       </para>
<screen><prompt>&gt; </prompt><command>sudo</command> cp /usr/share/containers/containers.conf /etc/containers/containers.conf</screen>
      </step>
      <step>
       <para>
        編輯新複製的檔案，將 <option>http_proxy</option> 設定新增至檔案的 <literal>[engine]</literal> 區段，例如：
       </para>
<screen><prompt>&gt; </prompt>cat /etc/containers/containers.conf
 [engine]
 http_proxy=proxy.example.com
 [...]
 </screen>
      </step>
     </procedure>
    </tip>
    <para>
     cephadm 需要知道容器影像的有效 URI 路徑。執行以下指令以驗證預設設定
    </para>
<screen><prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/ceph_image_path ls</screen>
    <para>
     如果您不需要備用或本地登錄，請指定預設的 SUSE 容器登錄：
    </para>
<screen><prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/ceph_image_path set registry.suse.com/ses/7.1/ceph/ceph</screen>
    <para>
     如果您的部署需要特定路徑 (例如本地登錄的路徑)，請依如下所示進行設定：
    </para>
<screen><prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/ceph_image_path set <replaceable>LOCAL_REGISTRY_PATH</replaceable></screen>
   </sect3>
  </sect2>

  <sect2 xml:id="deploy-cephadm-inflight-encryption">
   <title>啟用資料傳輸中加密 (msgr2)</title>
   <para>
    Messenger v2 通訊協定 (MSGR2) 是 Ceph 的線上傳輸通訊協定。它提供了一種可對正在透過網路傳輸的所有資料進行加密的安全模式，封裝了驗證封包內容，並支援未來整合新的驗證模式 (例如 Kerberos)。
   </para>
   <important>
    <para>
     Linux 核心 Ceph 用戶端 (例如 CephFS 和 RADOS 區塊裝置) 目前不支援 msgr2。
    </para>
   </important>
   <para>
    Ceph 精靈可以結合到多個連接埠，以便讓舊 Ceph 用戶端和支援 v2 的新用戶端能夠連接至同一叢集。依預設，針對新的 v2 通訊協定，MON 現在會結合到 IANA 指定的新連接埠 3300 (CE4h 或 0xCE4)，而針對舊版 v1 通訊協定，則會結合到舊的預設連接埠 6789。
   </para>
   <para>
    v2 通訊協定 (MSGR2) 支援以下兩種連接模式：
   </para>
   <variablelist>
    <varlistentry>
     <term>crc 模式</term>
     <listitem>
      <para>
       建立連接時進行強初始驗證和 CRC32C 完整性檢查。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>secure 模式</term>
     <listitem>
      <para>
       建立連接時進行強初始驗證，並對所有驗證後流量進行完全加密，包括加密完整性檢查。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    對於大多數連接，有一些選項可以控制使用哪種模式：
   </para>
   <variablelist>
    <varlistentry>
     <term>ms_cluster_mode</term>
     <listitem>
      <para>
       用於 Ceph 精靈之間的叢集內通訊的連接模式 (或允許的模式)。如果列出了多種模式，則偏好最先列出的模式。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ms_service_mode</term>
     <listitem>
      <para>
       連接至叢集時允許用戶端使用的模式清單。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ms_client_mode</term>
     <listitem>
      <para>
       與 Ceph 叢集通訊時，供用戶端使用 (或允許) 的連接模式清單，依偏好設定排序。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    有一組專用於監控程式的平行選項集，可讓管理員設定與監控程式通訊的不同 (通常更安全) 要求。
   </para>
   <variablelist>
    <varlistentry>
     <term>ms_mon_cluster_mode</term>
     <listitem>
      <para>
       在監控程式之間使用的連接模式 (或允許的模式)。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ms_mon_service_mode</term>
     <listitem>
      <para>
       連接至監控程式時，供用戶端或其他 Ceph 精靈使用的允許模式清單。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>ms_mon_client_mode</term>
     <listitem>
      <para>
       連接至監控程式時，供用戶端或非監控程式精靈使用的連接模式的清單，依偏好設定排序。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    若要在部署期間啟用 MSGR2 加密模式，您需要在執行 <systemitem class="resource">ceph-salt</systemitem> apply<command> 之前向 </command>ceph-salt 組態新增一些組態選項。
   </para>
   <para>
    若要使用 <literal>secure</literal> 模式，請執行以下指令。
   </para>
   <para>
    向 <filename> 組態工具中的 </filename>ceph_conf<systemitem class="resource">ceph-salt</systemitem> 新增全域區段。
   </para>
<screen><prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/ceph_conf add global</screen>
   <para>
    設定下列選項：
   </para>
<screen><prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/ceph_conf/global set ms_cluster_mode "secure crc"
<prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/ceph_conf/global set ms_service_mode "secure crc"
<prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/ceph_conf/global set ms_client_mode "secure crc"
</screen>
   <note>
    <para>
     確定 <literal>secure</literal> 先於 <literal>crc</literal>。
    </para>
   </note>
   <para>
    若要<emphasis>強制使用</emphasis> <literal>secure</literal> 模式，請執行以下指令：
   </para>
<screen><prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/ceph_conf/global set ms_cluster_mode secure
<prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/ceph_conf/global set ms_service_mode secure
<prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/ceph_conf/global set ms_client_mode secure
</screen>
   <tip xml:id="update-inflight-encryption-settings">
    <title>更新設定</title>
    <para>
     如果您要變更上述任何設定，請在監控程式組態儲存中設定組態變更。可使用 <command>ceph config set</command> 指令實現。
    </para>
<screen><prompt>root@master # </prompt>ceph config set global <replaceable>CONNECTION_OPTION</replaceable> <replaceable>CONNECTION_MODE</replaceable> [--force]</screen>
    <para>
     例如：
    </para>
<screen><prompt>root@master # </prompt>ceph config set global ms_cluster_mode "secure crc"</screen>
    <para>
     如果要檢查目前值 (包括預設值)，請執行以下指令：
    </para>
<screen><prompt>root@master # </prompt>ceph config get <replaceable>CEPH_COMPONENT</replaceable> <replaceable>CONNECTION_OPTION</replaceable></screen>
    <para>
     例如，若要獲取 OSD 的 <literal>ms_cluster_mode</literal>，請執行：
    </para>
<screen><prompt>root@master # </prompt>ceph config get osd ms_cluster_mode</screen>
   </tip>
  </sect2>

  <sect2 xml:id="deploy-cephadm-enable-network">
   <title>設定叢集網路</title>
   <para>
    (選擇性) 如果執行的是獨立的叢集網路，則可能需要設定叢集網路 IP 位址並後接斜線符號及子網路遮罩部分，例如 <literal>192.168.10.22/24</literal>。
   </para>
   <para>
    執行以下指令可啟用 <literal>cluster_network</literal>：
   </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/ceph_conf add global
<prompt>root@master # </prompt>ceph-salt config /cephadm_bootstrap/ceph_conf/global set cluster_network <replaceable>NETWORK_ADDR</replaceable>
</screen>
  </sect2>

  <sect2 xml:id="deploy-cephadm-configure-verify">
   <title>確認叢集組態</title>
   <para>
    最低叢集組態已完成。請檢查是否存在明顯錯誤：
   </para>
<screen>
<prompt>root@master # </prompt>ceph-salt config ls
o- / ............................................................... [...]
  o- ceph_cluster .................................................. [...]
  | o- minions .............................................. [Minions: 5]
  | | o- ses-master.example.com .................................. [admin]
  | | o- ses-min1.example.com ......................... [bootstrap, admin]
  | | o- ses-min2.example.com ................................. [no roles]
  | | o- ses-min3.example.com ................................. [no roles]
  | | o- ses-min4.example.com ................................. [no roles]
  | o- roles ....................................................... [...]
  |   o- admin .............................................. [Minions: 2]
  |   | o- ses-master.example.com ....................... [no other roles]
  |   | o- ses-min1.example.com ................. [other roles: bootstrap]
  |   o- bootstrap ................................ [ses-min1.example.com]
  |   o- cephadm ............................................ [Minions: 5]
  |   o- tuned ..................................................... [...]
  |     o- latency .......................................... [no minions]
  |     o- throughput ....................................... [no minions]
  o- cephadm_bootstrap ............................................. [...]
  | o- advanced .................................................... [...]
  | o- ceph_conf ................................................... [...]
  | o- ceph_image_path .............. [registry.suse.com/ses/7.1/ceph/ceph]
  | o- dashboard ................................................... [...]
  |   o- force_password_update ................................. [enabled]
  |   o- password ................................... [randomly generated]
  |   o- username ................................................ [admin]
  | o- mon_ip ............................................ [192.168.10.20]
  o- containers .................................................... [...]
  | o- registries_conf ......................................... [enabled]
  | | o- registries .............................................. [empty]
  | o- registry_auth ............................................... [...]
  |   o- password .............................................. [not set]
  |   o- registry .............................................. [not set]
  |   o- username .............................................. [not set]
  o- ssh .................................................. [Key Pair set]
  | o- private_key ..... [53:b1:eb:65:d2:3a:ff:51:6c:e2:1b:ca:84:8e:0e:83]
  | o- public_key ...... [53:b1:eb:65:d2:3a:ff:51:6c:e2:1b:ca:84:8e:0e:83]
  o- time_server ............................................... [enabled]
    o- external_servers .............................................. [1]
    | o- 0.pt.pool.ntp.org ......................................... [...]
    o- servers ....................................................... [1]
    | o- ses-master.example.com .................................... [...]
    o- subnet ............................................. [10.20.6.0/24]
</screen>
   <tip>
    <title>叢集組態的狀態</title>
    <para>
     您可以透過執行以下指令檢查叢集的組態是否有效：
    </para>
<screen>
<prompt>root@master # </prompt>ceph-salt status
cluster: 5 minions, 0 hosts managed by cephadm
config: OK
</screen>
   </tip>
  </sect2>

  <sect2 xml:id="deploy-cephadm-configure-export">
   <title>輸出叢集組態</title>
   <para>
    在設定了基本叢集並且確認其組態有效之後，最好將其組態輸出至檔案中：
   </para>
<screen><prompt>root@master # </prompt>ceph-salt export &gt; cluster.json</screen>
   <warning>
    <para>
     <command>ceph-salt export</command> 的輸出中包含 SSH 私密金鑰。如果您擔心安全問題，請不要在未採取適當預防措施的情況下執行此指令。
    </para>
   </warning>
   <para>
    如果叢集組態損毀並需要復原到備份狀態，請執行：
   </para>
<screen><prompt>root@master # </prompt>ceph-salt import cluster.json</screen>
  </sect2>
 </sect1>
 <sect1 xml:id="deploy-cephadm-deploy">
  <title>更新節點並將最小叢集開機</title>

  <para>
   部署叢集之前，請更新所有節點上的所有軟體套件：
  </para>

<screen><prompt>root@master # </prompt>ceph-salt update</screen>

  <para>
   如果節點在更新期間報告 <literal>Reboot is needed</literal>，則表示重要的作業系統套件 (例如核心) 已更新至更新版本，您需要將節點重新開機才能套用變更。
  </para>

  <para>
   若要將所有需要重新開機的節點重新開機，請附加 <option>--reboot</option> 選項
  </para>

<screen><prompt>root@master # </prompt>ceph-salt update --reboot</screen>

  <para>
   或者在單獨的步驟中將這些節點重新開機：
  </para>

<screen><prompt>root@master # </prompt>ceph-salt reboot</screen>

  <important>
   <para>
    永遠不會透過 <command>ceph-salt update --reboot</command> 或 <command>ceph-salt reboot</command> 指令將 Salt Master 重新開機。如果 Salt Master 需要重新開機，您需要手動進行重新開機。
   </para>
  </important>

  <para>
   更新節點後，請將最小叢集開機：
  </para>

<screen><prompt>root@master # </prompt>ceph-salt apply</screen>

  <note>
   <para>
    開機完成後，叢集將擁有一個 Ceph 監控程式和一個 Ceph 管理員。
   </para>
  </note>

  <para>
   以上指令將開啟一個互動使用者介面，其中會顯示每個 Minion 的目前進度。
  </para>

  <figure>
   <title>部署最小叢集</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="cephadm_deploy.png" width="75%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="cephadm_deploy.png" width="75%"/>
    </imageobject>
   </mediaobject>
  </figure>

  <tip>
   <title>非互動模式</title>
   <para>
    如果您需要從程序檔套用組態，還有一種非互動的部署模式。此模式在從遠端機器部署叢集時也很有用，因為透過網路不斷更新螢幕上的進度資訊可能會對使用者造成干擾：
   </para>
<screen><prompt>root@master # </prompt>ceph-salt apply --non-interactive</screen>
  </tip>
 </sect1>
 <sect1 xml:id="deploy-min-cluster-final-steps">
  <title>檢視最後的步驟</title>

  <para>
   在 <command>ceph-salt apply</command> 指令完成後，您便應該會擁有一個 Ceph 監控程式和一個 Ceph 管理員。您應該能夠在任何以 <literal>root</literal> 身分或使用 <literal>sudo</literal> 的 <literal>cephadm</literal> 使用者身分被授予 <literal>admin</literal> 角色的 Minion 上成功執行 <command>ceph status</command> 指令。
  </para>

  <para>
   後續步驟包括使用 cephadm 部署額外的 Ceph 監控程式、Ceph 管理員、OSD、監控堆疊和閘道。
  </para>

  <para>
   繼續之前，請檢視新叢集的網路設定。此時，已依據在 <literal>ceph-salt</literal> 組態中針對 <literal>/cephadm_bootstrap/mon_ip</literal> 輸入的值填入了 <literal>public_network</literal> 設定。不過，此設定僅適用於 Ceph 監控程式。您可以使用以下指令檢視此設定：
  </para>

<screen><prompt>root@master # </prompt>ceph config get mon public_network</screen>

  <para>
   這是 Ceph 正常工作所需的最低設定，但還是建議您將此 <literal>public_network</literal> 設定為 <literal>global</literal>，這表示它將套用於所有類型的 Ceph 精靈，而不僅套用於 MON：
  </para>

<screen><prompt>root@master # </prompt>ceph config set global public_network "$(ceph config get mon public_network)"</screen>

  <note>
   <para>
    此步驟不是必需的。但如果不使用此設定，Ceph OSD 和其他精靈 (Ceph 監控程式除外) 將監聽<emphasis>所有位址</emphasis>。
   </para>
   <para>
    如果您希望在各 OSD 之間使用完全獨立的網路進行通訊，請執行以下指令：
   </para>
<screen><prompt>root@master # </prompt>ceph config set global cluster_network "<replaceable>cluster_network_in_cidr_notation</replaceable>"</screen>
   <para>
    執行此指令將確保您部署中所建立的 OSD 從一開始就使用預期的叢集網路。
   </para>
  </note>

  <para>
   如果您的叢集設定為具有密集節點 (每個主機有超過 62 個 OSD)，請確保為 Ceph OSD 指定足夠的連接埠。預設範圍 (6800-7300) 目前允許每個主機有不超過 62 個 OSD。對於具有密集節點的叢集，請將設定 <literal>ms_bind_port_max</literal> 調整到適當的值。每個 OSD 將使用 8 個額外的連接埠。例如，如果一部主機設定為執行 96 個 OSD，則需要 768 個連接埠。透過執行以下指令，應將 <literal>ms_bind_port_max</literal> 至少設定為 7568：
  </para>

<screen><prompt>root@master # </prompt>ceph config set osd.* ms_bind_port_max 7568</screen>

  <para>
   您需要相應地調整防火牆設定才能使其正常工作。如需詳細資訊，請參閱<xref linkend="storage-bp-net-firewall"/>。
  </para>
 </sect1>
 <sect1 xml:id="deploy-min-cluster-disable-insecure">
  <title>停用不安全的用戶端</title>

  <para>
   從 Pacific v15.2.11 起，引入了新的狀況警告來告知您允許了不安全的用戶端加入叢集。此警告預設處於<emphasis>開啟</emphasis>狀態。Ceph Dashboard 會表明叢集處於 <literal>HEALTH_WARN</literal> 狀態，在指令行上驗證叢集狀態時會告知您如下資訊：
  </para>

<screen>
<prompt>cephuser@adm &gt; </prompt>ceph status
cluster:
  id:     3fe8b35a-689f-4970-819d-0e6b11f6707c
  health: HEALTH_WARN
  mons are allowing insecure global_id reclaim
[...]
</screen>

  <para>
   此警告表示 Ceph 監控程式仍在允許未修補的舊版用戶端連接叢集。這樣可確保在升級叢集時，現有用戶端仍可連接叢集，但會警告您存在需要解決的問題。當叢集和所有用戶端都升級至最新版本的 Ceph 後，執行以下指令停用未修補的用戶端：
  </para>

<screen><prompt>cephuser@adm &gt; </prompt>ceph config set mon auth_allow_insecure_global_id_reclaim false</screen>
 </sect1>
</chapter>
